
CNC_v1.16.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002d06  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003c  00800060  00002d06  00002d9a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  0080009c  0080009c  00002dd6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002dd6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002e34  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  00002e70  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000018a0  00000000  00000000  00002f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b4e  00000000  00000000  00004808  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c44  00000000  00000000  00005356  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000328  00000000  00000000  00005f9c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005bb  00000000  00000000  000062c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002d5c  00000000  00000000  0000687f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  000095db  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 6e 00 	jmp	0xdc	; 0xdc <__ctors_end>
       4:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       8:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
       c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      14:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      18:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      1c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      20:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      24:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      28:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      2c:	0c 94 f3 0b 	jmp	0x17e6	; 0x17e6 <__vector_11>
      30:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      34:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      38:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      3c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      44:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      48:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      4c:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      50:	0c 94 8b 00 	jmp	0x116	; 0x116 <__bad_interrupt>
      54:	08 4a       	sbci	r16, 0xA8	; 168
      56:	d7 3b       	cpi	r29, 0xB7	; 183
      58:	3b ce       	rjmp	.-906    	; 0xfffffcd0 <__eeprom_end+0xff7efcd0>
      5a:	01 6e       	ori	r16, 0xE1	; 225
      5c:	84 bc       	out	0x24, r8	; 36
      5e:	bf fd       	.word	0xfdbf	; ????
      60:	c1 2f       	mov	r28, r17
      62:	3d 6c       	ori	r19, 0xCD	; 205
      64:	74 31       	cpi	r23, 0x14	; 20
      66:	9a bd       	out	0x2a, r25	; 42
      68:	56 83       	std	Z+6, r21	; 0x06
      6a:	3d da       	rcall	.-2950   	; 0xfffff4e6 <__eeprom_end+0xff7ef4e6>
      6c:	3d 00       	.word	0x003d	; ????
      6e:	c7 7f       	andi	r28, 0xF7	; 247
      70:	11 be       	out	0x31, r1	; 49
      72:	d9 e4       	ldi	r29, 0x49	; 73
      74:	bb 4c       	sbci	r27, 0xCB	; 203
      76:	3e 91       	ld	r19, -X
      78:	6b aa       	std	Y+51, r6	; 0x33
      7a:	aa be       	out	0x3a, r10	; 58
      7c:	00 00       	nop
      7e:	00 80       	ld	r0, Z
      80:	3f 05       	cpc	r19, r15
      82:	a8 4c       	sbci	r26, 0xC8	; 200
      84:	cd b2       	in	r12, 0x1d	; 29
      86:	d4 4e       	sbci	r29, 0xE4	; 228
      88:	b9 38       	cpi	r27, 0x89	; 137
      8a:	36 a9       	ldd	r19, Z+54	; 0x36
      8c:	02 0c       	add	r0, r2
      8e:	50 b9       	out	0x00, r21	; 0
      90:	91 86       	std	Z+9, r9	; 0x09
      92:	88 08       	sbc	r8, r8
      94:	3c a6       	std	Y+44, r3	; 0x2c
      96:	aa aa       	std	Y+50, r10	; 0x32
      98:	2a be       	out	0x3a, r2	; 58
      9a:	00 00       	nop
      9c:	00 80       	ld	r0, Z
      9e:	3f 00       	.word	0x003f	; ????

000000a0 <__trampolines_end>:
      a0:	4e 41       	sbci	r20, 0x1E	; 30
      a2:	4e 49       	Address 0x000000a2 is out of bounds.
.word	0xffff	; ????

000000a3 <pstr_inity>:
      a3:	49 4e 49 54 59                                      INITY

000000a8 <pstr_inf>:
      a8:	49 4e 46                                            INF

000000ab <pwr_m10>:
      ab:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      bb:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000000c3 <pwr_p10>:
      c3:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      d3:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000000dc <__ctors_end>:
      dc:	11 24       	eor	r1, r1
      de:	1f be       	out	0x3f, r1	; 63
      e0:	cf e5       	ldi	r28, 0x5F	; 95
      e2:	d4 e0       	ldi	r29, 0x04	; 4
      e4:	de bf       	out	0x3e, r29	; 62
      e6:	cd bf       	out	0x3d, r28	; 61

000000e8 <__do_copy_data>:
      e8:	10 e0       	ldi	r17, 0x00	; 0
      ea:	a0 e6       	ldi	r26, 0x60	; 96
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	e6 e0       	ldi	r30, 0x06	; 6
      f0:	fd e2       	ldi	r31, 0x2D	; 45
      f2:	02 c0       	rjmp	.+4      	; 0xf8 <__do_copy_data+0x10>
      f4:	05 90       	lpm	r0, Z+
      f6:	0d 92       	st	X+, r0
      f8:	ac 39       	cpi	r26, 0x9C	; 156
      fa:	b1 07       	cpc	r27, r17
      fc:	d9 f7       	brne	.-10     	; 0xf4 <__do_copy_data+0xc>

000000fe <__do_clear_bss>:
      fe:	20 e0       	ldi	r18, 0x00	; 0
     100:	ac e9       	ldi	r26, 0x9C	; 156
     102:	b0 e0       	ldi	r27, 0x00	; 0
     104:	01 c0       	rjmp	.+2      	; 0x108 <.do_clear_bss_start>

00000106 <.do_clear_bss_loop>:
     106:	1d 92       	st	X+, r1

00000108 <.do_clear_bss_start>:
     108:	ac 3d       	cpi	r26, 0xDC	; 220
     10a:	b2 07       	cpc	r27, r18
     10c:	e1 f7       	brne	.-8      	; 0x106 <.do_clear_bss_loop>
     10e:	0e 94 8b 0b 	call	0x1716	; 0x1716 <main>
     112:	0c 94 81 16 	jmp	0x2d02	; 0x2d02 <_exit>

00000116 <__bad_interrupt>:
     116:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000011a <getGcodeValue>:
	return gval1;
}


int16_t getGcodeValue(char *gCode, char gValue)
{
     11a:	8f 92       	push	r8
     11c:	9f 92       	push	r9
     11e:	af 92       	push	r10
     120:	bf 92       	push	r11
     122:	ef 92       	push	r14
     124:	ff 92       	push	r15
     126:	1f 93       	push	r17
     128:	cf 93       	push	r28
     12a:	df 93       	push	r29
     12c:	ec 01       	movw	r28, r24
     12e:	16 2f       	mov	r17, r22
	char *gTemp;
	gTemp = malloc(7);
     130:	87 e0       	ldi	r24, 0x07	; 7
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	0e 94 e6 10 	call	0x21cc	; 0x21cc <malloc>
     138:	7c 01       	movw	r14, r24
	uint8_t j = 0, exists = falsee;
	
	for (uint8_t i = 0; gCode[i]!= '\0'; i++){
     13a:	88 81       	ld	r24, Y
     13c:	88 23       	and	r24, r24
     13e:	e9 f0       	breq	.+58     	; 0x17a <getGcodeValue+0x60>
     140:	90 e0       	ldi	r25, 0x00	; 0
     142:	20 e0       	ldi	r18, 0x00	; 0
     144:	30 e0       	ldi	r19, 0x00	; 0
				gTemp[j] = '\0';
				break;
			}
		}
		else if (gCode[i] == gValue){
			exists = truee;
     146:	41 e0       	ldi	r20, 0x01	; 1
	char *gTemp;
	gTemp = malloc(7);
	uint8_t j = 0, exists = falsee;
	
	for (uint8_t i = 0; gCode[i]!= '\0'; i++){
		if (exists == truee){
     148:	21 30       	cpi	r18, 0x01	; 1
     14a:	69 f4       	brne	.+26     	; 0x166 <getGcodeValue+0x4c>
			if (gCode[i] != ' '){
     14c:	80 32       	cpi	r24, 0x20	; 32
     14e:	31 f0       	breq	.+12     	; 0x15c <getGcodeValue+0x42>
				gTemp[j++] = gCode[i];
     150:	f7 01       	movw	r30, r14
     152:	e3 0f       	add	r30, r19
     154:	f1 1d       	adc	r31, r1
     156:	80 83       	st	Z, r24
     158:	3f 5f       	subi	r19, 0xFF	; 255
     15a:	08 c0       	rjmp	.+16     	; 0x16c <getGcodeValue+0x52>
			}
			else{
				gTemp[j] = '\0';
     15c:	f7 01       	movw	r30, r14
     15e:	e3 0f       	add	r30, r19
     160:	f1 1d       	adc	r31, r1
     162:	10 82       	st	Z, r1
				break;
     164:	0a c0       	rjmp	.+20     	; 0x17a <getGcodeValue+0x60>
			}
		}
		else if (gCode[i] == gValue){
     166:	18 13       	cpse	r17, r24
     168:	01 c0       	rjmp	.+2      	; 0x16c <getGcodeValue+0x52>
			exists = truee;
     16a:	24 2f       	mov	r18, r20
{
	char *gTemp;
	gTemp = malloc(7);
	uint8_t j = 0, exists = falsee;
	
	for (uint8_t i = 0; gCode[i]!= '\0'; i++){
     16c:	9f 5f       	subi	r25, 0xFF	; 255
     16e:	fe 01       	movw	r30, r28
     170:	e9 0f       	add	r30, r25
     172:	f1 1d       	adc	r31, r1
     174:	80 81       	ld	r24, Z
     176:	81 11       	cpse	r24, r1
     178:	e7 cf       	rjmp	.-50     	; 0x148 <getGcodeValue+0x2e>
		else if (gCode[i] == gValue){
			exists = truee;
		}
	}
	
	uint16_t reValue = atof(gTemp) * 100;
     17a:	c7 01       	movw	r24, r14
     17c:	0e 94 07 12 	call	0x240e	; 0x240e <atof>
     180:	4b 01       	movw	r8, r22
     182:	5c 01       	movw	r10, r24
	free(gTemp);
     184:	c7 01       	movw	r24, r14
     186:	0e 94 7e 11 	call	0x22fc	; 0x22fc <free>
	return reValue;
     18a:	20 e0       	ldi	r18, 0x00	; 0
     18c:	30 e0       	ldi	r19, 0x00	; 0
     18e:	48 ec       	ldi	r20, 0xC8	; 200
     190:	52 e4       	ldi	r21, 0x42	; 66
     192:	c5 01       	movw	r24, r10
     194:	b4 01       	movw	r22, r8
     196:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     19a:	0e 94 41 0e 	call	0x1c82	; 0x1c82 <__fixunssfsi>
}
     19e:	cb 01       	movw	r24, r22
     1a0:	df 91       	pop	r29
     1a2:	cf 91       	pop	r28
     1a4:	1f 91       	pop	r17
     1a6:	ff 90       	pop	r15
     1a8:	ef 90       	pop	r14
     1aa:	bf 90       	pop	r11
     1ac:	af 90       	pop	r10
     1ae:	9f 90       	pop	r9
     1b0:	8f 90       	pop	r8
     1b2:	08 95       	ret

000001b4 <getAllGcodeValue>:
*/
#include "../include.h"
#include "gcode.h"

struct gValue getAllGcodeValue(char *gCode)
{
     1b4:	4f 92       	push	r4
     1b6:	5f 92       	push	r5
     1b8:	6f 92       	push	r6
     1ba:	7f 92       	push	r7
     1bc:	8f 92       	push	r8
     1be:	9f 92       	push	r9
     1c0:	af 92       	push	r10
     1c2:	bf 92       	push	r11
     1c4:	cf 92       	push	r12
     1c6:	df 92       	push	r13
     1c8:	ef 92       	push	r14
     1ca:	ff 92       	push	r15
     1cc:	0f 93       	push	r16
     1ce:	1f 93       	push	r17
     1d0:	cf 93       	push	r28
     1d2:	df 93       	push	r29
     1d4:	ec 01       	movw	r28, r24
     1d6:	4b 01       	movw	r8, r22
	struct gValue gval1;
	
	gval1.G = getGcodeValue(gCode, 'G') / 100;
     1d8:	67 e4       	ldi	r22, 0x47	; 71
     1da:	c4 01       	movw	r24, r8
     1dc:	0e 94 8d 00 	call	0x11a	; 0x11a <getGcodeValue>
     1e0:	5c 01       	movw	r10, r24
	gval1.X = getGcodeValue(gCode, 'X');
     1e2:	68 e5       	ldi	r22, 0x58	; 88
     1e4:	c4 01       	movw	r24, r8
     1e6:	0e 94 8d 00 	call	0x11a	; 0x11a <getGcodeValue>
     1ea:	6c 01       	movw	r12, r24
	gval1.Y = getGcodeValue(gCode, 'Y');
     1ec:	69 e5       	ldi	r22, 0x59	; 89
     1ee:	c4 01       	movw	r24, r8
     1f0:	0e 94 8d 00 	call	0x11a	; 0x11a <getGcodeValue>
     1f4:	7c 01       	movw	r14, r24
	gval1.Z = getGcodeValue(gCode, 'Z');
     1f6:	6a e5       	ldi	r22, 0x5A	; 90
     1f8:	c4 01       	movw	r24, r8
     1fa:	0e 94 8d 00 	call	0x11a	; 0x11a <getGcodeValue>
     1fe:	8c 01       	movw	r16, r24
	gval1.I = getGcodeValue(gCode, 'I');
     200:	69 e4       	ldi	r22, 0x49	; 73
     202:	c4 01       	movw	r24, r8
     204:	0e 94 8d 00 	call	0x11a	; 0x11a <getGcodeValue>
     208:	3c 01       	movw	r6, r24
	gval1.J = getGcodeValue(gCode, 'J');
     20a:	6a e4       	ldi	r22, 0x4A	; 74
     20c:	c4 01       	movw	r24, r8
     20e:	0e 94 8d 00 	call	0x11a	; 0x11a <getGcodeValue>
     212:	2c 01       	movw	r4, r24
	gval1.R = getGcodeValue(gCode, 'R');
     214:	62 e5       	ldi	r22, 0x52	; 82
     216:	c4 01       	movw	r24, r8
     218:	0e 94 8d 00 	call	0x11a	; 0x11a <getGcodeValue>
     21c:	9c 01       	movw	r18, r24
	
	return gval1;
     21e:	c5 01       	movw	r24, r10
     220:	64 e6       	ldi	r22, 0x64	; 100
     222:	70 e0       	ldi	r23, 0x00	; 0
     224:	0e 94 7d 10 	call	0x20fa	; 0x20fa <__divmodhi4>
     228:	68 83       	st	Y, r22
     22a:	b9 01       	movw	r22, r18
     22c:	33 0f       	add	r19, r19
     22e:	88 0b       	sbc	r24, r24
     230:	99 0b       	sbc	r25, r25
     232:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     236:	69 83       	std	Y+1, r22	; 0x01
     238:	7a 83       	std	Y+2, r23	; 0x02
     23a:	8b 83       	std	Y+3, r24	; 0x03
     23c:	9c 83       	std	Y+4, r25	; 0x04
     23e:	c6 01       	movw	r24, r12
     240:	dd 0c       	add	r13, r13
     242:	aa 0b       	sbc	r26, r26
     244:	bb 0b       	sbc	r27, r27
     246:	8d 83       	std	Y+5, r24	; 0x05
     248:	9e 83       	std	Y+6, r25	; 0x06
     24a:	af 83       	std	Y+7, r26	; 0x07
     24c:	b8 87       	std	Y+8, r27	; 0x08
     24e:	c7 01       	movw	r24, r14
     250:	ff 0c       	add	r15, r15
     252:	aa 0b       	sbc	r26, r26
     254:	bb 0b       	sbc	r27, r27
     256:	89 87       	std	Y+9, r24	; 0x09
     258:	9a 87       	std	Y+10, r25	; 0x0a
     25a:	ab 87       	std	Y+11, r26	; 0x0b
     25c:	bc 87       	std	Y+12, r27	; 0x0c
     25e:	01 2e       	mov	r0, r17
     260:	00 0c       	add	r0, r0
     262:	22 0b       	sbc	r18, r18
     264:	33 0b       	sbc	r19, r19
     266:	0d 87       	std	Y+13, r16	; 0x0d
     268:	1e 87       	std	Y+14, r17	; 0x0e
     26a:	2f 87       	std	Y+15, r18	; 0x0f
     26c:	38 8b       	std	Y+16, r19	; 0x10
     26e:	c3 01       	movw	r24, r6
     270:	77 0c       	add	r7, r7
     272:	aa 0b       	sbc	r26, r26
     274:	bb 0b       	sbc	r27, r27
     276:	89 8b       	std	Y+17, r24	; 0x11
     278:	9a 8b       	std	Y+18, r25	; 0x12
     27a:	ab 8b       	std	Y+19, r26	; 0x13
     27c:	bc 8b       	std	Y+20, r27	; 0x14
     27e:	05 2c       	mov	r0, r5
     280:	00 0c       	add	r0, r0
     282:	66 08       	sbc	r6, r6
     284:	77 08       	sbc	r7, r7
     286:	4d 8a       	std	Y+21, r4	; 0x15
     288:	5e 8a       	std	Y+22, r5	; 0x16
     28a:	6f 8a       	std	Y+23, r6	; 0x17
     28c:	78 8e       	std	Y+24, r7	; 0x18
}
     28e:	ce 01       	movw	r24, r28
     290:	df 91       	pop	r29
     292:	cf 91       	pop	r28
     294:	1f 91       	pop	r17
     296:	0f 91       	pop	r16
     298:	ff 90       	pop	r15
     29a:	ef 90       	pop	r14
     29c:	df 90       	pop	r13
     29e:	cf 90       	pop	r12
     2a0:	bf 90       	pop	r11
     2a2:	af 90       	pop	r10
     2a4:	9f 90       	pop	r9
     2a6:	8f 90       	pop	r8
     2a8:	7f 90       	pop	r7
     2aa:	6f 90       	pop	r6
     2ac:	5f 90       	pop	r5
     2ae:	4f 90       	pop	r4
     2b0:	08 95       	ret

000002b2 <draw>:
	float y;
	float angle;
};

struct point draw(struct gValue gVal1, struct point pntStart)
{
     2b2:	2f 92       	push	r2
     2b4:	3f 92       	push	r3
     2b6:	4f 92       	push	r4
     2b8:	5f 92       	push	r5
     2ba:	6f 92       	push	r6
     2bc:	7f 92       	push	r7
     2be:	8f 92       	push	r8
     2c0:	9f 92       	push	r9
     2c2:	af 92       	push	r10
     2c4:	bf 92       	push	r11
     2c6:	cf 92       	push	r12
     2c8:	df 92       	push	r13
     2ca:	ef 92       	push	r14
     2cc:	ff 92       	push	r15
     2ce:	0f 93       	push	r16
     2d0:	1f 93       	push	r17
     2d2:	cf 93       	push	r28
     2d4:	df 93       	push	r29
     2d6:	cd b7       	in	r28, 0x3d	; 61
     2d8:	de b7       	in	r29, 0x3e	; 62
     2da:	af 97       	sbiw	r28, 0x2f	; 47
     2dc:	0f b6       	in	r0, 0x3f	; 63
     2de:	f8 94       	cli
     2e0:	de bf       	out	0x3e, r29	; 62
     2e2:	0f be       	out	0x3f, r0	; 63
     2e4:	cd bf       	out	0x3d, r28	; 61
     2e6:	9b 8f       	std	Y+27, r25	; 0x1b
     2e8:	8a 8f       	std	Y+26, r24	; 0x1a
     2ea:	a6 96       	adiw	r28, 0x26	; 38
     2ec:	9f ac       	ldd	r9, Y+63	; 0x3f
     2ee:	a6 97       	sbiw	r28, 0x26	; 38
     2f0:	a7 96       	adiw	r28, 0x27	; 39
     2f2:	bf ac       	ldd	r11, Y+63	; 0x3f
     2f4:	a7 97       	sbiw	r28, 0x27	; 39
     2f6:	a8 96       	adiw	r28, 0x28	; 40
     2f8:	1f ad       	ldd	r17, Y+63	; 0x3f
     2fa:	a8 97       	sbiw	r28, 0x28	; 40
     2fc:	a9 96       	adiw	r28, 0x29	; 41
     2fe:	0f ad       	ldd	r16, Y+63	; 0x3f
     300:	a9 97       	sbiw	r28, 0x29	; 41
     302:	aa 96       	adiw	r28, 0x2a	; 42
     304:	3f ac       	ldd	r3, Y+63	; 0x3f
     306:	aa 97       	sbiw	r28, 0x2a	; 42
     308:	ab 96       	adiw	r28, 0x2b	; 43
     30a:	2f ac       	ldd	r2, Y+63	; 0x3f
     30c:	ab 97       	sbiw	r28, 0x2b	; 43
     30e:	ac 96       	adiw	r28, 0x2c	; 44
     310:	8f ac       	ldd	r8, Y+63	; 0x3f
     312:	ac 97       	sbiw	r28, 0x2c	; 44
     314:	ad 96       	adiw	r28, 0x2d	; 45
     316:	af ac       	ldd	r10, Y+63	; 0x3f
     318:	ad 97       	sbiw	r28, 0x2d	; 45
     31a:	e1 96       	adiw	r28, 0x31	; 49
     31c:	cc ac       	ldd	r12, Y+60	; 0x3c
     31e:	dd ac       	ldd	r13, Y+61	; 0x3d
     320:	ee ac       	ldd	r14, Y+62	; 0x3e
     322:	ff ac       	ldd	r15, Y+63	; 0x3f
     324:	e1 97       	sbiw	r28, 0x31	; 49
	pntPre.x = pntStart.x;
	pntPre.y = pntStart.y;

	int32_t anglePre;
	// diem cuoi cung cua lenh
	pntEnd.x = gVal1.X;
     326:	2d 96       	adiw	r28, 0x0d	; 13
     328:	6c ad       	ldd	r22, Y+60	; 0x3c
     32a:	7d ad       	ldd	r23, Y+61	; 0x3d
     32c:	8e ad       	ldd	r24, Y+62	; 0x3e
     32e:	9f ad       	ldd	r25, Y+63	; 0x3f
     330:	2d 97       	sbiw	r28, 0x0d	; 13
     332:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     336:	6c 8f       	std	Y+28, r22	; 0x1c
     338:	7d 8f       	std	Y+29, r23	; 0x1d
     33a:	8e 8f       	std	Y+30, r24	; 0x1e
     33c:	9f 8f       	std	Y+31, r25	; 0x1f
	pntEnd.y = gVal1.Y;
     33e:	61 96       	adiw	r28, 0x11	; 17
     340:	6c ad       	ldd	r22, Y+60	; 0x3c
     342:	7d ad       	ldd	r23, Y+61	; 0x3d
     344:	8e ad       	ldd	r24, Y+62	; 0x3e
     346:	9f ad       	ldd	r25, Y+63	; 0x3f
     348:	61 97       	sbiw	r28, 0x11	; 17
     34a:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     34e:	6c a3       	std	Y+36, r22	; 0x24
     350:	7d a3       	std	Y+37, r23	; 0x25
     352:	8e a3       	std	Y+38, r24	; 0x26
     354:	9f a3       	std	Y+39, r25	; 0x27

	// neu 2 diem trung nhau thi bo qua

	#warning "them phan tra ve ma loi"
	if (pntStart.x == pntEnd.x && pntStart.y == pntEnd.y) return  pntStart;
     356:	29 2d       	mov	r18, r9
     358:	3b 2d       	mov	r19, r11
     35a:	41 2f       	mov	r20, r17
     35c:	50 2f       	mov	r21, r16
     35e:	6c 8d       	ldd	r22, Y+28	; 0x1c
     360:	7d 8d       	ldd	r23, Y+29	; 0x1d
     362:	8e 8d       	ldd	r24, Y+30	; 0x1e
     364:	9f 8d       	ldd	r25, Y+31	; 0x1f
     366:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     36a:	81 11       	cpse	r24, r1
     36c:	24 c0       	rjmp	.+72     	; 0x3b6 <draw+0x104>
     36e:	23 2d       	mov	r18, r3
     370:	32 2d       	mov	r19, r2
     372:	48 2d       	mov	r20, r8
     374:	5a 2d       	mov	r21, r10
     376:	6c a1       	ldd	r22, Y+36	; 0x24
     378:	7d a1       	ldd	r23, Y+37	; 0x25
     37a:	8e a1       	ldd	r24, Y+38	; 0x26
     37c:	9f a1       	ldd	r25, Y+39	; 0x27
     37e:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     382:	81 11       	cpse	r24, r1
     384:	18 c0       	rjmp	.+48     	; 0x3b6 <draw+0x104>
     386:	89 2d       	mov	r24, r9
     388:	9b 2d       	mov	r25, r11
     38a:	a1 2f       	mov	r26, r17
     38c:	b0 2f       	mov	r27, r16
     38e:	ea 8d       	ldd	r30, Y+26	; 0x1a
     390:	fb 8d       	ldd	r31, Y+27	; 0x1b
     392:	80 83       	st	Z, r24
     394:	91 83       	std	Z+1, r25	; 0x01
     396:	a2 83       	std	Z+2, r26	; 0x02
     398:	b3 83       	std	Z+3, r27	; 0x03
     39a:	83 2d       	mov	r24, r3
     39c:	92 2d       	mov	r25, r2
     39e:	a8 2d       	mov	r26, r8
     3a0:	ba 2d       	mov	r27, r10
     3a2:	84 83       	std	Z+4, r24	; 0x04
     3a4:	95 83       	std	Z+5, r25	; 0x05
     3a6:	a6 83       	std	Z+6, r26	; 0x06
     3a8:	b7 83       	std	Z+7, r27	; 0x07
     3aa:	c0 86       	std	Z+8, r12	; 0x08
     3ac:	d1 86       	std	Z+9, r13	; 0x09
     3ae:	e2 86       	std	Z+10, r14	; 0x0a
     3b0:	f3 86       	std	Z+11, r15	; 0x0b
     3b2:	0c 94 70 0b 	jmp	0x16e0	; 0x16e0 <__stack+0x1281>
     3b6:	25 96       	adiw	r28, 0x05	; 5
     3b8:	8f ad       	ldd	r24, Y+63	; 0x3f
     3ba:	25 97       	sbiw	r28, 0x05	; 5

	if (gVal1.G == CNC_LINEAR_FAST || gVal1.G == CNC_LINEAR_FEED)// noi suy tuyen tinh
     3bc:	82 30       	cpi	r24, 0x02	; 2
     3be:	08 f0       	brcs	.+2      	; 0x3c2 <draw+0x110>
     3c0:	4c c3       	rjmp	.+1688   	; 0xa5a <__stack+0x5fb>

		// bien dem delta dung cho G00, G01
		int32_t deltaL;

		// goc cua duong thang
		line1.angle = 180 * atan2(pntEnd.y - pntStart.y, pntEnd.x - pntStart.x) / M_PI;
     3c2:	29 2d       	mov	r18, r9
     3c4:	3b 2d       	mov	r19, r11
     3c6:	41 2f       	mov	r20, r17
     3c8:	50 2f       	mov	r21, r16
     3ca:	6c 8d       	ldd	r22, Y+28	; 0x1c
     3cc:	7d 8d       	ldd	r23, Y+29	; 0x1d
     3ce:	8e 8d       	ldd	r24, Y+30	; 0x1e
     3d0:	9f 8d       	ldd	r25, Y+31	; 0x1f
     3d2:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     3d6:	2b 01       	movw	r4, r22
     3d8:	3c 01       	movw	r6, r24
     3da:	23 2d       	mov	r18, r3
     3dc:	32 2d       	mov	r19, r2
     3de:	48 2d       	mov	r20, r8
     3e0:	5a 2d       	mov	r21, r10
     3e2:	6c a1       	ldd	r22, Y+36	; 0x24
     3e4:	7d a1       	ldd	r23, Y+37	; 0x25
     3e6:	8e a1       	ldd	r24, Y+38	; 0x26
     3e8:	9f a1       	ldd	r25, Y+39	; 0x27
     3ea:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     3ee:	69 83       	std	Y+1, r22	; 0x01
     3f0:	7a 83       	std	Y+2, r23	; 0x02
     3f2:	8b 83       	std	Y+3, r24	; 0x03
     3f4:	9c 83       	std	Y+4, r25	; 0x04
     3f6:	a3 01       	movw	r20, r6
     3f8:	92 01       	movw	r18, r4
     3fa:	0e 94 5f 0d 	call	0x1abe	; 0x1abe <atan2>
     3fe:	20 e0       	ldi	r18, 0x00	; 0
     400:	30 e0       	ldi	r19, 0x00	; 0
     402:	44 e3       	ldi	r20, 0x34	; 52
     404:	53 e4       	ldi	r21, 0x43	; 67
     406:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     40a:	2b ed       	ldi	r18, 0xDB	; 219
     40c:	3f e0       	ldi	r19, 0x0F	; 15
     40e:	49 e4       	ldi	r20, 0x49	; 73
     410:	50 e4       	ldi	r21, 0x40	; 64
     412:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
     416:	6b 01       	movw	r12, r22
     418:	7c 01       	movw	r14, r24
		if ((line1.angle > 45 && line1.angle < 135) || (line1.angle < -45 && line1.angle > -135))// duong thang x = Ay + B
     41a:	20 e0       	ldi	r18, 0x00	; 0
     41c:	30 e0       	ldi	r19, 0x00	; 0
     41e:	44 e3       	ldi	r20, 0x34	; 52
     420:	52 e4       	ldi	r21, 0x42	; 66
     422:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
     426:	18 16       	cp	r1, r24
     428:	54 f4       	brge	.+20     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     42a:	20 e0       	ldi	r18, 0x00	; 0
     42c:	30 e0       	ldi	r19, 0x00	; 0
     42e:	47 e0       	ldi	r20, 0x07	; 7
     430:	53 e4       	ldi	r21, 0x43	; 67
     432:	c7 01       	movw	r24, r14
     434:	b6 01       	movw	r22, r12
     436:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     43a:	88 23       	and	r24, r24
     43c:	b4 f0       	brlt	.+44     	; 0x46a <__stack+0xb>
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	44 e3       	ldi	r20, 0x34	; 52
     444:	52 ec       	ldi	r21, 0xC2	; 194
     446:	c7 01       	movw	r24, r14
     448:	b6 01       	movw	r22, r12
     44a:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     44e:	88 23       	and	r24, r24
     450:	0c f0       	brlt	.+2      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
     452:	8d c1       	rjmp	.+794    	; 0x76e <__stack+0x30f>
     454:	20 e0       	ldi	r18, 0x00	; 0
     456:	30 e0       	ldi	r19, 0x00	; 0
     458:	47 e0       	ldi	r20, 0x07	; 7
     45a:	53 ec       	ldi	r21, 0xC3	; 195
     45c:	c7 01       	movw	r24, r14
     45e:	b6 01       	movw	r22, r12
     460:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
     464:	18 16       	cp	r1, r24
     466:	0c f0       	brlt	.+2      	; 0x46a <__stack+0xb>
     468:	82 c1       	rjmp	.+772    	; 0x76e <__stack+0x30f>
		{
			// tim phuong trinh duong thang
			line1.a = (pntEnd.x - pntStart.x) / (pntEnd.y - pntStart.y);// 2/3
     46a:	29 81       	ldd	r18, Y+1	; 0x01
     46c:	3a 81       	ldd	r19, Y+2	; 0x02
     46e:	4b 81       	ldd	r20, Y+3	; 0x03
     470:	5c 81       	ldd	r21, Y+4	; 0x04
     472:	c3 01       	movw	r24, r6
     474:	b2 01       	movw	r22, r4
     476:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
     47a:	6e 8b       	std	Y+22, r22	; 0x16
     47c:	7f 8b       	std	Y+23, r23	; 0x17
     47e:	88 8f       	std	Y+24, r24	; 0x18
     480:	99 8f       	std	Y+25, r25	; 0x19
			line1.b = (pntEnd.x - pntEnd.y * line1.a);//
     482:	9b 01       	movw	r18, r22
     484:	ac 01       	movw	r20, r24
     486:	6c a1       	ldd	r22, Y+36	; 0x24
     488:	7d a1       	ldd	r23, Y+37	; 0x25
     48a:	8e a1       	ldd	r24, Y+38	; 0x26
     48c:	9f a1       	ldd	r25, Y+39	; 0x27
     48e:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     492:	9b 01       	movw	r18, r22
     494:	ac 01       	movw	r20, r24
     496:	6c 8d       	ldd	r22, Y+28	; 0x1c
     498:	7d 8d       	ldd	r23, Y+29	; 0x1d
     49a:	8e 8d       	ldd	r24, Y+30	; 0x1e
     49c:	9f 8d       	ldd	r25, Y+31	; 0x1f
     49e:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     4a2:	68 a3       	std	Y+32, r22	; 0x20
     4a4:	79 a3       	std	Y+33, r23	; 0x21
     4a6:	8a a3       	std	Y+34, r24	; 0x22
     4a8:	9b a3       	std	Y+35, r25	; 0x23
			line1.y = pntStart.y;
			
			if (pntStart.y <= pntEnd.y)
     4aa:	23 2d       	mov	r18, r3
     4ac:	32 2d       	mov	r19, r2
     4ae:	48 2d       	mov	r20, r8
     4b0:	5a 2d       	mov	r21, r10
     4b2:	6c a1       	ldd	r22, Y+36	; 0x24
     4b4:	7d a1       	ldd	r23, Y+37	; 0x25
     4b6:	8e a1       	ldd	r24, Y+38	; 0x26
     4b8:	9f a1       	ldd	r25, Y+39	; 0x27
     4ba:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
     4be:	88 23       	and	r24, r24
     4c0:	0c f4       	brge	.+2      	; 0x4c4 <__stack+0x65>
     4c2:	a4 c0       	rjmp	.+328    	; 0x60c <__stack+0x1ad>
			{
				for (deltaL = line1.y; deltaL <= pntEnd.y; deltaL++)
     4c4:	63 2d       	mov	r22, r3
     4c6:	72 2d       	mov	r23, r2
     4c8:	88 2d       	mov	r24, r8
     4ca:	9a 2d       	mov	r25, r10
     4cc:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     4d0:	2b 01       	movw	r4, r22
     4d2:	3c 01       	movw	r6, r24
     4d4:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     4d8:	c6 2e       	mov	r12, r22
     4da:	f7 2e       	mov	r15, r23
     4dc:	e8 2e       	mov	r14, r24
     4de:	d9 2e       	mov	r13, r25
     4e0:	26 2f       	mov	r18, r22
     4e2:	37 2f       	mov	r19, r23
     4e4:	48 2f       	mov	r20, r24
     4e6:	59 2f       	mov	r21, r25
     4e8:	6c a1       	ldd	r22, Y+36	; 0x24
     4ea:	7d a1       	ldd	r23, Y+37	; 0x25
     4ec:	8e a1       	ldd	r24, Y+38	; 0x26
     4ee:	9f a1       	ldd	r25, Y+39	; 0x27
     4f0:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
     4f4:	88 23       	and	r24, r24
     4f6:	3c f4       	brge	.+14     	; 0x506 <__stack+0xa7>
     4f8:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__stack+0x1227>
     4fc:	3c 2c       	mov	r3, r12
     4fe:	8d 2c       	mov	r8, r13
     500:	9e 2c       	mov	r9, r14
     502:	2f 2c       	mov	r2, r15
     504:	0c c0       	rjmp	.+24     	; 0x51e <__stack+0xbf>
				{
					pntCur.x = (int32_t)(line1.a * deltaL + line1.b);
					pntCur.y = deltaL;
					stepper_ctrl(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
					if (deltaL % 100 == 0)
     506:	39 82       	std	Y+1, r3	; 0x01
     508:	2d 82       	std	Y+5, r2	; 0x05
     50a:	89 86       	std	Y+9, r8	; 0x09
     50c:	a9 8a       	std	Y+17, r10	; 0x11
     50e:	9a 8a       	std	Y+18, r9	; 0x12
     510:	bb 8a       	std	Y+19, r11	; 0x13
     512:	1c 8b       	std	Y+20, r17	; 0x14
     514:	0d 8b       	std	Y+21, r16	; 0x15
     516:	3c 2c       	mov	r3, r12
     518:	8f 2c       	mov	r8, r15
     51a:	9e 2c       	mov	r9, r14
     51c:	2d 2c       	mov	r2, r13
			
			if (pntStart.y <= pntEnd.y)
			{
				for (deltaL = line1.y; deltaL <= pntEnd.y; deltaL++)
				{
					pntCur.x = (int32_t)(line1.a * deltaL + line1.b);
     51e:	23 2d       	mov	r18, r3
     520:	38 2d       	mov	r19, r8
     522:	49 2d       	mov	r20, r9
     524:	52 2d       	mov	r21, r2
     526:	6e 89       	ldd	r22, Y+22	; 0x16
     528:	7f 89       	ldd	r23, Y+23	; 0x17
     52a:	88 8d       	ldd	r24, Y+24	; 0x18
     52c:	99 8d       	ldd	r25, Y+25	; 0x19
     52e:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     532:	28 a1       	ldd	r18, Y+32	; 0x20
     534:	39 a1       	ldd	r19, Y+33	; 0x21
     536:	4a a1       	ldd	r20, Y+34	; 0x22
     538:	5b a1       	ldd	r21, Y+35	; 0x23
     53a:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     53e:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     542:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     546:	16 2f       	mov	r17, r22
     548:	07 2f       	mov	r16, r23
     54a:	b8 2e       	mov	r11, r24
     54c:	a9 2e       	mov	r10, r25
					pntCur.y = deltaL;
					stepper_ctrl(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
     54e:	29 81       	ldd	r18, Y+1	; 0x01
     550:	3d 81       	ldd	r19, Y+5	; 0x05
     552:	49 85       	ldd	r20, Y+9	; 0x09
     554:	59 89       	ldd	r21, Y+17	; 0x11
     556:	63 2d       	mov	r22, r3
     558:	78 2d       	mov	r23, r8
     55a:	89 2d       	mov	r24, r9
     55c:	92 2d       	mov	r25, r2
     55e:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     562:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     566:	f6 2e       	mov	r15, r22
     568:	2a 89       	ldd	r18, Y+18	; 0x12
     56a:	3b 89       	ldd	r19, Y+19	; 0x13
     56c:	4c 89       	ldd	r20, Y+20	; 0x14
     56e:	5d 89       	ldd	r21, Y+21	; 0x15
     570:	61 2f       	mov	r22, r17
     572:	70 2f       	mov	r23, r16
     574:	8b 2d       	mov	r24, r11
     576:	9a 2d       	mov	r25, r10
     578:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     57c:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     580:	86 2f       	mov	r24, r22
     582:	6f 2d       	mov	r22, r15
     584:	0e 94 2b 0c 	call	0x1856	; 0x1856 <stepper_ctrl>
					if (deltaL % 100 == 0)
     588:	c3 01       	movw	r24, r6
     58a:	b2 01       	movw	r22, r4
     58c:	24 e6       	ldi	r18, 0x64	; 100
     58e:	30 e0       	ldi	r19, 0x00	; 0
     590:	40 e0       	ldi	r20, 0x00	; 0
     592:	50 e0       	ldi	r21, 0x00	; 0
     594:	0e 94 b3 10 	call	0x2166	; 0x2166 <__divmodsi4>
     598:	67 2b       	or	r22, r23
     59a:	68 2b       	or	r22, r24
     59c:	69 2b       	or	r22, r25
     59e:	91 f4       	brne	.+36     	; 0x5c4 <__stack+0x165>
					{
						UART_printXY(pntCur.x, pntCur.y);
     5a0:	63 2d       	mov	r22, r3
     5a2:	78 2d       	mov	r23, r8
     5a4:	89 2d       	mov	r24, r9
     5a6:	92 2d       	mov	r25, r2
     5a8:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     5ac:	6b 01       	movw	r12, r22
     5ae:	7c 01       	movw	r14, r24
     5b0:	61 2f       	mov	r22, r17
     5b2:	70 2f       	mov	r23, r16
     5b4:	8b 2d       	mov	r24, r11
     5b6:	9a 2d       	mov	r25, r10
     5b8:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     5bc:	a7 01       	movw	r20, r14
     5be:	96 01       	movw	r18, r12
     5c0:	0e 94 ba 0c 	call	0x1974	; 0x1974 <UART_printXY>
			line1.b = (pntEnd.x - pntEnd.y * line1.a);//
			line1.y = pntStart.y;
			
			if (pntStart.y <= pntEnd.y)
			{
				for (deltaL = line1.y; deltaL <= pntEnd.y; deltaL++)
     5c4:	bf ef       	ldi	r27, 0xFF	; 255
     5c6:	4b 1a       	sub	r4, r27
     5c8:	5b 0a       	sbc	r5, r27
     5ca:	6b 0a       	sbc	r6, r27
     5cc:	7b 0a       	sbc	r7, r27
     5ce:	c3 01       	movw	r24, r6
     5d0:	b2 01       	movw	r22, r4
     5d2:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     5d6:	c6 2e       	mov	r12, r22
     5d8:	d7 2e       	mov	r13, r23
     5da:	e8 2e       	mov	r14, r24
     5dc:	f9 2e       	mov	r15, r25
     5de:	39 82       	std	Y+1, r3	; 0x01
     5e0:	8d 82       	std	Y+5, r8	; 0x05
     5e2:	99 86       	std	Y+9, r9	; 0x09
     5e4:	29 8a       	std	Y+17, r2	; 0x11
					stepper_ctrl(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
					if (deltaL % 100 == 0)
					{
						UART_printXY(pntCur.x, pntCur.y);
					}
					pntPre.x = pntCur.x;
     5e6:	1a 8b       	std	Y+18, r17	; 0x12
     5e8:	0b 8b       	std	Y+19, r16	; 0x13
     5ea:	bc 8a       	std	Y+20, r11	; 0x14
     5ec:	ad 8a       	std	Y+21, r10	; 0x15
			line1.b = (pntEnd.x - pntEnd.y * line1.a);//
			line1.y = pntStart.y;
			
			if (pntStart.y <= pntEnd.y)
			{
				for (deltaL = line1.y; deltaL <= pntEnd.y; deltaL++)
     5ee:	26 2f       	mov	r18, r22
     5f0:	37 2f       	mov	r19, r23
     5f2:	48 2f       	mov	r20, r24
     5f4:	59 2f       	mov	r21, r25
     5f6:	6c a1       	ldd	r22, Y+36	; 0x24
     5f8:	7d a1       	ldd	r23, Y+37	; 0x25
     5fa:	8e a1       	ldd	r24, Y+38	; 0x26
     5fc:	9f a1       	ldd	r25, Y+39	; 0x27
     5fe:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
     602:	88 23       	and	r24, r24
     604:	0c f0       	brlt	.+2      	; 0x608 <__stack+0x1a9>
     606:	7a cf       	rjmp	.-268    	; 0x4fc <__stack+0x9d>
     608:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__stack+0x1227>
					}
					pntPre.x = pntCur.x;
					pntPre.y = pntCur.y;
				}
			}
			else if (pntStart.y > pntEnd.y)
     60c:	23 2d       	mov	r18, r3
     60e:	32 2d       	mov	r19, r2
     610:	48 2d       	mov	r20, r8
     612:	5a 2d       	mov	r21, r10
     614:	6c a1       	ldd	r22, Y+36	; 0x24
     616:	7d a1       	ldd	r23, Y+37	; 0x25
     618:	8e a1       	ldd	r24, Y+38	; 0x26
     61a:	9f a1       	ldd	r25, Y+39	; 0x27
     61c:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     620:	88 23       	and	r24, r24
     622:	14 f0       	brlt	.+4      	; 0x628 <__stack+0x1c9>
     624:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__stack+0x1227>
			{
				for (deltaL = line1.y; deltaL >= pntEnd.y; deltaL--)
     628:	63 2d       	mov	r22, r3
     62a:	72 2d       	mov	r23, r2
     62c:	88 2d       	mov	r24, r8
     62e:	9a 2d       	mov	r25, r10
     630:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     634:	2b 01       	movw	r4, r22
     636:	3c 01       	movw	r6, r24
     638:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     63c:	c6 2e       	mov	r12, r22
     63e:	f7 2e       	mov	r15, r23
     640:	e8 2e       	mov	r14, r24
     642:	d9 2e       	mov	r13, r25
     644:	26 2f       	mov	r18, r22
     646:	37 2f       	mov	r19, r23
     648:	48 2f       	mov	r20, r24
     64a:	59 2f       	mov	r21, r25
     64c:	6c a1       	ldd	r22, Y+36	; 0x24
     64e:	7d a1       	ldd	r23, Y+37	; 0x25
     650:	8e a1       	ldd	r24, Y+38	; 0x26
     652:	9f a1       	ldd	r25, Y+39	; 0x27
     654:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     658:	18 16       	cp	r1, r24
     65a:	3c f4       	brge	.+14     	; 0x66a <__stack+0x20b>
     65c:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__stack+0x1227>
     660:	3c 2c       	mov	r3, r12
     662:	8d 2c       	mov	r8, r13
     664:	9e 2c       	mov	r9, r14
     666:	2f 2c       	mov	r2, r15
     668:	0c c0       	rjmp	.+24     	; 0x682 <__stack+0x223>
				{
					pntCur.x = (int32_t)(line1.a * deltaL + line1.b);
					pntCur.y = deltaL;
					stepper_ctrl(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
					if (deltaL % 100 == 0)
     66a:	39 82       	std	Y+1, r3	; 0x01
     66c:	3c 2c       	mov	r3, r12
     66e:	2d 82       	std	Y+5, r2	; 0x05
     670:	2d 2c       	mov	r2, r13
     672:	89 86       	std	Y+9, r8	; 0x09
     674:	8f 2c       	mov	r8, r15
     676:	a9 8a       	std	Y+17, r10	; 0x11
     678:	9a 8a       	std	Y+18, r9	; 0x12
     67a:	9e 2c       	mov	r9, r14
     67c:	bb 8a       	std	Y+19, r11	; 0x13
     67e:	1c 8b       	std	Y+20, r17	; 0x14
     680:	0d 8b       	std	Y+21, r16	; 0x15
			}
			else if (pntStart.y > pntEnd.y)
			{
				for (deltaL = line1.y; deltaL >= pntEnd.y; deltaL--)
				{
					pntCur.x = (int32_t)(line1.a * deltaL + line1.b);
     682:	23 2d       	mov	r18, r3
     684:	38 2d       	mov	r19, r8
     686:	49 2d       	mov	r20, r9
     688:	52 2d       	mov	r21, r2
     68a:	6e 89       	ldd	r22, Y+22	; 0x16
     68c:	7f 89       	ldd	r23, Y+23	; 0x17
     68e:	88 8d       	ldd	r24, Y+24	; 0x18
     690:	99 8d       	ldd	r25, Y+25	; 0x19
     692:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     696:	28 a1       	ldd	r18, Y+32	; 0x20
     698:	39 a1       	ldd	r19, Y+33	; 0x21
     69a:	4a a1       	ldd	r20, Y+34	; 0x22
     69c:	5b a1       	ldd	r21, Y+35	; 0x23
     69e:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     6a2:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     6a6:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     6aa:	16 2f       	mov	r17, r22
     6ac:	07 2f       	mov	r16, r23
     6ae:	b8 2e       	mov	r11, r24
     6b0:	a9 2e       	mov	r10, r25
					pntCur.y = deltaL;
					stepper_ctrl(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
     6b2:	29 81       	ldd	r18, Y+1	; 0x01
     6b4:	3d 81       	ldd	r19, Y+5	; 0x05
     6b6:	49 85       	ldd	r20, Y+9	; 0x09
     6b8:	59 89       	ldd	r21, Y+17	; 0x11
     6ba:	63 2d       	mov	r22, r3
     6bc:	78 2d       	mov	r23, r8
     6be:	89 2d       	mov	r24, r9
     6c0:	92 2d       	mov	r25, r2
     6c2:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     6c6:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     6ca:	f6 2e       	mov	r15, r22
     6cc:	2a 89       	ldd	r18, Y+18	; 0x12
     6ce:	3b 89       	ldd	r19, Y+19	; 0x13
     6d0:	4c 89       	ldd	r20, Y+20	; 0x14
     6d2:	5d 89       	ldd	r21, Y+21	; 0x15
     6d4:	61 2f       	mov	r22, r17
     6d6:	70 2f       	mov	r23, r16
     6d8:	8b 2d       	mov	r24, r11
     6da:	9a 2d       	mov	r25, r10
     6dc:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     6e0:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     6e4:	86 2f       	mov	r24, r22
     6e6:	6f 2d       	mov	r22, r15
     6e8:	0e 94 2b 0c 	call	0x1856	; 0x1856 <stepper_ctrl>
					if (deltaL % 100 == 0)
     6ec:	c3 01       	movw	r24, r6
     6ee:	b2 01       	movw	r22, r4
     6f0:	24 e6       	ldi	r18, 0x64	; 100
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	40 e0       	ldi	r20, 0x00	; 0
     6f6:	50 e0       	ldi	r21, 0x00	; 0
     6f8:	0e 94 b3 10 	call	0x2166	; 0x2166 <__divmodsi4>
     6fc:	67 2b       	or	r22, r23
     6fe:	68 2b       	or	r22, r24
     700:	69 2b       	or	r22, r25
     702:	91 f4       	brne	.+36     	; 0x728 <__stack+0x2c9>
					{
						UART_printXY(pntCur.x, pntCur.y);
     704:	63 2d       	mov	r22, r3
     706:	78 2d       	mov	r23, r8
     708:	89 2d       	mov	r24, r9
     70a:	92 2d       	mov	r25, r2
     70c:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     710:	6b 01       	movw	r12, r22
     712:	7c 01       	movw	r14, r24
     714:	61 2f       	mov	r22, r17
     716:	70 2f       	mov	r23, r16
     718:	8b 2d       	mov	r24, r11
     71a:	9a 2d       	mov	r25, r10
     71c:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     720:	a7 01       	movw	r20, r14
     722:	96 01       	movw	r18, r12
     724:	0e 94 ba 0c 	call	0x1974	; 0x1974 <UART_printXY>
					pntPre.y = pntCur.y;
				}
			}
			else if (pntStart.y > pntEnd.y)
			{
				for (deltaL = line1.y; deltaL >= pntEnd.y; deltaL--)
     728:	e1 e0       	ldi	r30, 0x01	; 1
     72a:	4e 1a       	sub	r4, r30
     72c:	51 08       	sbc	r5, r1
     72e:	61 08       	sbc	r6, r1
     730:	71 08       	sbc	r7, r1
     732:	c3 01       	movw	r24, r6
     734:	b2 01       	movw	r22, r4
     736:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     73a:	c6 2e       	mov	r12, r22
     73c:	d7 2e       	mov	r13, r23
     73e:	e8 2e       	mov	r14, r24
     740:	f9 2e       	mov	r15, r25
     742:	39 82       	std	Y+1, r3	; 0x01
     744:	8d 82       	std	Y+5, r8	; 0x05
     746:	99 86       	std	Y+9, r9	; 0x09
     748:	29 8a       	std	Y+17, r2	; 0x11
					stepper_ctrl(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
					if (deltaL % 100 == 0)
					{
						UART_printXY(pntCur.x, pntCur.y);
					}
					pntPre.x = pntCur.x;
     74a:	1a 8b       	std	Y+18, r17	; 0x12
     74c:	0b 8b       	std	Y+19, r16	; 0x13
     74e:	bc 8a       	std	Y+20, r11	; 0x14
     750:	ad 8a       	std	Y+21, r10	; 0x15
					pntPre.y = pntCur.y;
				}
			}
			else if (pntStart.y > pntEnd.y)
			{
				for (deltaL = line1.y; deltaL >= pntEnd.y; deltaL--)
     752:	26 2f       	mov	r18, r22
     754:	37 2f       	mov	r19, r23
     756:	48 2f       	mov	r20, r24
     758:	59 2f       	mov	r21, r25
     75a:	6c a1       	ldd	r22, Y+36	; 0x24
     75c:	7d a1       	ldd	r23, Y+37	; 0x25
     75e:	8e a1       	ldd	r24, Y+38	; 0x26
     760:	9f a1       	ldd	r25, Y+39	; 0x27
     762:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     766:	18 16       	cp	r1, r24
     768:	0c f0       	brlt	.+2      	; 0x76c <__stack+0x30d>
     76a:	7a cf       	rjmp	.-268    	; 0x660 <__stack+0x201>
     76c:	8c c7       	rjmp	.+3864   	; 0x1686 <__stack+0x1227>
			}
		}
		else// duong thang y = ax + b
		{
			// tim phuong trinh duong thang
			line1.a = (pntEnd.y - pntStart.y) / (pntEnd.x - pntStart.x);
     76e:	a3 01       	movw	r20, r6
     770:	92 01       	movw	r18, r4
     772:	69 81       	ldd	r22, Y+1	; 0x01
     774:	7a 81       	ldd	r23, Y+2	; 0x02
     776:	8b 81       	ldd	r24, Y+3	; 0x03
     778:	9c 81       	ldd	r25, Y+4	; 0x04
     77a:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
     77e:	6e 8b       	std	Y+22, r22	; 0x16
     780:	7f 8b       	std	Y+23, r23	; 0x17
     782:	88 8f       	std	Y+24, r24	; 0x18
     784:	99 8f       	std	Y+25, r25	; 0x19
			line1.b = pntEnd.y - pntEnd.x * line1.a;
     786:	9b 01       	movw	r18, r22
     788:	ac 01       	movw	r20, r24
     78a:	6c 8d       	ldd	r22, Y+28	; 0x1c
     78c:	7d 8d       	ldd	r23, Y+29	; 0x1d
     78e:	8e 8d       	ldd	r24, Y+30	; 0x1e
     790:	9f 8d       	ldd	r25, Y+31	; 0x1f
     792:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     796:	9b 01       	movw	r18, r22
     798:	ac 01       	movw	r20, r24
     79a:	6c a1       	ldd	r22, Y+36	; 0x24
     79c:	7d a1       	ldd	r23, Y+37	; 0x25
     79e:	8e a1       	ldd	r24, Y+38	; 0x26
     7a0:	9f a1       	ldd	r25, Y+39	; 0x27
     7a2:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     7a6:	68 a3       	std	Y+32, r22	; 0x20
     7a8:	79 a3       	std	Y+33, r23	; 0x21
     7aa:	8a a3       	std	Y+34, r24	; 0x22
     7ac:	9b a3       	std	Y+35, r25	; 0x23
			line1.x = pntStart.x;
			
			if (pntStart.x <= pntEnd.x)
     7ae:	29 2d       	mov	r18, r9
     7b0:	3b 2d       	mov	r19, r11
     7b2:	41 2f       	mov	r20, r17
     7b4:	50 2f       	mov	r21, r16
     7b6:	6c 8d       	ldd	r22, Y+28	; 0x1c
     7b8:	7d 8d       	ldd	r23, Y+29	; 0x1d
     7ba:	8e 8d       	ldd	r24, Y+30	; 0x1e
     7bc:	9f 8d       	ldd	r25, Y+31	; 0x1f
     7be:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
     7c2:	88 23       	and	r24, r24
     7c4:	0c f4       	brge	.+2      	; 0x7c8 <__stack+0x369>
     7c6:	9e c0       	rjmp	.+316    	; 0x904 <__stack+0x4a5>
			{
				for (deltaL = line1.x; deltaL <= pntEnd.x; deltaL++)
     7c8:	69 2d       	mov	r22, r9
     7ca:	7b 2d       	mov	r23, r11
     7cc:	81 2f       	mov	r24, r17
     7ce:	90 2f       	mov	r25, r16
     7d0:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     7d4:	2b 01       	movw	r4, r22
     7d6:	3c 01       	movw	r6, r24
     7d8:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     7dc:	c6 2e       	mov	r12, r22
     7de:	f7 2e       	mov	r15, r23
     7e0:	e8 2e       	mov	r14, r24
     7e2:	d9 2e       	mov	r13, r25
     7e4:	26 2f       	mov	r18, r22
     7e6:	37 2f       	mov	r19, r23
     7e8:	48 2f       	mov	r20, r24
     7ea:	59 2f       	mov	r21, r25
     7ec:	6c 8d       	ldd	r22, Y+28	; 0x1c
     7ee:	7d 8d       	ldd	r23, Y+29	; 0x1d
     7f0:	8e 8d       	ldd	r24, Y+30	; 0x1e
     7f2:	9f 8d       	ldd	r25, Y+31	; 0x1f
     7f4:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
     7f8:	88 23       	and	r24, r24
     7fa:	34 f4       	brge	.+12     	; 0x808 <__stack+0x3a9>
     7fc:	44 c7       	rjmp	.+3720   	; 0x1686 <__stack+0x1227>
     7fe:	9c 2c       	mov	r9, r12
     800:	8d 2c       	mov	r8, r13
     802:	3e 2c       	mov	r3, r14
     804:	2f 2c       	mov	r2, r15
     806:	0c c0       	rjmp	.+24     	; 0x820 <__stack+0x3c1>
					pntCur.y = (int32_t)(line1.a * deltaL + line1.b);
					//UART_printXY(pntCur.x, pntCur.y);
					//UART_printXY(pntPre.x, pntPre.y);
					//UART_printXY(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
					stepper_ctrl(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
					if (deltaL % 100 == 0)
     808:	39 82       	std	Y+1, r3	; 0x01
     80a:	2d 82       	std	Y+5, r2	; 0x05
     80c:	89 86       	std	Y+9, r8	; 0x09
     80e:	a9 8a       	std	Y+17, r10	; 0x11
     810:	9a 8a       	std	Y+18, r9	; 0x12
     812:	bb 8a       	std	Y+19, r11	; 0x13
     814:	1c 8b       	std	Y+20, r17	; 0x14
     816:	0d 8b       	std	Y+21, r16	; 0x15
     818:	9c 2c       	mov	r9, r12
     81a:	8f 2c       	mov	r8, r15
     81c:	3e 2c       	mov	r3, r14
     81e:	2d 2c       	mov	r2, r13
			if (pntStart.x <= pntEnd.x)
			{
				for (deltaL = line1.x; deltaL <= pntEnd.x; deltaL++)
				{
					pntCur.x = deltaL;
					pntCur.y = (int32_t)(line1.a * deltaL + line1.b);
     820:	29 2d       	mov	r18, r9
     822:	38 2d       	mov	r19, r8
     824:	43 2d       	mov	r20, r3
     826:	52 2d       	mov	r21, r2
     828:	6e 89       	ldd	r22, Y+22	; 0x16
     82a:	7f 89       	ldd	r23, Y+23	; 0x17
     82c:	88 8d       	ldd	r24, Y+24	; 0x18
     82e:	99 8d       	ldd	r25, Y+25	; 0x19
     830:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     834:	28 a1       	ldd	r18, Y+32	; 0x20
     836:	39 a1       	ldd	r19, Y+33	; 0x21
     838:	4a a1       	ldd	r20, Y+34	; 0x22
     83a:	5b a1       	ldd	r21, Y+35	; 0x23
     83c:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     840:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     844:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     848:	16 2f       	mov	r17, r22
     84a:	07 2f       	mov	r16, r23
     84c:	b8 2e       	mov	r11, r24
     84e:	a9 2e       	mov	r10, r25
					//UART_printXY(pntCur.x, pntCur.y);
					//UART_printXY(pntPre.x, pntPre.y);
					//UART_printXY(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
					stepper_ctrl(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
     850:	29 81       	ldd	r18, Y+1	; 0x01
     852:	3d 81       	ldd	r19, Y+5	; 0x05
     854:	49 85       	ldd	r20, Y+9	; 0x09
     856:	59 89       	ldd	r21, Y+17	; 0x11
     858:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     85c:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     860:	f6 2e       	mov	r15, r22
     862:	2a 89       	ldd	r18, Y+18	; 0x12
     864:	3b 89       	ldd	r19, Y+19	; 0x13
     866:	4c 89       	ldd	r20, Y+20	; 0x14
     868:	5d 89       	ldd	r21, Y+21	; 0x15
     86a:	69 2d       	mov	r22, r9
     86c:	78 2d       	mov	r23, r8
     86e:	83 2d       	mov	r24, r3
     870:	92 2d       	mov	r25, r2
     872:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     876:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     87a:	86 2f       	mov	r24, r22
     87c:	6f 2d       	mov	r22, r15
     87e:	0e 94 2b 0c 	call	0x1856	; 0x1856 <stepper_ctrl>
					if (deltaL % 100 == 0)
     882:	c3 01       	movw	r24, r6
     884:	b2 01       	movw	r22, r4
     886:	24 e6       	ldi	r18, 0x64	; 100
     888:	30 e0       	ldi	r19, 0x00	; 0
     88a:	40 e0       	ldi	r20, 0x00	; 0
     88c:	50 e0       	ldi	r21, 0x00	; 0
     88e:	0e 94 b3 10 	call	0x2166	; 0x2166 <__divmodsi4>
     892:	67 2b       	or	r22, r23
     894:	68 2b       	or	r22, r24
     896:	69 2b       	or	r22, r25
     898:	91 f4       	brne	.+36     	; 0x8be <__stack+0x45f>
					{
						UART_printXY(pntCur.x, pntCur.y);
     89a:	61 2f       	mov	r22, r17
     89c:	70 2f       	mov	r23, r16
     89e:	8b 2d       	mov	r24, r11
     8a0:	9a 2d       	mov	r25, r10
     8a2:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     8a6:	6b 01       	movw	r12, r22
     8a8:	7c 01       	movw	r14, r24
     8aa:	69 2d       	mov	r22, r9
     8ac:	78 2d       	mov	r23, r8
     8ae:	83 2d       	mov	r24, r3
     8b0:	92 2d       	mov	r25, r2
     8b2:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     8b6:	a7 01       	movw	r20, r14
     8b8:	96 01       	movw	r18, r12
     8ba:	0e 94 ba 0c 	call	0x1974	; 0x1974 <UART_printXY>
			line1.b = pntEnd.y - pntEnd.x * line1.a;
			line1.x = pntStart.x;
			
			if (pntStart.x <= pntEnd.x)
			{
				for (deltaL = line1.x; deltaL <= pntEnd.x; deltaL++)
     8be:	ff ef       	ldi	r31, 0xFF	; 255
     8c0:	4f 1a       	sub	r4, r31
     8c2:	5f 0a       	sbc	r5, r31
     8c4:	6f 0a       	sbc	r6, r31
     8c6:	7f 0a       	sbc	r7, r31
     8c8:	c3 01       	movw	r24, r6
     8ca:	b2 01       	movw	r22, r4
     8cc:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     8d0:	c6 2e       	mov	r12, r22
     8d2:	d7 2e       	mov	r13, r23
     8d4:	e8 2e       	mov	r14, r24
     8d6:	f9 2e       	mov	r15, r25
					if (deltaL % 100 == 0)
					{
						UART_printXY(pntCur.x, pntCur.y);
					}
					pntPre.x = pntCur.x;
					pntPre.y = pntCur.y;
     8d8:	19 83       	std	Y+1, r17	; 0x01
     8da:	0d 83       	std	Y+5, r16	; 0x05
     8dc:	b9 86       	std	Y+9, r11	; 0x09
     8de:	a9 8a       	std	Y+17, r10	; 0x11
     8e0:	9a 8a       	std	Y+18, r9	; 0x12
     8e2:	8b 8a       	std	Y+19, r8	; 0x13
     8e4:	3c 8a       	std	Y+20, r3	; 0x14
     8e6:	2d 8a       	std	Y+21, r2	; 0x15
			line1.b = pntEnd.y - pntEnd.x * line1.a;
			line1.x = pntStart.x;
			
			if (pntStart.x <= pntEnd.x)
			{
				for (deltaL = line1.x; deltaL <= pntEnd.x; deltaL++)
     8e8:	26 2f       	mov	r18, r22
     8ea:	37 2f       	mov	r19, r23
     8ec:	48 2f       	mov	r20, r24
     8ee:	59 2f       	mov	r21, r25
     8f0:	6c 8d       	ldd	r22, Y+28	; 0x1c
     8f2:	7d 8d       	ldd	r23, Y+29	; 0x1d
     8f4:	8e 8d       	ldd	r24, Y+30	; 0x1e
     8f6:	9f 8d       	ldd	r25, Y+31	; 0x1f
     8f8:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
     8fc:	88 23       	and	r24, r24
     8fe:	0c f0       	brlt	.+2      	; 0x902 <__stack+0x4a3>
     900:	7e cf       	rjmp	.-260    	; 0x7fe <__stack+0x39f>
     902:	c1 c6       	rjmp	.+3458   	; 0x1686 <__stack+0x1227>
					}
					pntPre.x = pntCur.x;
					pntPre.y = pntCur.y;
				}
			}
			else if (pntStart.x > pntEnd.x)
     904:	29 2d       	mov	r18, r9
     906:	3b 2d       	mov	r19, r11
     908:	41 2f       	mov	r20, r17
     90a:	50 2f       	mov	r21, r16
     90c:	6c 8d       	ldd	r22, Y+28	; 0x1c
     90e:	7d 8d       	ldd	r23, Y+29	; 0x1d
     910:	8e 8d       	ldd	r24, Y+30	; 0x1e
     912:	9f 8d       	ldd	r25, Y+31	; 0x1f
     914:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     918:	88 23       	and	r24, r24
     91a:	0c f0       	brlt	.+2      	; 0x91e <__stack+0x4bf>
     91c:	b4 c6       	rjmp	.+3432   	; 0x1686 <__stack+0x1227>
			{
				for (deltaL = line1.x; deltaL >= pntEnd.x; deltaL--)
     91e:	69 2d       	mov	r22, r9
     920:	7b 2d       	mov	r23, r11
     922:	81 2f       	mov	r24, r17
     924:	90 2f       	mov	r25, r16
     926:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     92a:	2b 01       	movw	r4, r22
     92c:	3c 01       	movw	r6, r24
     92e:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     932:	c6 2e       	mov	r12, r22
     934:	f7 2e       	mov	r15, r23
     936:	e8 2e       	mov	r14, r24
     938:	d9 2e       	mov	r13, r25
     93a:	26 2f       	mov	r18, r22
     93c:	37 2f       	mov	r19, r23
     93e:	48 2f       	mov	r20, r24
     940:	59 2f       	mov	r21, r25
     942:	6c 8d       	ldd	r22, Y+28	; 0x1c
     944:	7d 8d       	ldd	r23, Y+29	; 0x1d
     946:	8e 8d       	ldd	r24, Y+30	; 0x1e
     948:	9f 8d       	ldd	r25, Y+31	; 0x1f
     94a:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     94e:	18 16       	cp	r1, r24
     950:	34 f4       	brge	.+12     	; 0x95e <__stack+0x4ff>
     952:	99 c6       	rjmp	.+3378   	; 0x1686 <__stack+0x1227>
     954:	3c 2c       	mov	r3, r12
     956:	8d 2c       	mov	r8, r13
     958:	9e 2c       	mov	r9, r14
     95a:	2f 2c       	mov	r2, r15
     95c:	0c c0       	rjmp	.+24     	; 0x976 <__stack+0x517>
				{
					pntCur.x = deltaL;
					pntCur.y = (int32_t)(line1.a * deltaL + line1.b);
					stepper_ctrl(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
					if (deltaL % 100 == 0)
     95e:	39 82       	std	Y+1, r3	; 0x01
     960:	2d 82       	std	Y+5, r2	; 0x05
     962:	89 86       	std	Y+9, r8	; 0x09
     964:	a9 8a       	std	Y+17, r10	; 0x11
     966:	9a 8a       	std	Y+18, r9	; 0x12
     968:	bb 8a       	std	Y+19, r11	; 0x13
     96a:	1c 8b       	std	Y+20, r17	; 0x14
     96c:	0d 8b       	std	Y+21, r16	; 0x15
     96e:	3c 2c       	mov	r3, r12
     970:	8f 2c       	mov	r8, r15
     972:	9e 2c       	mov	r9, r14
     974:	2d 2c       	mov	r2, r13
			else if (pntStart.x > pntEnd.x)
			{
				for (deltaL = line1.x; deltaL >= pntEnd.x; deltaL--)
				{
					pntCur.x = deltaL;
					pntCur.y = (int32_t)(line1.a * deltaL + line1.b);
     976:	23 2d       	mov	r18, r3
     978:	38 2d       	mov	r19, r8
     97a:	49 2d       	mov	r20, r9
     97c:	52 2d       	mov	r21, r2
     97e:	6e 89       	ldd	r22, Y+22	; 0x16
     980:	7f 89       	ldd	r23, Y+23	; 0x17
     982:	88 8d       	ldd	r24, Y+24	; 0x18
     984:	99 8d       	ldd	r25, Y+25	; 0x19
     986:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     98a:	28 a1       	ldd	r18, Y+32	; 0x20
     98c:	39 a1       	ldd	r19, Y+33	; 0x21
     98e:	4a a1       	ldd	r20, Y+34	; 0x22
     990:	5b a1       	ldd	r21, Y+35	; 0x23
     992:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     996:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     99a:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     99e:	16 2f       	mov	r17, r22
     9a0:	07 2f       	mov	r16, r23
     9a2:	b8 2e       	mov	r11, r24
     9a4:	a9 2e       	mov	r10, r25
					stepper_ctrl(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
     9a6:	29 81       	ldd	r18, Y+1	; 0x01
     9a8:	3d 81       	ldd	r19, Y+5	; 0x05
     9aa:	49 85       	ldd	r20, Y+9	; 0x09
     9ac:	59 89       	ldd	r21, Y+17	; 0x11
     9ae:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     9b2:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     9b6:	f6 2e       	mov	r15, r22
     9b8:	2a 89       	ldd	r18, Y+18	; 0x12
     9ba:	3b 89       	ldd	r19, Y+19	; 0x13
     9bc:	4c 89       	ldd	r20, Y+20	; 0x14
     9be:	5d 89       	ldd	r21, Y+21	; 0x15
     9c0:	63 2d       	mov	r22, r3
     9c2:	78 2d       	mov	r23, r8
     9c4:	89 2d       	mov	r24, r9
     9c6:	92 2d       	mov	r25, r2
     9c8:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     9cc:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     9d0:	86 2f       	mov	r24, r22
     9d2:	6f 2d       	mov	r22, r15
     9d4:	0e 94 2b 0c 	call	0x1856	; 0x1856 <stepper_ctrl>
					if (deltaL % 100 == 0)
     9d8:	c3 01       	movw	r24, r6
     9da:	b2 01       	movw	r22, r4
     9dc:	24 e6       	ldi	r18, 0x64	; 100
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	40 e0       	ldi	r20, 0x00	; 0
     9e2:	50 e0       	ldi	r21, 0x00	; 0
     9e4:	0e 94 b3 10 	call	0x2166	; 0x2166 <__divmodsi4>
     9e8:	67 2b       	or	r22, r23
     9ea:	68 2b       	or	r22, r24
     9ec:	69 2b       	or	r22, r25
     9ee:	91 f4       	brne	.+36     	; 0xa14 <__stack+0x5b5>
					{
						UART_printXY(pntCur.x, pntCur.y);
     9f0:	61 2f       	mov	r22, r17
     9f2:	70 2f       	mov	r23, r16
     9f4:	8b 2d       	mov	r24, r11
     9f6:	9a 2d       	mov	r25, r10
     9f8:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     9fc:	6b 01       	movw	r12, r22
     9fe:	7c 01       	movw	r14, r24
     a00:	63 2d       	mov	r22, r3
     a02:	78 2d       	mov	r23, r8
     a04:	89 2d       	mov	r24, r9
     a06:	92 2d       	mov	r25, r2
     a08:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     a0c:	a7 01       	movw	r20, r14
     a0e:	96 01       	movw	r18, r12
     a10:	0e 94 ba 0c 	call	0x1974	; 0x1974 <UART_printXY>
					pntPre.y = pntCur.y;
				}
			}
			else if (pntStart.x > pntEnd.x)
			{
				for (deltaL = line1.x; deltaL >= pntEnd.x; deltaL--)
     a14:	21 e0       	ldi	r18, 0x01	; 1
     a16:	42 1a       	sub	r4, r18
     a18:	51 08       	sbc	r5, r1
     a1a:	61 08       	sbc	r6, r1
     a1c:	71 08       	sbc	r7, r1
     a1e:	c3 01       	movw	r24, r6
     a20:	b2 01       	movw	r22, r4
     a22:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     a26:	c6 2e       	mov	r12, r22
     a28:	d7 2e       	mov	r13, r23
     a2a:	e8 2e       	mov	r14, r24
     a2c:	f9 2e       	mov	r15, r25
					if (deltaL % 100 == 0)
					{
						UART_printXY(pntCur.x, pntCur.y);
					}
					pntPre.x = pntCur.x;
					pntPre.y = pntCur.y;
     a2e:	19 83       	std	Y+1, r17	; 0x01
     a30:	0d 83       	std	Y+5, r16	; 0x05
     a32:	b9 86       	std	Y+9, r11	; 0x09
     a34:	a9 8a       	std	Y+17, r10	; 0x11
     a36:	3a 8a       	std	Y+18, r3	; 0x12
     a38:	8b 8a       	std	Y+19, r8	; 0x13
     a3a:	9c 8a       	std	Y+20, r9	; 0x14
     a3c:	2d 8a       	std	Y+21, r2	; 0x15
					pntPre.y = pntCur.y;
				}
			}
			else if (pntStart.x > pntEnd.x)
			{
				for (deltaL = line1.x; deltaL >= pntEnd.x; deltaL--)
     a3e:	26 2f       	mov	r18, r22
     a40:	37 2f       	mov	r19, r23
     a42:	48 2f       	mov	r20, r24
     a44:	59 2f       	mov	r21, r25
     a46:	6c 8d       	ldd	r22, Y+28	; 0x1c
     a48:	7d 8d       	ldd	r23, Y+29	; 0x1d
     a4a:	8e 8d       	ldd	r24, Y+30	; 0x1e
     a4c:	9f 8d       	ldd	r25, Y+31	; 0x1f
     a4e:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     a52:	18 16       	cp	r1, r24
     a54:	0c f0       	brlt	.+2      	; 0xa58 <__stack+0x5f9>
     a56:	7e cf       	rjmp	.-260    	; 0x954 <__stack+0x4f5>
     a58:	16 c6       	rjmp	.+3116   	; 0x1686 <__stack+0x1227>
     a5a:	29 96       	adiw	r28, 0x09	; 9
     a5c:	4c ac       	ldd	r4, Y+60	; 0x3c
     a5e:	5d ac       	ldd	r5, Y+61	; 0x3d
     a60:	6e ac       	ldd	r6, Y+62	; 0x3e
     a62:	7f ac       	ldd	r7, Y+63	; 0x3f
     a64:	29 97       	sbiw	r28, 0x09	; 9
     a66:	69 96       	adiw	r28, 0x19	; 25
     a68:	2c ad       	ldd	r18, Y+60	; 0x3c
     a6a:	3d ad       	ldd	r19, Y+61	; 0x3d
     a6c:	4e ad       	ldd	r20, Y+62	; 0x3e
     a6e:	5f ad       	ldd	r21, Y+63	; 0x3f
     a70:	69 97       	sbiw	r28, 0x19	; 25
     a72:	2d 83       	std	Y+5, r18	; 0x05
     a74:	3e 83       	std	Y+6, r19	; 0x06
     a76:	4f 83       	std	Y+7, r20	; 0x07
     a78:	58 87       	std	Y+8, r21	; 0x08
     a7a:	6d 96       	adiw	r28, 0x1d	; 29
     a7c:	2c ad       	ldd	r18, Y+60	; 0x3c
     a7e:	3d ad       	ldd	r19, Y+61	; 0x3d
     a80:	4e ad       	ldd	r20, Y+62	; 0x3e
     a82:	5f ad       	ldd	r21, Y+63	; 0x3f
     a84:	6d 97       	sbiw	r28, 0x1d	; 29
     a86:	29 83       	std	Y+1, r18	; 0x01
     a88:	3a 83       	std	Y+2, r19	; 0x02
     a8a:	4b 83       	std	Y+3, r20	; 0x03
     a8c:	5c 83       	std	Y+4, r21	; 0x04
					pntPre.y = pntCur.y;
				}
			}
		}
	}
	else if (gVal1.G == CNC_CIRCLE_CLW)
     a8e:	82 30       	cpi	r24, 0x02	; 2
     a90:	09 f0       	breq	.+2      	; 0xa94 <__stack+0x635>
     a92:	fb c2       	rjmp	.+1526   	; 0x108a <__stack+0xc2b>
	{
		// tim ban kinh duong tron
		if (gVal1.R == 0)
     a94:	20 e0       	ldi	r18, 0x00	; 0
     a96:	30 e0       	ldi	r19, 0x00	; 0
     a98:	a9 01       	movw	r20, r18
     a9a:	c3 01       	movw	r24, r6
     a9c:	b2 01       	movw	r22, r4
     a9e:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     aa2:	81 11       	cpse	r24, r1
     aa4:	65 c0       	rjmp	.+202    	; 0xb70 <__stack+0x711>
		{
			pntCenter.x = pntStart.x + gVal1.I;
     aa6:	6d 81       	ldd	r22, Y+5	; 0x05
     aa8:	7e 81       	ldd	r23, Y+6	; 0x06
     aaa:	8f 81       	ldd	r24, Y+7	; 0x07
     aac:	98 85       	ldd	r25, Y+8	; 0x08
     aae:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     ab2:	29 2d       	mov	r18, r9
     ab4:	3b 2d       	mov	r19, r11
     ab6:	41 2f       	mov	r20, r17
     ab8:	50 2f       	mov	r21, r16
     aba:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     abe:	68 a3       	std	Y+32, r22	; 0x20
     ac0:	79 a3       	std	Y+33, r23	; 0x21
     ac2:	8a a3       	std	Y+34, r24	; 0x22
     ac4:	9b a3       	std	Y+35, r25	; 0x23
			pntCenter.y = pntStart.y + gVal1.J;
     ac6:	69 81       	ldd	r22, Y+1	; 0x01
     ac8:	7a 81       	ldd	r23, Y+2	; 0x02
     aca:	8b 81       	ldd	r24, Y+3	; 0x03
     acc:	9c 81       	ldd	r25, Y+4	; 0x04
     ace:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     ad2:	23 2d       	mov	r18, r3
     ad4:	32 2d       	mov	r19, r2
     ad6:	48 2d       	mov	r20, r8
     ad8:	5a 2d       	mov	r21, r10
     ada:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     ade:	68 a7       	std	Y+40, r22	; 0x28
     ae0:	79 a7       	std	Y+41, r23	; 0x29
     ae2:	8a a7       	std	Y+42, r24	; 0x2a
     ae4:	9b a7       	std	Y+43, r25	; 0x2b
			gVal1.R = sqrt((pntStart.x - pntCenter.x) * (pntStart.x - pntCenter.x) + (pntStart.y - pntCenter.y) * (pntStart.y - pntCenter.y));
     ae6:	28 a1       	ldd	r18, Y+32	; 0x20
     ae8:	39 a1       	ldd	r19, Y+33	; 0x21
     aea:	4a a1       	ldd	r20, Y+34	; 0x22
     aec:	5b a1       	ldd	r21, Y+35	; 0x23
     aee:	69 2d       	mov	r22, r9
     af0:	7b 2d       	mov	r23, r11
     af2:	81 2f       	mov	r24, r17
     af4:	90 2f       	mov	r25, r16
     af6:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     afa:	6d 87       	std	Y+13, r22	; 0x0d
     afc:	7e 87       	std	Y+14, r23	; 0x0e
     afe:	8f 87       	std	Y+15, r24	; 0x0f
     b00:	98 8b       	std	Y+16, r25	; 0x10
     b02:	28 a5       	ldd	r18, Y+40	; 0x28
     b04:	39 a5       	ldd	r19, Y+41	; 0x29
     b06:	4a a5       	ldd	r20, Y+42	; 0x2a
     b08:	5b a5       	ldd	r21, Y+43	; 0x2b
     b0a:	63 2d       	mov	r22, r3
     b0c:	72 2d       	mov	r23, r2
     b0e:	88 2d       	mov	r24, r8
     b10:	9a 2d       	mov	r25, r10
     b12:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     b16:	2b 01       	movw	r4, r22
     b18:	3c 01       	movw	r6, r24
     b1a:	2d 85       	ldd	r18, Y+13	; 0x0d
     b1c:	3e 85       	ldd	r19, Y+14	; 0x0e
     b1e:	4f 85       	ldd	r20, Y+15	; 0x0f
     b20:	58 89       	ldd	r21, Y+16	; 0x10
     b22:	ca 01       	movw	r24, r20
     b24:	b9 01       	movw	r22, r18
     b26:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     b2a:	69 83       	std	Y+1, r22	; 0x01
     b2c:	7a 83       	std	Y+2, r23	; 0x02
     b2e:	8b 83       	std	Y+3, r24	; 0x03
     b30:	9c 83       	std	Y+4, r25	; 0x04
     b32:	2d 85       	ldd	r18, Y+13	; 0x0d
     b34:	3e 85       	ldd	r19, Y+14	; 0x0e
     b36:	4f 85       	ldd	r20, Y+15	; 0x0f
     b38:	58 89       	ldd	r21, Y+16	; 0x10
     b3a:	ca 01       	movw	r24, r20
     b3c:	b9 01       	movw	r22, r18
     b3e:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     b42:	6d 87       	std	Y+13, r22	; 0x0d
     b44:	7e 87       	std	Y+14, r23	; 0x0e
     b46:	8f 87       	std	Y+15, r24	; 0x0f
     b48:	98 8b       	std	Y+16, r25	; 0x10
     b4a:	a3 01       	movw	r20, r6
     b4c:	92 01       	movw	r18, r4
     b4e:	c3 01       	movw	r24, r6
     b50:	b2 01       	movw	r22, r4
     b52:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     b56:	9b 01       	movw	r18, r22
     b58:	ac 01       	movw	r20, r24
     b5a:	6d 85       	ldd	r22, Y+13	; 0x0d
     b5c:	7e 85       	ldd	r23, Y+14	; 0x0e
     b5e:	8f 85       	ldd	r24, Y+15	; 0x0f
     b60:	98 89       	ldd	r25, Y+16	; 0x10
     b62:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     b66:	0e 94 10 10 	call	0x2020	; 0x2020 <sqrt>
     b6a:	2b 01       	movw	r4, r22
     b6c:	3c 01       	movw	r6, r24
     b6e:	d2 c0       	rjmp	.+420    	; 0xd14 <__stack+0x8b5>
		}
		else
		{
			// khoang cach diem bat dau va ket thuc
			float q = sqrt((pntEnd.x - pntStart.x) * (pntEnd.x - pntStart.x) + (pntEnd.y - pntStart.y) * (pntEnd.y - pntStart.y));
     b70:	29 2d       	mov	r18, r9
     b72:	3b 2d       	mov	r19, r11
     b74:	41 2f       	mov	r20, r17
     b76:	50 2f       	mov	r21, r16
     b78:	6c 8d       	ldd	r22, Y+28	; 0x1c
     b7a:	7d 8d       	ldd	r23, Y+29	; 0x1d
     b7c:	8e 8d       	ldd	r24, Y+30	; 0x1e
     b7e:	9f 8d       	ldd	r25, Y+31	; 0x1f
     b80:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     b84:	69 83       	std	Y+1, r22	; 0x01
     b86:	7a 83       	std	Y+2, r23	; 0x02
     b88:	8b 83       	std	Y+3, r24	; 0x03
     b8a:	9c 83       	std	Y+4, r25	; 0x04
     b8c:	23 2d       	mov	r18, r3
     b8e:	32 2d       	mov	r19, r2
     b90:	48 2d       	mov	r20, r8
     b92:	5a 2d       	mov	r21, r10
     b94:	6c a1       	ldd	r22, Y+36	; 0x24
     b96:	7d a1       	ldd	r23, Y+37	; 0x25
     b98:	8e a1       	ldd	r24, Y+38	; 0x26
     b9a:	9f a1       	ldd	r25, Y+39	; 0x27
     b9c:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     ba0:	6d 87       	std	Y+13, r22	; 0x0d
     ba2:	7e 87       	std	Y+14, r23	; 0x0e
     ba4:	8f 87       	std	Y+15, r24	; 0x0f
     ba6:	98 8b       	std	Y+16, r25	; 0x10
     ba8:	29 81       	ldd	r18, Y+1	; 0x01
     baa:	3a 81       	ldd	r19, Y+2	; 0x02
     bac:	4b 81       	ldd	r20, Y+3	; 0x03
     bae:	5c 81       	ldd	r21, Y+4	; 0x04
     bb0:	ca 01       	movw	r24, r20
     bb2:	b9 01       	movw	r22, r18
     bb4:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     bb8:	6d 83       	std	Y+5, r22	; 0x05
     bba:	7e 83       	std	Y+6, r23	; 0x06
     bbc:	8f 83       	std	Y+7, r24	; 0x07
     bbe:	98 87       	std	Y+8, r25	; 0x08
     bc0:	2d 85       	ldd	r18, Y+13	; 0x0d
     bc2:	3e 85       	ldd	r19, Y+14	; 0x0e
     bc4:	4f 85       	ldd	r20, Y+15	; 0x0f
     bc6:	58 89       	ldd	r21, Y+16	; 0x10
     bc8:	ca 01       	movw	r24, r20
     bca:	b9 01       	movw	r22, r18
     bcc:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     bd0:	9b 01       	movw	r18, r22
     bd2:	ac 01       	movw	r20, r24
     bd4:	6d 81       	ldd	r22, Y+5	; 0x05
     bd6:	7e 81       	ldd	r23, Y+6	; 0x06
     bd8:	8f 81       	ldd	r24, Y+7	; 0x07
     bda:	98 85       	ldd	r25, Y+8	; 0x08
     bdc:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     be0:	0e 94 10 10 	call	0x2020	; 0x2020 <sqrt>
     be4:	6d 87       	std	Y+13, r22	; 0x0d
     be6:	7e 87       	std	Y+14, r23	; 0x0e
     be8:	8f 87       	std	Y+15, r24	; 0x0f
     bea:	98 8b       	std	Y+16, r25	; 0x10
			pntCenter.x = (pntStart.x + pntEnd.x) / 2 - sqrt(gVal1.R * gVal1.R - (q * q / 4)) * (pntStart.y - pntEnd.y) / q;
     bec:	a3 01       	movw	r20, r6
     bee:	92 01       	movw	r18, r4
     bf0:	c3 01       	movw	r24, r6
     bf2:	b2 01       	movw	r22, r4
     bf4:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     bf8:	6d 83       	std	Y+5, r22	; 0x05
     bfa:	7e 83       	std	Y+6, r23	; 0x06
     bfc:	8f 83       	std	Y+7, r24	; 0x07
     bfe:	98 87       	std	Y+8, r25	; 0x08
     c00:	2d 85       	ldd	r18, Y+13	; 0x0d
     c02:	3e 85       	ldd	r19, Y+14	; 0x0e
     c04:	4f 85       	ldd	r20, Y+15	; 0x0f
     c06:	58 89       	ldd	r21, Y+16	; 0x10
     c08:	ca 01       	movw	r24, r20
     c0a:	b9 01       	movw	r22, r18
     c0c:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     c10:	69 87       	std	Y+9, r22	; 0x09
     c12:	7a 87       	std	Y+10, r23	; 0x0a
     c14:	8b 87       	std	Y+11, r24	; 0x0b
     c16:	9c 87       	std	Y+12, r25	; 0x0c
     c18:	20 e0       	ldi	r18, 0x00	; 0
     c1a:	30 e0       	ldi	r19, 0x00	; 0
     c1c:	40 e8       	ldi	r20, 0x80	; 128
     c1e:	5e e3       	ldi	r21, 0x3E	; 62
     c20:	69 85       	ldd	r22, Y+9	; 0x09
     c22:	7a 85       	ldd	r23, Y+10	; 0x0a
     c24:	8b 85       	ldd	r24, Y+11	; 0x0b
     c26:	9c 85       	ldd	r25, Y+12	; 0x0c
     c28:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     c2c:	9b 01       	movw	r18, r22
     c2e:	ac 01       	movw	r20, r24
     c30:	6d 81       	ldd	r22, Y+5	; 0x05
     c32:	7e 81       	ldd	r23, Y+6	; 0x06
     c34:	8f 81       	ldd	r24, Y+7	; 0x07
     c36:	98 85       	ldd	r25, Y+8	; 0x08
     c38:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     c3c:	0e 94 10 10 	call	0x2020	; 0x2020 <sqrt>
     c40:	6d 83       	std	Y+5, r22	; 0x05
     c42:	7e 83       	std	Y+6, r23	; 0x06
     c44:	8f 83       	std	Y+7, r24	; 0x07
     c46:	98 87       	std	Y+8, r25	; 0x08
     c48:	29 2d       	mov	r18, r9
     c4a:	3b 2d       	mov	r19, r11
     c4c:	41 2f       	mov	r20, r17
     c4e:	50 2f       	mov	r21, r16
     c50:	6c 8d       	ldd	r22, Y+28	; 0x1c
     c52:	7d 8d       	ldd	r23, Y+29	; 0x1d
     c54:	8e 8d       	ldd	r24, Y+30	; 0x1e
     c56:	9f 8d       	ldd	r25, Y+31	; 0x1f
     c58:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     c5c:	20 e0       	ldi	r18, 0x00	; 0
     c5e:	30 e0       	ldi	r19, 0x00	; 0
     c60:	40 e0       	ldi	r20, 0x00	; 0
     c62:	5f e3       	ldi	r21, 0x3F	; 63
     c64:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     c68:	69 87       	std	Y+9, r22	; 0x09
     c6a:	7a 87       	std	Y+10, r23	; 0x0a
     c6c:	8b 87       	std	Y+11, r24	; 0x0b
     c6e:	9c 87       	std	Y+12, r25	; 0x0c
     c70:	2c a1       	ldd	r18, Y+36	; 0x24
     c72:	3d a1       	ldd	r19, Y+37	; 0x25
     c74:	4e a1       	ldd	r20, Y+38	; 0x26
     c76:	5f a1       	ldd	r21, Y+39	; 0x27
     c78:	63 2d       	mov	r22, r3
     c7a:	72 2d       	mov	r23, r2
     c7c:	88 2d       	mov	r24, r8
     c7e:	9a 2d       	mov	r25, r10
     c80:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     c84:	2d 81       	ldd	r18, Y+5	; 0x05
     c86:	3e 81       	ldd	r19, Y+6	; 0x06
     c88:	4f 81       	ldd	r20, Y+7	; 0x07
     c8a:	58 85       	ldd	r21, Y+8	; 0x08
     c8c:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     c90:	2d 85       	ldd	r18, Y+13	; 0x0d
     c92:	3e 85       	ldd	r19, Y+14	; 0x0e
     c94:	4f 85       	ldd	r20, Y+15	; 0x0f
     c96:	58 89       	ldd	r21, Y+16	; 0x10
     c98:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
     c9c:	9b 01       	movw	r18, r22
     c9e:	ac 01       	movw	r20, r24
     ca0:	69 85       	ldd	r22, Y+9	; 0x09
     ca2:	7a 85       	ldd	r23, Y+10	; 0x0a
     ca4:	8b 85       	ldd	r24, Y+11	; 0x0b
     ca6:	9c 85       	ldd	r25, Y+12	; 0x0c
     ca8:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     cac:	68 a3       	std	Y+32, r22	; 0x20
     cae:	79 a3       	std	Y+33, r23	; 0x21
     cb0:	8a a3       	std	Y+34, r24	; 0x22
     cb2:	9b a3       	std	Y+35, r25	; 0x23
			pntCenter.y = (pntStart.y + pntEnd.y) / 2 - sqrt(gVal1.R * gVal1.R - (q * q / 4)) * (pntEnd.x - pntStart.x) / q;
     cb4:	23 2d       	mov	r18, r3
     cb6:	32 2d       	mov	r19, r2
     cb8:	48 2d       	mov	r20, r8
     cba:	5a 2d       	mov	r21, r10
     cbc:	6c a1       	ldd	r22, Y+36	; 0x24
     cbe:	7d a1       	ldd	r23, Y+37	; 0x25
     cc0:	8e a1       	ldd	r24, Y+38	; 0x26
     cc2:	9f a1       	ldd	r25, Y+39	; 0x27
     cc4:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     cc8:	20 e0       	ldi	r18, 0x00	; 0
     cca:	30 e0       	ldi	r19, 0x00	; 0
     ccc:	40 e0       	ldi	r20, 0x00	; 0
     cce:	5f e3       	ldi	r21, 0x3F	; 63
     cd0:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     cd4:	69 87       	std	Y+9, r22	; 0x09
     cd6:	7a 87       	std	Y+10, r23	; 0x0a
     cd8:	8b 87       	std	Y+11, r24	; 0x0b
     cda:	9c 87       	std	Y+12, r25	; 0x0c
     cdc:	2d 81       	ldd	r18, Y+5	; 0x05
     cde:	3e 81       	ldd	r19, Y+6	; 0x06
     ce0:	4f 81       	ldd	r20, Y+7	; 0x07
     ce2:	58 85       	ldd	r21, Y+8	; 0x08
     ce4:	69 81       	ldd	r22, Y+1	; 0x01
     ce6:	7a 81       	ldd	r23, Y+2	; 0x02
     ce8:	8b 81       	ldd	r24, Y+3	; 0x03
     cea:	9c 81       	ldd	r25, Y+4	; 0x04
     cec:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     cf0:	2d 85       	ldd	r18, Y+13	; 0x0d
     cf2:	3e 85       	ldd	r19, Y+14	; 0x0e
     cf4:	4f 85       	ldd	r20, Y+15	; 0x0f
     cf6:	58 89       	ldd	r21, Y+16	; 0x10
     cf8:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
     cfc:	9b 01       	movw	r18, r22
     cfe:	ac 01       	movw	r20, r24
     d00:	69 85       	ldd	r22, Y+9	; 0x09
     d02:	7a 85       	ldd	r23, Y+10	; 0x0a
     d04:	8b 85       	ldd	r24, Y+11	; 0x0b
     d06:	9c 85       	ldd	r25, Y+12	; 0x0c
     d08:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     d0c:	68 a7       	std	Y+40, r22	; 0x28
     d0e:	79 a7       	std	Y+41, r23	; 0x29
     d10:	8a a7       	std	Y+42, r24	; 0x2a
     d12:	9b a7       	std	Y+43, r25	; 0x2b
		}
		// khoang cach 2 diem lon hon 2 lan ban kinh
		if (sqrt((pntStart.x - pntCenter.x) * (pntStart.x - pntCenter.x) + (pntStart.y - pntCenter.y) * (pntStart.y - pntCenter.y)) > (2 * gVal1.R))
     d14:	28 a1       	ldd	r18, Y+32	; 0x20
     d16:	39 a1       	ldd	r19, Y+33	; 0x21
     d18:	4a a1       	ldd	r20, Y+34	; 0x22
     d1a:	5b a1       	ldd	r21, Y+35	; 0x23
     d1c:	69 2d       	mov	r22, r9
     d1e:	7b 2d       	mov	r23, r11
     d20:	81 2f       	mov	r24, r17
     d22:	90 2f       	mov	r25, r16
     d24:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     d28:	6d 87       	std	Y+13, r22	; 0x0d
     d2a:	7e 87       	std	Y+14, r23	; 0x0e
     d2c:	8f 87       	std	Y+15, r24	; 0x0f
     d2e:	98 8b       	std	Y+16, r25	; 0x10
     d30:	28 a5       	ldd	r18, Y+40	; 0x28
     d32:	39 a5       	ldd	r19, Y+41	; 0x29
     d34:	4a a5       	ldd	r20, Y+42	; 0x2a
     d36:	5b a5       	ldd	r21, Y+43	; 0x2b
     d38:	63 2d       	mov	r22, r3
     d3a:	72 2d       	mov	r23, r2
     d3c:	88 2d       	mov	r24, r8
     d3e:	9a 2d       	mov	r25, r10
     d40:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     d44:	69 83       	std	Y+1, r22	; 0x01
     d46:	7a 83       	std	Y+2, r23	; 0x02
     d48:	8b 83       	std	Y+3, r24	; 0x03
     d4a:	9c 83       	std	Y+4, r25	; 0x04
     d4c:	2d 85       	ldd	r18, Y+13	; 0x0d
     d4e:	3e 85       	ldd	r19, Y+14	; 0x0e
     d50:	4f 85       	ldd	r20, Y+15	; 0x0f
     d52:	58 89       	ldd	r21, Y+16	; 0x10
     d54:	ca 01       	movw	r24, r20
     d56:	b9 01       	movw	r22, r18
     d58:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     d5c:	6d 83       	std	Y+5, r22	; 0x05
     d5e:	7e 83       	std	Y+6, r23	; 0x06
     d60:	8f 83       	std	Y+7, r24	; 0x07
     d62:	98 87       	std	Y+8, r25	; 0x08
     d64:	29 81       	ldd	r18, Y+1	; 0x01
     d66:	3a 81       	ldd	r19, Y+2	; 0x02
     d68:	4b 81       	ldd	r20, Y+3	; 0x03
     d6a:	5c 81       	ldd	r21, Y+4	; 0x04
     d6c:	ca 01       	movw	r24, r20
     d6e:	b9 01       	movw	r22, r18
     d70:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     d74:	69 87       	std	Y+9, r22	; 0x09
     d76:	7a 87       	std	Y+10, r23	; 0x0a
     d78:	8b 87       	std	Y+11, r24	; 0x0b
     d7a:	9c 87       	std	Y+12, r25	; 0x0c
     d7c:	29 85       	ldd	r18, Y+9	; 0x09
     d7e:	3a 85       	ldd	r19, Y+10	; 0x0a
     d80:	4b 85       	ldd	r20, Y+11	; 0x0b
     d82:	5c 85       	ldd	r21, Y+12	; 0x0c
     d84:	6d 81       	ldd	r22, Y+5	; 0x05
     d86:	7e 81       	ldd	r23, Y+6	; 0x06
     d88:	8f 81       	ldd	r24, Y+7	; 0x07
     d8a:	98 85       	ldd	r25, Y+8	; 0x08
     d8c:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     d90:	0e 94 10 10 	call	0x2020	; 0x2020 <sqrt>
     d94:	6d 83       	std	Y+5, r22	; 0x05
     d96:	7e 83       	std	Y+6, r23	; 0x06
     d98:	8f 83       	std	Y+7, r24	; 0x07
     d9a:	98 87       	std	Y+8, r25	; 0x08
     d9c:	a3 01       	movw	r20, r6
     d9e:	92 01       	movw	r18, r4
     da0:	c3 01       	movw	r24, r6
     da2:	b2 01       	movw	r22, r4
     da4:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     da8:	9b 01       	movw	r18, r22
     daa:	ac 01       	movw	r20, r24
     dac:	6d 81       	ldd	r22, Y+5	; 0x05
     dae:	7e 81       	ldd	r23, Y+6	; 0x06
     db0:	8f 81       	ldd	r24, Y+7	; 0x07
     db2:	98 85       	ldd	r25, Y+8	; 0x08
     db4:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
     db8:	18 16       	cp	r1, r24
     dba:	bc f4       	brge	.+46     	; 0xdea <__stack+0x98b>
		{
			return pntStart;
     dbc:	89 2d       	mov	r24, r9
     dbe:	9b 2d       	mov	r25, r11
     dc0:	a1 2f       	mov	r26, r17
     dc2:	b0 2f       	mov	r27, r16
     dc4:	ea 8d       	ldd	r30, Y+26	; 0x1a
     dc6:	fb 8d       	ldd	r31, Y+27	; 0x1b
     dc8:	80 83       	st	Z, r24
     dca:	91 83       	std	Z+1, r25	; 0x01
     dcc:	a2 83       	std	Z+2, r26	; 0x02
     dce:	b3 83       	std	Z+3, r27	; 0x03
     dd0:	83 2d       	mov	r24, r3
     dd2:	92 2d       	mov	r25, r2
     dd4:	a8 2d       	mov	r26, r8
     dd6:	ba 2d       	mov	r27, r10
     dd8:	84 83       	std	Z+4, r24	; 0x04
     dda:	95 83       	std	Z+5, r25	; 0x05
     ddc:	a6 83       	std	Z+6, r26	; 0x06
     dde:	b7 83       	std	Z+7, r27	; 0x07
     de0:	c0 86       	std	Z+8, r12	; 0x08
     de2:	d1 86       	std	Z+9, r13	; 0x09
     de4:	e2 86       	std	Z+10, r14	; 0x0a
     de6:	f3 86       	std	Z+11, r15	; 0x0b
     de8:	7b c4       	rjmp	.+2294   	; 0x16e0 <__stack+0x1281>
		}
		// tim goc cua diem dau va diem cuoi so voi tam
		pntStart.angle = 180 * atan2(pntStart.y - pntCenter.y, pntStart.x - pntCenter.x) / M_PI;
     dea:	2d 85       	ldd	r18, Y+13	; 0x0d
     dec:	3e 85       	ldd	r19, Y+14	; 0x0e
     dee:	4f 85       	ldd	r20, Y+15	; 0x0f
     df0:	58 89       	ldd	r21, Y+16	; 0x10
     df2:	69 81       	ldd	r22, Y+1	; 0x01
     df4:	7a 81       	ldd	r23, Y+2	; 0x02
     df6:	8b 81       	ldd	r24, Y+3	; 0x03
     df8:	9c 81       	ldd	r25, Y+4	; 0x04
     dfa:	0e 94 5f 0d 	call	0x1abe	; 0x1abe <atan2>
     dfe:	20 e0       	ldi	r18, 0x00	; 0
     e00:	30 e0       	ldi	r19, 0x00	; 0
     e02:	44 e3       	ldi	r20, 0x34	; 52
     e04:	53 e4       	ldi	r21, 0x43	; 67
     e06:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     e0a:	2b ed       	ldi	r18, 0xDB	; 219
     e0c:	3f e0       	ldi	r19, 0x0F	; 15
     e0e:	49 e4       	ldi	r20, 0x49	; 73
     e10:	50 e4       	ldi	r21, 0x40	; 64
     e12:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
     e16:	69 83       	std	Y+1, r22	; 0x01
     e18:	7a 83       	std	Y+2, r23	; 0x02
     e1a:	8b 83       	std	Y+3, r24	; 0x03
     e1c:	9c 83       	std	Y+4, r25	; 0x04
		pntEnd.angle = 180 * atan2(pntEnd.y - pntCenter.y, pntEnd.x - pntCenter.x) / M_PI;
     e1e:	28 a1       	ldd	r18, Y+32	; 0x20
     e20:	39 a1       	ldd	r19, Y+33	; 0x21
     e22:	4a a1       	ldd	r20, Y+34	; 0x22
     e24:	5b a1       	ldd	r21, Y+35	; 0x23
     e26:	6c 8d       	ldd	r22, Y+28	; 0x1c
     e28:	7d 8d       	ldd	r23, Y+29	; 0x1d
     e2a:	8e 8d       	ldd	r24, Y+30	; 0x1e
     e2c:	9f 8d       	ldd	r25, Y+31	; 0x1f
     e2e:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     e32:	6b 01       	movw	r12, r22
     e34:	7c 01       	movw	r14, r24
     e36:	28 a5       	ldd	r18, Y+40	; 0x28
     e38:	39 a5       	ldd	r19, Y+41	; 0x29
     e3a:	4a a5       	ldd	r20, Y+42	; 0x2a
     e3c:	5b a5       	ldd	r21, Y+43	; 0x2b
     e3e:	6c a1       	ldd	r22, Y+36	; 0x24
     e40:	7d a1       	ldd	r23, Y+37	; 0x25
     e42:	8e a1       	ldd	r24, Y+38	; 0x26
     e44:	9f a1       	ldd	r25, Y+39	; 0x27
     e46:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     e4a:	a7 01       	movw	r20, r14
     e4c:	96 01       	movw	r18, r12
     e4e:	0e 94 5f 0d 	call	0x1abe	; 0x1abe <atan2>
     e52:	20 e0       	ldi	r18, 0x00	; 0
     e54:	30 e0       	ldi	r19, 0x00	; 0
     e56:	44 e3       	ldi	r20, 0x34	; 52
     e58:	53 e4       	ldi	r21, 0x43	; 67
     e5a:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     e5e:	2b ed       	ldi	r18, 0xDB	; 219
     e60:	3f e0       	ldi	r19, 0x0F	; 15
     e62:	49 e4       	ldi	r20, 0x49	; 73
     e64:	50 e4       	ldi	r21, 0x40	; 64
     e66:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
     e6a:	6d 87       	std	Y+13, r22	; 0x0d
     e6c:	7e 87       	std	Y+14, r23	; 0x0e
     e6e:	8f 87       	std	Y+15, r24	; 0x0f
     e70:	98 8b       	std	Y+16, r25	; 0x10
		// xac dinh goc de chay het cung tron
		angle = pntStart.angle;
		anglePre = (int)angle;
		
		// do dich chuyen cua 1 truc tuong ung voi 1 buoc (STEP)
		deltaC = 360 * STEP / (2 * M_PI * gVal1.R);
     e72:	2b ed       	ldi	r18, 0xDB	; 219
     e74:	3f e0       	ldi	r19, 0x0F	; 15
     e76:	49 ec       	ldi	r20, 0xC9	; 201
     e78:	50 e4       	ldi	r21, 0x40	; 64
     e7a:	c3 01       	movw	r24, r6
     e7c:	b2 01       	movw	r22, r4
     e7e:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     e82:	9b 01       	movw	r18, r22
     e84:	ac 01       	movw	r20, r24
     e86:	60 e0       	ldi	r22, 0x00	; 0
     e88:	70 e0       	ldi	r23, 0x00	; 0
     e8a:	84 eb       	ldi	r24, 0xB4	; 180
     e8c:	93 e4       	ldi	r25, 0x43	; 67
     e8e:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
     e92:	6c a7       	std	Y+44, r22	; 0x2c
     e94:	7d a7       	std	Y+45, r23	; 0x2d
     e96:	8e a7       	std	Y+46, r24	; 0x2e
     e98:	9f a7       	std	Y+47, r25	; 0x2f
		// quen me roi????
		if ((pntStart.angle <= 0 && pntEnd.angle <= 0 && pntEnd.angle >= pntStart.angle)
     e9a:	20 e0       	ldi	r18, 0x00	; 0
     e9c:	30 e0       	ldi	r19, 0x00	; 0
     e9e:	a9 01       	movw	r20, r18
     ea0:	69 81       	ldd	r22, Y+1	; 0x01
     ea2:	7a 81       	ldd	r23, Y+2	; 0x02
     ea4:	8b 81       	ldd	r24, Y+3	; 0x03
     ea6:	9c 81       	ldd	r25, Y+4	; 0x04
     ea8:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     eac:	18 16       	cp	r1, r24
     eae:	c4 f0       	brlt	.+48     	; 0xee0 <__stack+0xa81>
     eb0:	20 e0       	ldi	r18, 0x00	; 0
     eb2:	30 e0       	ldi	r19, 0x00	; 0
     eb4:	a9 01       	movw	r20, r18
     eb6:	6d 85       	ldd	r22, Y+13	; 0x0d
     eb8:	7e 85       	ldd	r23, Y+14	; 0x0e
     eba:	8f 85       	ldd	r24, Y+15	; 0x0f
     ebc:	98 89       	ldd	r25, Y+16	; 0x10
     ebe:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     ec2:	18 16       	cp	r1, r24
     ec4:	c4 f0       	brlt	.+48     	; 0xef6 <__stack+0xa97>
     ec6:	2d 85       	ldd	r18, Y+13	; 0x0d
     ec8:	3e 85       	ldd	r19, Y+14	; 0x0e
     eca:	4f 85       	ldd	r20, Y+15	; 0x0f
     ecc:	58 89       	ldd	r21, Y+16	; 0x10
     ece:	69 81       	ldd	r22, Y+1	; 0x01
     ed0:	7a 81       	ldd	r23, Y+2	; 0x02
     ed2:	8b 81       	ldd	r24, Y+3	; 0x03
     ed4:	9c 81       	ldd	r25, Y+4	; 0x04
     ed6:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     eda:	18 16       	cp	r1, r24
     edc:	cc f5       	brge	.+114    	; 0xf50 <__stack+0xaf1>
     ede:	0b c0       	rjmp	.+22     	; 0xef6 <__stack+0xa97>
		|| (pntStart.angle <= 0 && pntEnd.angle >= 0)
     ee0:	20 e0       	ldi	r18, 0x00	; 0
     ee2:	30 e0       	ldi	r19, 0x00	; 0
     ee4:	a9 01       	movw	r20, r18
     ee6:	69 81       	ldd	r22, Y+1	; 0x01
     ee8:	7a 81       	ldd	r23, Y+2	; 0x02
     eea:	8b 81       	ldd	r24, Y+3	; 0x03
     eec:	9c 81       	ldd	r25, Y+4	; 0x04
     eee:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     ef2:	18 16       	cp	r1, r24
     ef4:	5c f0       	brlt	.+22     	; 0xf0c <__stack+0xaad>
     ef6:	20 e0       	ldi	r18, 0x00	; 0
     ef8:	30 e0       	ldi	r19, 0x00	; 0
     efa:	a9 01       	movw	r20, r18
     efc:	6d 85       	ldd	r22, Y+13	; 0x0d
     efe:	7e 85       	ldd	r23, Y+14	; 0x0e
     f00:	8f 85       	ldd	r24, Y+15	; 0x0f
     f02:	98 89       	ldd	r25, Y+16	; 0x10
     f04:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
     f08:	88 23       	and	r24, r24
     f0a:	14 f5       	brge	.+68     	; 0xf50 <__stack+0xaf1>
		|| (pntStart.angle >= 0 && pntEnd.angle >= 0 && pntEnd.angle >= pntStart.angle)
     f0c:	20 e0       	ldi	r18, 0x00	; 0
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	a9 01       	movw	r20, r18
     f12:	69 81       	ldd	r22, Y+1	; 0x01
     f14:	7a 81       	ldd	r23, Y+2	; 0x02
     f16:	8b 81       	ldd	r24, Y+3	; 0x03
     f18:	9c 81       	ldd	r25, Y+4	; 0x04
     f1a:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
     f1e:	88 23       	and	r24, r24
     f20:	2c f1       	brlt	.+74     	; 0xf6c <__stack+0xb0d>
     f22:	20 e0       	ldi	r18, 0x00	; 0
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	a9 01       	movw	r20, r18
     f28:	6d 85       	ldd	r22, Y+13	; 0x0d
     f2a:	7e 85       	ldd	r23, Y+14	; 0x0e
     f2c:	8f 85       	ldd	r24, Y+15	; 0x0f
     f2e:	98 89       	ldd	r25, Y+16	; 0x10
     f30:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
     f34:	88 23       	and	r24, r24
     f36:	d4 f0       	brlt	.+52     	; 0xf6c <__stack+0xb0d>
     f38:	2d 85       	ldd	r18, Y+13	; 0x0d
     f3a:	3e 85       	ldd	r19, Y+14	; 0x0e
     f3c:	4f 85       	ldd	r20, Y+15	; 0x0f
     f3e:	58 89       	ldd	r21, Y+16	; 0x10
     f40:	69 81       	ldd	r22, Y+1	; 0x01
     f42:	7a 81       	ldd	r23, Y+2	; 0x02
     f44:	8b 81       	ldd	r24, Y+3	; 0x03
     f46:	9c 81       	ldd	r25, Y+4	; 0x04
     f48:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     f4c:	18 16       	cp	r1, r24
     f4e:	74 f0       	brlt	.+28     	; 0xf6c <__stack+0xb0d>
		)
		{
			pntEnd.angle -= 360;
     f50:	20 e0       	ldi	r18, 0x00	; 0
     f52:	30 e0       	ldi	r19, 0x00	; 0
     f54:	44 eb       	ldi	r20, 0xB4	; 180
     f56:	53 e4       	ldi	r21, 0x43	; 67
     f58:	6d 85       	ldd	r22, Y+13	; 0x0d
     f5a:	7e 85       	ldd	r23, Y+14	; 0x0e
     f5c:	8f 85       	ldd	r24, Y+15	; 0x0f
     f5e:	98 89       	ldd	r25, Y+16	; 0x10
     f60:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
     f64:	6d 87       	std	Y+13, r22	; 0x0d
     f66:	7e 87       	std	Y+14, r23	; 0x0e
     f68:	8f 87       	std	Y+15, r24	; 0x0f
     f6a:	98 8b       	std	Y+16, r25	; 0x10
		}
		while (angle >= pntEnd.angle)
     f6c:	29 81       	ldd	r18, Y+1	; 0x01
     f6e:	3a 81       	ldd	r19, Y+2	; 0x02
     f70:	4b 81       	ldd	r20, Y+3	; 0x03
     f72:	5c 81       	ldd	r21, Y+4	; 0x04
     f74:	6d 85       	ldd	r22, Y+13	; 0x0d
     f76:	7e 85       	ldd	r23, Y+14	; 0x0e
     f78:	8f 85       	ldd	r24, Y+15	; 0x0f
     f7a:	98 89       	ldd	r25, Y+16	; 0x10
     f7c:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
     f80:	18 16       	cp	r1, r24
     f82:	0c f4       	brge	.+2      	; 0xf86 <__stack+0xb27>
     f84:	80 c3       	rjmp	.+1792   	; 0x1686 <__stack+0x1227>
     f86:	c9 80       	ldd	r12, Y+1	; 0x01
     f88:	da 80       	ldd	r13, Y+2	; 0x02
     f8a:	eb 80       	ldd	r14, Y+3	; 0x03
     f8c:	fc 80       	ldd	r15, Y+4	; 0x04
     f8e:	39 86       	std	Y+9, r3	; 0x09
     f90:	29 8a       	std	Y+17, r2	; 0x11
     f92:	8a 8a       	std	Y+18, r8	; 0x12
     f94:	9b 8a       	std	Y+19, r9	; 0x13
     f96:	bc 8a       	std	Y+20, r11	; 0x14
     f98:	1d 8b       	std	Y+21, r17	; 0x15
     f9a:	0e 8b       	std	Y+22, r16	; 0x16
     f9c:	0a 2d       	mov	r16, r10
		{
			pntCur.x = (int32_t)(gVal1.R * cos(angle * M_PI / 180) + pntCenter.x);
     f9e:	2b ed       	ldi	r18, 0xDB	; 219
     fa0:	3f e0       	ldi	r19, 0x0F	; 15
     fa2:	49 e4       	ldi	r20, 0x49	; 73
     fa4:	50 e4       	ldi	r21, 0x40	; 64
     fa6:	c7 01       	movw	r24, r14
     fa8:	b6 01       	movw	r22, r12
     faa:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     fae:	20 e0       	ldi	r18, 0x00	; 0
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	44 e3       	ldi	r20, 0x34	; 52
     fb4:	53 e4       	ldi	r21, 0x43	; 67
     fb6:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
     fba:	69 83       	std	Y+1, r22	; 0x01
     fbc:	7a 83       	std	Y+2, r23	; 0x02
     fbe:	8b 83       	std	Y+3, r24	; 0x03
     fc0:	9c 83       	std	Y+4, r25	; 0x04
     fc2:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <cos>
     fc6:	a3 01       	movw	r20, r6
     fc8:	92 01       	movw	r18, r4
     fca:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     fce:	28 a1       	ldd	r18, Y+32	; 0x20
     fd0:	39 a1       	ldd	r19, Y+33	; 0x21
     fd2:	4a a1       	ldd	r20, Y+34	; 0x22
     fd4:	5b a1       	ldd	r21, Y+35	; 0x23
     fd6:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
     fda:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
     fde:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
     fe2:	86 2e       	mov	r8, r22
     fe4:	37 2e       	mov	r3, r23
     fe6:	28 2e       	mov	r2, r24
     fe8:	9d 83       	std	Y+5, r25	; 0x05
			pntCur.y = (int32_t)(gVal1.R * sin(angle * M_PI / 180) + pntCenter.y);
     fea:	69 81       	ldd	r22, Y+1	; 0x01
     fec:	7a 81       	ldd	r23, Y+2	; 0x02
     fee:	8b 81       	ldd	r24, Y+3	; 0x03
     ff0:	9c 81       	ldd	r25, Y+4	; 0x04
     ff2:	0e 94 02 10 	call	0x2004	; 0x2004 <sin>
     ff6:	a3 01       	movw	r20, r6
     ff8:	92 01       	movw	r18, r4
     ffa:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
     ffe:	28 a5       	ldd	r18, Y+40	; 0x28
    1000:	39 a5       	ldd	r19, Y+41	; 0x29
    1002:	4a a5       	ldd	r20, Y+42	; 0x2a
    1004:	5b a5       	ldd	r21, Y+43	; 0x2b
    1006:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    100a:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
    100e:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
    1012:	16 2f       	mov	r17, r22
    1014:	b7 2e       	mov	r11, r23
    1016:	a8 2e       	mov	r10, r24
    1018:	99 2e       	mov	r9, r25
			//UART_printXY(pntCur.x, pntCur.y);
			//UART_printXY(pntPre.x, pntPre.y);
			//UART_printXY(pntCur.x - pntPre.x, pntCur.y -pntPre.y);
			stepper_ctrl(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
    101a:	29 85       	ldd	r18, Y+9	; 0x09
    101c:	39 89       	ldd	r19, Y+17	; 0x11
    101e:	4a 89       	ldd	r20, Y+18	; 0x12
    1020:	50 2f       	mov	r21, r16
    1022:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    1026:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
    102a:	06 2f       	mov	r16, r22
    102c:	2b 89       	ldd	r18, Y+19	; 0x13
    102e:	3c 89       	ldd	r19, Y+20	; 0x14
    1030:	4d 89       	ldd	r20, Y+21	; 0x15
    1032:	5e 89       	ldd	r21, Y+22	; 0x16
    1034:	68 2d       	mov	r22, r8
    1036:	73 2d       	mov	r23, r3
    1038:	82 2d       	mov	r24, r2
    103a:	9d 81       	ldd	r25, Y+5	; 0x05
    103c:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    1040:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
    1044:	86 2f       	mov	r24, r22
    1046:	60 2f       	mov	r22, r16
    1048:	0e 94 2b 0c 	call	0x1856	; 0x1856 <stepper_ctrl>
				//UART_printXY(pntCur.x, pntCur.y);
				//anglePre = (int)angle;
			}
			pntPre.x = pntCur.x;
			pntPre.y = pntCur.y;
			angle -= deltaC;
    104c:	2c a5       	ldd	r18, Y+44	; 0x2c
    104e:	3d a5       	ldd	r19, Y+45	; 0x2d
    1050:	4e a5       	ldd	r20, Y+46	; 0x2e
    1052:	5f a5       	ldd	r21, Y+47	; 0x2f
    1054:	c7 01       	movw	r24, r14
    1056:	b6 01       	movw	r22, r12
    1058:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    105c:	6b 01       	movw	r12, r22
    105e:	7c 01       	movw	r14, r24
			{
				//UART_printXY(pntCur.x, pntCur.y);
				//anglePre = (int)angle;
			}
			pntPre.x = pntCur.x;
			pntPre.y = pntCur.y;
    1060:	19 87       	std	Y+9, r17	; 0x09
    1062:	b9 8a       	std	Y+17, r11	; 0x11
    1064:	aa 8a       	std	Y+18, r10	; 0x12
    1066:	09 2d       	mov	r16, r9
			if ((int)angle !=anglePre)// ghi gia tri len uart
			{
				//UART_printXY(pntCur.x, pntCur.y);
				//anglePre = (int)angle;
			}
			pntPre.x = pntCur.x;
    1068:	8b 8a       	std	Y+19, r8	; 0x13
    106a:	3c 8a       	std	Y+20, r3	; 0x14
    106c:	2d 8a       	std	Y+21, r2	; 0x15
    106e:	bd 81       	ldd	r27, Y+5	; 0x05
    1070:	be 8b       	std	Y+22, r27	; 0x16
		|| (pntStart.angle >= 0 && pntEnd.angle >= 0 && pntEnd.angle >= pntStart.angle)
		)
		{
			pntEnd.angle -= 360;
		}
		while (angle >= pntEnd.angle)
    1072:	9b 01       	movw	r18, r22
    1074:	ac 01       	movw	r20, r24
    1076:	6d 85       	ldd	r22, Y+13	; 0x0d
    1078:	7e 85       	ldd	r23, Y+14	; 0x0e
    107a:	8f 85       	ldd	r24, Y+15	; 0x0f
    107c:	98 89       	ldd	r25, Y+16	; 0x10
    107e:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
    1082:	18 16       	cp	r1, r24
    1084:	0c f0       	brlt	.+2      	; 0x1088 <__stack+0xc29>
    1086:	8b cf       	rjmp	.-234    	; 0xf9e <__stack+0xb3f>
    1088:	fe c2       	rjmp	.+1532   	; 0x1686 <__stack+0x1227>
			angle -= deltaC;
		}
		// reset gVal1.R = 0 for next Gcode
		gVal1.R = 0;
	}
	else if (gVal1.G == CNC_CIRCLE_ACLW)// G03 noi suy tron nguoc chieu kim dong ho
    108a:	83 30       	cpi	r24, 0x03	; 3
    108c:	09 f0       	breq	.+2      	; 0x1090 <__stack+0xc31>
    108e:	fb c2       	rjmp	.+1526   	; 0x1686 <__stack+0x1227>
	{
		// tim tam duong tron
		if (gVal1.R == 0)
    1090:	20 e0       	ldi	r18, 0x00	; 0
    1092:	30 e0       	ldi	r19, 0x00	; 0
    1094:	a9 01       	movw	r20, r18
    1096:	c3 01       	movw	r24, r6
    1098:	b2 01       	movw	r22, r4
    109a:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
    109e:	81 11       	cpse	r24, r1
    10a0:	65 c0       	rjmp	.+202    	; 0x116c <__stack+0xd0d>
		{
			pntCenter.x = pntStart.x + gVal1.I;
    10a2:	6d 81       	ldd	r22, Y+5	; 0x05
    10a4:	7e 81       	ldd	r23, Y+6	; 0x06
    10a6:	8f 81       	ldd	r24, Y+7	; 0x07
    10a8:	98 85       	ldd	r25, Y+8	; 0x08
    10aa:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
    10ae:	29 2d       	mov	r18, r9
    10b0:	3b 2d       	mov	r19, r11
    10b2:	41 2f       	mov	r20, r17
    10b4:	50 2f       	mov	r21, r16
    10b6:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    10ba:	68 a3       	std	Y+32, r22	; 0x20
    10bc:	79 a3       	std	Y+33, r23	; 0x21
    10be:	8a a3       	std	Y+34, r24	; 0x22
    10c0:	9b a3       	std	Y+35, r25	; 0x23
			pntCenter.y = pntStart.y + gVal1.J;
    10c2:	69 81       	ldd	r22, Y+1	; 0x01
    10c4:	7a 81       	ldd	r23, Y+2	; 0x02
    10c6:	8b 81       	ldd	r24, Y+3	; 0x03
    10c8:	9c 81       	ldd	r25, Y+4	; 0x04
    10ca:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
    10ce:	23 2d       	mov	r18, r3
    10d0:	32 2d       	mov	r19, r2
    10d2:	48 2d       	mov	r20, r8
    10d4:	5a 2d       	mov	r21, r10
    10d6:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    10da:	68 a7       	std	Y+40, r22	; 0x28
    10dc:	79 a7       	std	Y+41, r23	; 0x29
    10de:	8a a7       	std	Y+42, r24	; 0x2a
    10e0:	9b a7       	std	Y+43, r25	; 0x2b
			gVal1.R = sqrt((pntStart.x - pntCenter.x) * (pntStart.x - pntCenter.x) + (pntStart.y - pntCenter.y) * (pntStart.y - pntCenter.y));
    10e2:	28 a1       	ldd	r18, Y+32	; 0x20
    10e4:	39 a1       	ldd	r19, Y+33	; 0x21
    10e6:	4a a1       	ldd	r20, Y+34	; 0x22
    10e8:	5b a1       	ldd	r21, Y+35	; 0x23
    10ea:	69 2d       	mov	r22, r9
    10ec:	7b 2d       	mov	r23, r11
    10ee:	81 2f       	mov	r24, r17
    10f0:	90 2f       	mov	r25, r16
    10f2:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    10f6:	6d 87       	std	Y+13, r22	; 0x0d
    10f8:	7e 87       	std	Y+14, r23	; 0x0e
    10fa:	8f 87       	std	Y+15, r24	; 0x0f
    10fc:	98 8b       	std	Y+16, r25	; 0x10
    10fe:	28 a5       	ldd	r18, Y+40	; 0x28
    1100:	39 a5       	ldd	r19, Y+41	; 0x29
    1102:	4a a5       	ldd	r20, Y+42	; 0x2a
    1104:	5b a5       	ldd	r21, Y+43	; 0x2b
    1106:	63 2d       	mov	r22, r3
    1108:	72 2d       	mov	r23, r2
    110a:	88 2d       	mov	r24, r8
    110c:	9a 2d       	mov	r25, r10
    110e:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    1112:	2b 01       	movw	r4, r22
    1114:	3c 01       	movw	r6, r24
    1116:	2d 85       	ldd	r18, Y+13	; 0x0d
    1118:	3e 85       	ldd	r19, Y+14	; 0x0e
    111a:	4f 85       	ldd	r20, Y+15	; 0x0f
    111c:	58 89       	ldd	r21, Y+16	; 0x10
    111e:	ca 01       	movw	r24, r20
    1120:	b9 01       	movw	r22, r18
    1122:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    1126:	69 83       	std	Y+1, r22	; 0x01
    1128:	7a 83       	std	Y+2, r23	; 0x02
    112a:	8b 83       	std	Y+3, r24	; 0x03
    112c:	9c 83       	std	Y+4, r25	; 0x04
    112e:	2d 85       	ldd	r18, Y+13	; 0x0d
    1130:	3e 85       	ldd	r19, Y+14	; 0x0e
    1132:	4f 85       	ldd	r20, Y+15	; 0x0f
    1134:	58 89       	ldd	r21, Y+16	; 0x10
    1136:	ca 01       	movw	r24, r20
    1138:	b9 01       	movw	r22, r18
    113a:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    113e:	6d 87       	std	Y+13, r22	; 0x0d
    1140:	7e 87       	std	Y+14, r23	; 0x0e
    1142:	8f 87       	std	Y+15, r24	; 0x0f
    1144:	98 8b       	std	Y+16, r25	; 0x10
    1146:	a3 01       	movw	r20, r6
    1148:	92 01       	movw	r18, r4
    114a:	c3 01       	movw	r24, r6
    114c:	b2 01       	movw	r22, r4
    114e:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    1152:	9b 01       	movw	r18, r22
    1154:	ac 01       	movw	r20, r24
    1156:	6d 85       	ldd	r22, Y+13	; 0x0d
    1158:	7e 85       	ldd	r23, Y+14	; 0x0e
    115a:	8f 85       	ldd	r24, Y+15	; 0x0f
    115c:	98 89       	ldd	r25, Y+16	; 0x10
    115e:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    1162:	0e 94 10 10 	call	0x2020	; 0x2020 <sqrt>
    1166:	2b 01       	movw	r4, r22
    1168:	3c 01       	movw	r6, r24
    116a:	d2 c0       	rjmp	.+420    	; 0x1310 <__stack+0xeb1>
		}
		else
		{
			//khoang cach diem dau va diem ket thuc
			float q = sqrt((pntEnd.x - pntStart.x) * (pntEnd.x - pntStart.x) + (pntEnd.y - pntStart.y) * (pntEnd.y - pntStart.y));
    116c:	29 2d       	mov	r18, r9
    116e:	3b 2d       	mov	r19, r11
    1170:	41 2f       	mov	r20, r17
    1172:	50 2f       	mov	r21, r16
    1174:	6c 8d       	ldd	r22, Y+28	; 0x1c
    1176:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1178:	8e 8d       	ldd	r24, Y+30	; 0x1e
    117a:	9f 8d       	ldd	r25, Y+31	; 0x1f
    117c:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    1180:	69 83       	std	Y+1, r22	; 0x01
    1182:	7a 83       	std	Y+2, r23	; 0x02
    1184:	8b 83       	std	Y+3, r24	; 0x03
    1186:	9c 83       	std	Y+4, r25	; 0x04
    1188:	23 2d       	mov	r18, r3
    118a:	32 2d       	mov	r19, r2
    118c:	48 2d       	mov	r20, r8
    118e:	5a 2d       	mov	r21, r10
    1190:	6c a1       	ldd	r22, Y+36	; 0x24
    1192:	7d a1       	ldd	r23, Y+37	; 0x25
    1194:	8e a1       	ldd	r24, Y+38	; 0x26
    1196:	9f a1       	ldd	r25, Y+39	; 0x27
    1198:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    119c:	6d 87       	std	Y+13, r22	; 0x0d
    119e:	7e 87       	std	Y+14, r23	; 0x0e
    11a0:	8f 87       	std	Y+15, r24	; 0x0f
    11a2:	98 8b       	std	Y+16, r25	; 0x10
    11a4:	29 81       	ldd	r18, Y+1	; 0x01
    11a6:	3a 81       	ldd	r19, Y+2	; 0x02
    11a8:	4b 81       	ldd	r20, Y+3	; 0x03
    11aa:	5c 81       	ldd	r21, Y+4	; 0x04
    11ac:	ca 01       	movw	r24, r20
    11ae:	b9 01       	movw	r22, r18
    11b0:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    11b4:	6d 83       	std	Y+5, r22	; 0x05
    11b6:	7e 83       	std	Y+6, r23	; 0x06
    11b8:	8f 83       	std	Y+7, r24	; 0x07
    11ba:	98 87       	std	Y+8, r25	; 0x08
    11bc:	2d 85       	ldd	r18, Y+13	; 0x0d
    11be:	3e 85       	ldd	r19, Y+14	; 0x0e
    11c0:	4f 85       	ldd	r20, Y+15	; 0x0f
    11c2:	58 89       	ldd	r21, Y+16	; 0x10
    11c4:	ca 01       	movw	r24, r20
    11c6:	b9 01       	movw	r22, r18
    11c8:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    11cc:	9b 01       	movw	r18, r22
    11ce:	ac 01       	movw	r20, r24
    11d0:	6d 81       	ldd	r22, Y+5	; 0x05
    11d2:	7e 81       	ldd	r23, Y+6	; 0x06
    11d4:	8f 81       	ldd	r24, Y+7	; 0x07
    11d6:	98 85       	ldd	r25, Y+8	; 0x08
    11d8:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    11dc:	0e 94 10 10 	call	0x2020	; 0x2020 <sqrt>
    11e0:	6d 87       	std	Y+13, r22	; 0x0d
    11e2:	7e 87       	std	Y+14, r23	; 0x0e
    11e4:	8f 87       	std	Y+15, r24	; 0x0f
    11e6:	98 8b       	std	Y+16, r25	; 0x10
			// toa do diem tam
			pntCenter.x = (pntStart.x + pntEnd.x) / 2 + sqrt(gVal1.R * gVal1.R - (q * q / 4)) * (pntStart.y - pntEnd.y) / q;
    11e8:	a3 01       	movw	r20, r6
    11ea:	92 01       	movw	r18, r4
    11ec:	c3 01       	movw	r24, r6
    11ee:	b2 01       	movw	r22, r4
    11f0:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    11f4:	6d 83       	std	Y+5, r22	; 0x05
    11f6:	7e 83       	std	Y+6, r23	; 0x06
    11f8:	8f 83       	std	Y+7, r24	; 0x07
    11fa:	98 87       	std	Y+8, r25	; 0x08
    11fc:	2d 85       	ldd	r18, Y+13	; 0x0d
    11fe:	3e 85       	ldd	r19, Y+14	; 0x0e
    1200:	4f 85       	ldd	r20, Y+15	; 0x0f
    1202:	58 89       	ldd	r21, Y+16	; 0x10
    1204:	ca 01       	movw	r24, r20
    1206:	b9 01       	movw	r22, r18
    1208:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    120c:	69 87       	std	Y+9, r22	; 0x09
    120e:	7a 87       	std	Y+10, r23	; 0x0a
    1210:	8b 87       	std	Y+11, r24	; 0x0b
    1212:	9c 87       	std	Y+12, r25	; 0x0c
    1214:	20 e0       	ldi	r18, 0x00	; 0
    1216:	30 e0       	ldi	r19, 0x00	; 0
    1218:	40 e8       	ldi	r20, 0x80	; 128
    121a:	5e e3       	ldi	r21, 0x3E	; 62
    121c:	69 85       	ldd	r22, Y+9	; 0x09
    121e:	7a 85       	ldd	r23, Y+10	; 0x0a
    1220:	8b 85       	ldd	r24, Y+11	; 0x0b
    1222:	9c 85       	ldd	r25, Y+12	; 0x0c
    1224:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    1228:	9b 01       	movw	r18, r22
    122a:	ac 01       	movw	r20, r24
    122c:	6d 81       	ldd	r22, Y+5	; 0x05
    122e:	7e 81       	ldd	r23, Y+6	; 0x06
    1230:	8f 81       	ldd	r24, Y+7	; 0x07
    1232:	98 85       	ldd	r25, Y+8	; 0x08
    1234:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    1238:	0e 94 10 10 	call	0x2020	; 0x2020 <sqrt>
    123c:	6d 83       	std	Y+5, r22	; 0x05
    123e:	7e 83       	std	Y+6, r23	; 0x06
    1240:	8f 83       	std	Y+7, r24	; 0x07
    1242:	98 87       	std	Y+8, r25	; 0x08
    1244:	2c a1       	ldd	r18, Y+36	; 0x24
    1246:	3d a1       	ldd	r19, Y+37	; 0x25
    1248:	4e a1       	ldd	r20, Y+38	; 0x26
    124a:	5f a1       	ldd	r21, Y+39	; 0x27
    124c:	63 2d       	mov	r22, r3
    124e:	72 2d       	mov	r23, r2
    1250:	88 2d       	mov	r24, r8
    1252:	9a 2d       	mov	r25, r10
    1254:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    1258:	2d 81       	ldd	r18, Y+5	; 0x05
    125a:	3e 81       	ldd	r19, Y+6	; 0x06
    125c:	4f 81       	ldd	r20, Y+7	; 0x07
    125e:	58 85       	ldd	r21, Y+8	; 0x08
    1260:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    1264:	2d 85       	ldd	r18, Y+13	; 0x0d
    1266:	3e 85       	ldd	r19, Y+14	; 0x0e
    1268:	4f 85       	ldd	r20, Y+15	; 0x0f
    126a:	58 89       	ldd	r21, Y+16	; 0x10
    126c:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
    1270:	69 87       	std	Y+9, r22	; 0x09
    1272:	7a 87       	std	Y+10, r23	; 0x0a
    1274:	8b 87       	std	Y+11, r24	; 0x0b
    1276:	9c 87       	std	Y+12, r25	; 0x0c
    1278:	29 2d       	mov	r18, r9
    127a:	3b 2d       	mov	r19, r11
    127c:	41 2f       	mov	r20, r17
    127e:	50 2f       	mov	r21, r16
    1280:	6c 8d       	ldd	r22, Y+28	; 0x1c
    1282:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1284:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1286:	9f 8d       	ldd	r25, Y+31	; 0x1f
    1288:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    128c:	20 e0       	ldi	r18, 0x00	; 0
    128e:	30 e0       	ldi	r19, 0x00	; 0
    1290:	40 e0       	ldi	r20, 0x00	; 0
    1292:	5f e3       	ldi	r21, 0x3F	; 63
    1294:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    1298:	9b 01       	movw	r18, r22
    129a:	ac 01       	movw	r20, r24
    129c:	69 85       	ldd	r22, Y+9	; 0x09
    129e:	7a 85       	ldd	r23, Y+10	; 0x0a
    12a0:	8b 85       	ldd	r24, Y+11	; 0x0b
    12a2:	9c 85       	ldd	r25, Y+12	; 0x0c
    12a4:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    12a8:	68 a3       	std	Y+32, r22	; 0x20
    12aa:	79 a3       	std	Y+33, r23	; 0x21
    12ac:	8a a3       	std	Y+34, r24	; 0x22
    12ae:	9b a3       	std	Y+35, r25	; 0x23
			pntCenter.y = (pntStart.y + pntEnd.y) / 2 + sqrt(gVal1.R * gVal1.R - (q * q / 4)) * (pntEnd.x - pntStart.x) / q;
    12b0:	23 2d       	mov	r18, r3
    12b2:	32 2d       	mov	r19, r2
    12b4:	48 2d       	mov	r20, r8
    12b6:	5a 2d       	mov	r21, r10
    12b8:	6c a1       	ldd	r22, Y+36	; 0x24
    12ba:	7d a1       	ldd	r23, Y+37	; 0x25
    12bc:	8e a1       	ldd	r24, Y+38	; 0x26
    12be:	9f a1       	ldd	r25, Y+39	; 0x27
    12c0:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    12c4:	20 e0       	ldi	r18, 0x00	; 0
    12c6:	30 e0       	ldi	r19, 0x00	; 0
    12c8:	40 e0       	ldi	r20, 0x00	; 0
    12ca:	5f e3       	ldi	r21, 0x3F	; 63
    12cc:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    12d0:	69 87       	std	Y+9, r22	; 0x09
    12d2:	7a 87       	std	Y+10, r23	; 0x0a
    12d4:	8b 87       	std	Y+11, r24	; 0x0b
    12d6:	9c 87       	std	Y+12, r25	; 0x0c
    12d8:	2d 81       	ldd	r18, Y+5	; 0x05
    12da:	3e 81       	ldd	r19, Y+6	; 0x06
    12dc:	4f 81       	ldd	r20, Y+7	; 0x07
    12de:	58 85       	ldd	r21, Y+8	; 0x08
    12e0:	69 81       	ldd	r22, Y+1	; 0x01
    12e2:	7a 81       	ldd	r23, Y+2	; 0x02
    12e4:	8b 81       	ldd	r24, Y+3	; 0x03
    12e6:	9c 81       	ldd	r25, Y+4	; 0x04
    12e8:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    12ec:	2d 85       	ldd	r18, Y+13	; 0x0d
    12ee:	3e 85       	ldd	r19, Y+14	; 0x0e
    12f0:	4f 85       	ldd	r20, Y+15	; 0x0f
    12f2:	58 89       	ldd	r21, Y+16	; 0x10
    12f4:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
    12f8:	9b 01       	movw	r18, r22
    12fa:	ac 01       	movw	r20, r24
    12fc:	69 85       	ldd	r22, Y+9	; 0x09
    12fe:	7a 85       	ldd	r23, Y+10	; 0x0a
    1300:	8b 85       	ldd	r24, Y+11	; 0x0b
    1302:	9c 85       	ldd	r25, Y+12	; 0x0c
    1304:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    1308:	68 a7       	std	Y+40, r22	; 0x28
    130a:	79 a7       	std	Y+41, r23	; 0x29
    130c:	8a a7       	std	Y+42, r24	; 0x2a
    130e:	9b a7       	std	Y+43, r25	; 0x2b
		}

		// khoang cach 2 diem lon hon 2 lan ban kinh
		if (sqrt((pntStart.x - pntCenter.x) * (pntStart.x - pntCenter.x) + (pntStart.y - pntCenter.y) * (pntStart.y - pntCenter.y)) > (2 * gVal1.R))
    1310:	28 a1       	ldd	r18, Y+32	; 0x20
    1312:	39 a1       	ldd	r19, Y+33	; 0x21
    1314:	4a a1       	ldd	r20, Y+34	; 0x22
    1316:	5b a1       	ldd	r21, Y+35	; 0x23
    1318:	69 2d       	mov	r22, r9
    131a:	7b 2d       	mov	r23, r11
    131c:	81 2f       	mov	r24, r17
    131e:	90 2f       	mov	r25, r16
    1320:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    1324:	6d 87       	std	Y+13, r22	; 0x0d
    1326:	7e 87       	std	Y+14, r23	; 0x0e
    1328:	8f 87       	std	Y+15, r24	; 0x0f
    132a:	98 8b       	std	Y+16, r25	; 0x10
    132c:	28 a5       	ldd	r18, Y+40	; 0x28
    132e:	39 a5       	ldd	r19, Y+41	; 0x29
    1330:	4a a5       	ldd	r20, Y+42	; 0x2a
    1332:	5b a5       	ldd	r21, Y+43	; 0x2b
    1334:	63 2d       	mov	r22, r3
    1336:	72 2d       	mov	r23, r2
    1338:	88 2d       	mov	r24, r8
    133a:	9a 2d       	mov	r25, r10
    133c:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    1340:	69 83       	std	Y+1, r22	; 0x01
    1342:	7a 83       	std	Y+2, r23	; 0x02
    1344:	8b 83       	std	Y+3, r24	; 0x03
    1346:	9c 83       	std	Y+4, r25	; 0x04
    1348:	2d 85       	ldd	r18, Y+13	; 0x0d
    134a:	3e 85       	ldd	r19, Y+14	; 0x0e
    134c:	4f 85       	ldd	r20, Y+15	; 0x0f
    134e:	58 89       	ldd	r21, Y+16	; 0x10
    1350:	ca 01       	movw	r24, r20
    1352:	b9 01       	movw	r22, r18
    1354:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    1358:	6d 83       	std	Y+5, r22	; 0x05
    135a:	7e 83       	std	Y+6, r23	; 0x06
    135c:	8f 83       	std	Y+7, r24	; 0x07
    135e:	98 87       	std	Y+8, r25	; 0x08
    1360:	29 81       	ldd	r18, Y+1	; 0x01
    1362:	3a 81       	ldd	r19, Y+2	; 0x02
    1364:	4b 81       	ldd	r20, Y+3	; 0x03
    1366:	5c 81       	ldd	r21, Y+4	; 0x04
    1368:	ca 01       	movw	r24, r20
    136a:	b9 01       	movw	r22, r18
    136c:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    1370:	69 87       	std	Y+9, r22	; 0x09
    1372:	7a 87       	std	Y+10, r23	; 0x0a
    1374:	8b 87       	std	Y+11, r24	; 0x0b
    1376:	9c 87       	std	Y+12, r25	; 0x0c
    1378:	29 85       	ldd	r18, Y+9	; 0x09
    137a:	3a 85       	ldd	r19, Y+10	; 0x0a
    137c:	4b 85       	ldd	r20, Y+11	; 0x0b
    137e:	5c 85       	ldd	r21, Y+12	; 0x0c
    1380:	6d 81       	ldd	r22, Y+5	; 0x05
    1382:	7e 81       	ldd	r23, Y+6	; 0x06
    1384:	8f 81       	ldd	r24, Y+7	; 0x07
    1386:	98 85       	ldd	r25, Y+8	; 0x08
    1388:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    138c:	0e 94 10 10 	call	0x2020	; 0x2020 <sqrt>
    1390:	6d 83       	std	Y+5, r22	; 0x05
    1392:	7e 83       	std	Y+6, r23	; 0x06
    1394:	8f 83       	std	Y+7, r24	; 0x07
    1396:	98 87       	std	Y+8, r25	; 0x08
    1398:	a3 01       	movw	r20, r6
    139a:	92 01       	movw	r18, r4
    139c:	c3 01       	movw	r24, r6
    139e:	b2 01       	movw	r22, r4
    13a0:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    13a4:	9b 01       	movw	r18, r22
    13a6:	ac 01       	movw	r20, r24
    13a8:	6d 81       	ldd	r22, Y+5	; 0x05
    13aa:	7e 81       	ldd	r23, Y+6	; 0x06
    13ac:	8f 81       	ldd	r24, Y+7	; 0x07
    13ae:	98 85       	ldd	r25, Y+8	; 0x08
    13b0:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
    13b4:	18 16       	cp	r1, r24
    13b6:	bc f4       	brge	.+46     	; 0x13e6 <__stack+0xf87>
		{
			return pntStart;
    13b8:	89 2d       	mov	r24, r9
    13ba:	9b 2d       	mov	r25, r11
    13bc:	a1 2f       	mov	r26, r17
    13be:	b0 2f       	mov	r27, r16
    13c0:	ea 8d       	ldd	r30, Y+26	; 0x1a
    13c2:	fb 8d       	ldd	r31, Y+27	; 0x1b
    13c4:	80 83       	st	Z, r24
    13c6:	91 83       	std	Z+1, r25	; 0x01
    13c8:	a2 83       	std	Z+2, r26	; 0x02
    13ca:	b3 83       	std	Z+3, r27	; 0x03
    13cc:	83 2d       	mov	r24, r3
    13ce:	92 2d       	mov	r25, r2
    13d0:	a8 2d       	mov	r26, r8
    13d2:	ba 2d       	mov	r27, r10
    13d4:	84 83       	std	Z+4, r24	; 0x04
    13d6:	95 83       	std	Z+5, r25	; 0x05
    13d8:	a6 83       	std	Z+6, r26	; 0x06
    13da:	b7 83       	std	Z+7, r27	; 0x07
    13dc:	c0 86       	std	Z+8, r12	; 0x08
    13de:	d1 86       	std	Z+9, r13	; 0x09
    13e0:	e2 86       	std	Z+10, r14	; 0x0a
    13e2:	f3 86       	std	Z+11, r15	; 0x0b
    13e4:	7d c1       	rjmp	.+762    	; 0x16e0 <__stack+0x1281>
		}

		// tim goc cua diem dau va diem cuoi so voi tam
		pntStart.angle = 180 * atan2(pntStart.y - pntCenter.y, pntStart.x - pntCenter.x) / M_PI;
    13e6:	2d 85       	ldd	r18, Y+13	; 0x0d
    13e8:	3e 85       	ldd	r19, Y+14	; 0x0e
    13ea:	4f 85       	ldd	r20, Y+15	; 0x0f
    13ec:	58 89       	ldd	r21, Y+16	; 0x10
    13ee:	69 81       	ldd	r22, Y+1	; 0x01
    13f0:	7a 81       	ldd	r23, Y+2	; 0x02
    13f2:	8b 81       	ldd	r24, Y+3	; 0x03
    13f4:	9c 81       	ldd	r25, Y+4	; 0x04
    13f6:	0e 94 5f 0d 	call	0x1abe	; 0x1abe <atan2>
    13fa:	20 e0       	ldi	r18, 0x00	; 0
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	44 e3       	ldi	r20, 0x34	; 52
    1400:	53 e4       	ldi	r21, 0x43	; 67
    1402:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    1406:	2b ed       	ldi	r18, 0xDB	; 219
    1408:	3f e0       	ldi	r19, 0x0F	; 15
    140a:	49 e4       	ldi	r20, 0x49	; 73
    140c:	50 e4       	ldi	r21, 0x40	; 64
    140e:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
    1412:	69 83       	std	Y+1, r22	; 0x01
    1414:	7a 83       	std	Y+2, r23	; 0x02
    1416:	8b 83       	std	Y+3, r24	; 0x03
    1418:	9c 83       	std	Y+4, r25	; 0x04
		pntEnd.angle = 180 * atan2(pntEnd.y - pntCenter.y, pntEnd.x - pntCenter.x) / M_PI;
    141a:	28 a1       	ldd	r18, Y+32	; 0x20
    141c:	39 a1       	ldd	r19, Y+33	; 0x21
    141e:	4a a1       	ldd	r20, Y+34	; 0x22
    1420:	5b a1       	ldd	r21, Y+35	; 0x23
    1422:	6c 8d       	ldd	r22, Y+28	; 0x1c
    1424:	7d 8d       	ldd	r23, Y+29	; 0x1d
    1426:	8e 8d       	ldd	r24, Y+30	; 0x1e
    1428:	9f 8d       	ldd	r25, Y+31	; 0x1f
    142a:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    142e:	6b 01       	movw	r12, r22
    1430:	7c 01       	movw	r14, r24
    1432:	28 a5       	ldd	r18, Y+40	; 0x28
    1434:	39 a5       	ldd	r19, Y+41	; 0x29
    1436:	4a a5       	ldd	r20, Y+42	; 0x2a
    1438:	5b a5       	ldd	r21, Y+43	; 0x2b
    143a:	6c a1       	ldd	r22, Y+36	; 0x24
    143c:	7d a1       	ldd	r23, Y+37	; 0x25
    143e:	8e a1       	ldd	r24, Y+38	; 0x26
    1440:	9f a1       	ldd	r25, Y+39	; 0x27
    1442:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    1446:	a7 01       	movw	r20, r14
    1448:	96 01       	movw	r18, r12
    144a:	0e 94 5f 0d 	call	0x1abe	; 0x1abe <atan2>
    144e:	20 e0       	ldi	r18, 0x00	; 0
    1450:	30 e0       	ldi	r19, 0x00	; 0
    1452:	44 e3       	ldi	r20, 0x34	; 52
    1454:	53 e4       	ldi	r21, 0x43	; 67
    1456:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    145a:	2b ed       	ldi	r18, 0xDB	; 219
    145c:	3f e0       	ldi	r19, 0x0F	; 15
    145e:	49 e4       	ldi	r20, 0x49	; 73
    1460:	50 e4       	ldi	r21, 0x40	; 64
    1462:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
    1466:	6d 87       	std	Y+13, r22	; 0x0d
    1468:	7e 87       	std	Y+14, r23	; 0x0e
    146a:	8f 87       	std	Y+15, r24	; 0x0f
    146c:	98 8b       	std	Y+16, r25	; 0x10
		// xac dinh goc de chay het cung tron
		angle = pntStart.angle;
		anglePre = (int)angle;

		// do dich chuyen cua 1 truc tuong ung voi 1 buoc (STEP)
		deltaC = 360 * STEP / (2 * M_PI * gVal1.R);
    146e:	2b ed       	ldi	r18, 0xDB	; 219
    1470:	3f e0       	ldi	r19, 0x0F	; 15
    1472:	49 ec       	ldi	r20, 0xC9	; 201
    1474:	50 e4       	ldi	r21, 0x40	; 64
    1476:	c3 01       	movw	r24, r6
    1478:	b2 01       	movw	r22, r4
    147a:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    147e:	9b 01       	movw	r18, r22
    1480:	ac 01       	movw	r20, r24
    1482:	60 e0       	ldi	r22, 0x00	; 0
    1484:	70 e0       	ldi	r23, 0x00	; 0
    1486:	84 eb       	ldi	r24, 0xB4	; 180
    1488:	93 e4       	ldi	r25, 0x43	; 67
    148a:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
    148e:	6c a7       	std	Y+44, r22	; 0x2c
    1490:	7d a7       	std	Y+45, r23	; 0x2d
    1492:	8e a7       	std	Y+46, r24	; 0x2e
    1494:	9f a7       	std	Y+47, r25	; 0x2f
		// quen me roi, nhung ma cai nay khac cai case tren.
		if ((pntStart.angle <= 0 && pntEnd.angle <= 0 && pntEnd.angle <= pntStart.angle)
    1496:	20 e0       	ldi	r18, 0x00	; 0
    1498:	30 e0       	ldi	r19, 0x00	; 0
    149a:	a9 01       	movw	r20, r18
    149c:	69 81       	ldd	r22, Y+1	; 0x01
    149e:	7a 81       	ldd	r23, Y+2	; 0x02
    14a0:	8b 81       	ldd	r24, Y+3	; 0x03
    14a2:	9c 81       	ldd	r25, Y+4	; 0x04
    14a4:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
    14a8:	18 16       	cp	r1, r24
    14aa:	c4 f0       	brlt	.+48     	; 0x14dc <__stack+0x107d>
    14ac:	20 e0       	ldi	r18, 0x00	; 0
    14ae:	30 e0       	ldi	r19, 0x00	; 0
    14b0:	a9 01       	movw	r20, r18
    14b2:	6d 85       	ldd	r22, Y+13	; 0x0d
    14b4:	7e 85       	ldd	r23, Y+14	; 0x0e
    14b6:	8f 85       	ldd	r24, Y+15	; 0x0f
    14b8:	98 89       	ldd	r25, Y+16	; 0x10
    14ba:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
    14be:	18 16       	cp	r1, r24
    14c0:	6c f0       	brlt	.+26     	; 0x14dc <__stack+0x107d>
    14c2:	2d 85       	ldd	r18, Y+13	; 0x0d
    14c4:	3e 85       	ldd	r19, Y+14	; 0x0e
    14c6:	4f 85       	ldd	r20, Y+15	; 0x0f
    14c8:	58 89       	ldd	r21, Y+16	; 0x10
    14ca:	69 81       	ldd	r22, Y+1	; 0x01
    14cc:	7a 81       	ldd	r23, Y+2	; 0x02
    14ce:	8b 81       	ldd	r24, Y+3	; 0x03
    14d0:	9c 81       	ldd	r25, Y+4	; 0x04
    14d2:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
    14d6:	88 23       	and	r24, r24
    14d8:	d4 f5       	brge	.+116    	; 0x154e <__stack+0x10ef>
    14da:	f5 c0       	rjmp	.+490    	; 0x16c6 <__stack+0x1267>
		|| (pntStart.angle >= 0 && pntEnd.angle <= 0)
    14dc:	20 e0       	ldi	r18, 0x00	; 0
    14de:	30 e0       	ldi	r19, 0x00	; 0
    14e0:	a9 01       	movw	r20, r18
    14e2:	69 81       	ldd	r22, Y+1	; 0x01
    14e4:	7a 81       	ldd	r23, Y+2	; 0x02
    14e6:	8b 81       	ldd	r24, Y+3	; 0x03
    14e8:	9c 81       	ldd	r25, Y+4	; 0x04
    14ea:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
    14ee:	88 23       	and	r24, r24
    14f0:	64 f0       	brlt	.+24     	; 0x150a <__stack+0x10ab>
    14f2:	20 e0       	ldi	r18, 0x00	; 0
    14f4:	30 e0       	ldi	r19, 0x00	; 0
    14f6:	a9 01       	movw	r20, r18
    14f8:	6d 85       	ldd	r22, Y+13	; 0x0d
    14fa:	7e 85       	ldd	r23, Y+14	; 0x0e
    14fc:	8f 85       	ldd	r24, Y+15	; 0x0f
    14fe:	98 89       	ldd	r25, Y+16	; 0x10
    1500:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
    1504:	18 16       	cp	r1, r24
    1506:	64 f0       	brlt	.+24     	; 0x1520 <__stack+0x10c1>
    1508:	22 c0       	rjmp	.+68     	; 0x154e <__stack+0x10ef>
		|| (pntStart.angle >= 0 && pntEnd.angle >= 0 && pntEnd.angle <= pntStart.angle)
    150a:	20 e0       	ldi	r18, 0x00	; 0
    150c:	30 e0       	ldi	r19, 0x00	; 0
    150e:	a9 01       	movw	r20, r18
    1510:	69 81       	ldd	r22, Y+1	; 0x01
    1512:	7a 81       	ldd	r23, Y+2	; 0x02
    1514:	8b 81       	ldd	r24, Y+3	; 0x03
    1516:	9c 81       	ldd	r25, Y+4	; 0x04
    1518:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
    151c:	88 23       	and	r24, r24
    151e:	2c f1       	brlt	.+74     	; 0x156a <__stack+0x110b>
    1520:	20 e0       	ldi	r18, 0x00	; 0
    1522:	30 e0       	ldi	r19, 0x00	; 0
    1524:	a9 01       	movw	r20, r18
    1526:	6d 85       	ldd	r22, Y+13	; 0x0d
    1528:	7e 85       	ldd	r23, Y+14	; 0x0e
    152a:	8f 85       	ldd	r24, Y+15	; 0x0f
    152c:	98 89       	ldd	r25, Y+16	; 0x10
    152e:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
    1532:	88 23       	and	r24, r24
    1534:	d4 f0       	brlt	.+52     	; 0x156a <__stack+0x110b>
    1536:	2d 85       	ldd	r18, Y+13	; 0x0d
    1538:	3e 85       	ldd	r19, Y+14	; 0x0e
    153a:	4f 85       	ldd	r20, Y+15	; 0x0f
    153c:	58 89       	ldd	r21, Y+16	; 0x10
    153e:	69 81       	ldd	r22, Y+1	; 0x01
    1540:	7a 81       	ldd	r23, Y+2	; 0x02
    1542:	8b 81       	ldd	r24, Y+3	; 0x03
    1544:	9c 81       	ldd	r25, Y+4	; 0x04
    1546:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
    154a:	88 23       	and	r24, r24
    154c:	74 f0       	brlt	.+28     	; 0x156a <__stack+0x110b>
		)
		{
			pntEnd.angle += 360;
    154e:	20 e0       	ldi	r18, 0x00	; 0
    1550:	30 e0       	ldi	r19, 0x00	; 0
    1552:	44 eb       	ldi	r20, 0xB4	; 180
    1554:	53 e4       	ldi	r21, 0x43	; 67
    1556:	6d 85       	ldd	r22, Y+13	; 0x0d
    1558:	7e 85       	ldd	r23, Y+14	; 0x0e
    155a:	8f 85       	ldd	r24, Y+15	; 0x0f
    155c:	98 89       	ldd	r25, Y+16	; 0x10
    155e:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    1562:	6d 87       	std	Y+13, r22	; 0x0d
    1564:	7e 87       	std	Y+14, r23	; 0x0e
    1566:	8f 87       	std	Y+15, r24	; 0x0f
    1568:	98 8b       	std	Y+16, r25	; 0x10
		}
		while (angle <= pntEnd.angle)
    156a:	29 81       	ldd	r18, Y+1	; 0x01
    156c:	3a 81       	ldd	r19, Y+2	; 0x02
    156e:	4b 81       	ldd	r20, Y+3	; 0x03
    1570:	5c 81       	ldd	r21, Y+4	; 0x04
    1572:	6d 85       	ldd	r22, Y+13	; 0x0d
    1574:	7e 85       	ldd	r23, Y+14	; 0x0e
    1576:	8f 85       	ldd	r24, Y+15	; 0x0f
    1578:	98 89       	ldd	r25, Y+16	; 0x10
    157a:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
    157e:	88 23       	and	r24, r24
    1580:	0c f4       	brge	.+2      	; 0x1584 <__stack+0x1125>
    1582:	81 c0       	rjmp	.+258    	; 0x1686 <__stack+0x1227>
    1584:	c9 80       	ldd	r12, Y+1	; 0x01
    1586:	da 80       	ldd	r13, Y+2	; 0x02
    1588:	eb 80       	ldd	r14, Y+3	; 0x03
    158a:	fc 80       	ldd	r15, Y+4	; 0x04
    158c:	39 86       	std	Y+9, r3	; 0x09
    158e:	29 8a       	std	Y+17, r2	; 0x11
    1590:	8a 8a       	std	Y+18, r8	; 0x12
    1592:	9b 8a       	std	Y+19, r9	; 0x13
    1594:	bc 8a       	std	Y+20, r11	; 0x14
    1596:	1d 8b       	std	Y+21, r17	; 0x15
    1598:	0e 8b       	std	Y+22, r16	; 0x16
    159a:	0a 2d       	mov	r16, r10
		{
			pntCur.x = (int32_t)(gVal1.R * cos(angle * M_PI / 180) + pntCenter.x);
    159c:	2b ed       	ldi	r18, 0xDB	; 219
    159e:	3f e0       	ldi	r19, 0x0F	; 15
    15a0:	49 e4       	ldi	r20, 0x49	; 73
    15a2:	50 e4       	ldi	r21, 0x40	; 64
    15a4:	c7 01       	movw	r24, r14
    15a6:	b6 01       	movw	r22, r12
    15a8:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    15ac:	20 e0       	ldi	r18, 0x00	; 0
    15ae:	30 e0       	ldi	r19, 0x00	; 0
    15b0:	44 e3       	ldi	r20, 0x34	; 52
    15b2:	53 e4       	ldi	r21, 0x43	; 67
    15b4:	0e 94 c8 0d 	call	0x1b90	; 0x1b90 <__divsf3>
    15b8:	69 83       	std	Y+1, r22	; 0x01
    15ba:	7a 83       	std	Y+2, r23	; 0x02
    15bc:	8b 83       	std	Y+3, r24	; 0x03
    15be:	9c 83       	std	Y+4, r25	; 0x04
    15c0:	0e 94 c3 0d 	call	0x1b86	; 0x1b86 <cos>
    15c4:	a3 01       	movw	r20, r6
    15c6:	92 01       	movw	r18, r4
    15c8:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    15cc:	28 a1       	ldd	r18, Y+32	; 0x20
    15ce:	39 a1       	ldd	r19, Y+33	; 0x21
    15d0:	4a a1       	ldd	r20, Y+34	; 0x22
    15d2:	5b a1       	ldd	r21, Y+35	; 0x23
    15d4:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    15d8:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
    15dc:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
    15e0:	86 2e       	mov	r8, r22
    15e2:	37 2e       	mov	r3, r23
    15e4:	28 2e       	mov	r2, r24
    15e6:	9d 83       	std	Y+5, r25	; 0x05
			pntCur.y = (int32_t)(gVal1.R * sin(angle * M_PI / 180) + pntCenter.y);
    15e8:	69 81       	ldd	r22, Y+1	; 0x01
    15ea:	7a 81       	ldd	r23, Y+2	; 0x02
    15ec:	8b 81       	ldd	r24, Y+3	; 0x03
    15ee:	9c 81       	ldd	r25, Y+4	; 0x04
    15f0:	0e 94 02 10 	call	0x2004	; 0x2004 <sin>
    15f4:	a3 01       	movw	r20, r6
    15f6:	92 01       	movw	r18, r4
    15f8:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    15fc:	28 a5       	ldd	r18, Y+40	; 0x28
    15fe:	39 a5       	ldd	r19, Y+41	; 0x29
    1600:	4a a5       	ldd	r20, Y+42	; 0x2a
    1602:	5b a5       	ldd	r21, Y+43	; 0x2b
    1604:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    1608:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
    160c:	0e 94 72 0e 	call	0x1ce4	; 0x1ce4 <__floatsisf>
    1610:	16 2f       	mov	r17, r22
    1612:	b7 2e       	mov	r11, r23
    1614:	a8 2e       	mov	r10, r24
    1616:	99 2e       	mov	r9, r25
			stepper_ctrl(pntCur.x - pntPre.x, pntCur.y - pntPre.y);
    1618:	29 85       	ldd	r18, Y+9	; 0x09
    161a:	39 89       	ldd	r19, Y+17	; 0x11
    161c:	4a 89       	ldd	r20, Y+18	; 0x12
    161e:	50 2f       	mov	r21, r16
    1620:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    1624:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
    1628:	06 2f       	mov	r16, r22
    162a:	2b 89       	ldd	r18, Y+19	; 0x13
    162c:	3c 89       	ldd	r19, Y+20	; 0x14
    162e:	4d 89       	ldd	r20, Y+21	; 0x15
    1630:	5e 89       	ldd	r21, Y+22	; 0x16
    1632:	68 2d       	mov	r22, r8
    1634:	73 2d       	mov	r23, r3
    1636:	82 2d       	mov	r24, r2
    1638:	9d 81       	ldd	r25, Y+5	; 0x05
    163a:	0e 94 df 0c 	call	0x19be	; 0x19be <__subsf3>
    163e:	0e 94 3a 0e 	call	0x1c74	; 0x1c74 <__fixsfsi>
    1642:	86 2f       	mov	r24, r22
    1644:	60 2f       	mov	r22, r16
    1646:	0e 94 2b 0c 	call	0x1856	; 0x1856 <stepper_ctrl>
				//UART_printXY(pntCur.x, pntCur.y);
				//anglePre = (int)angle;
			}
			pntPre.x = pntCur.x;
			pntPre.y = pntCur.y;
			angle += deltaC;
    164a:	2c a5       	ldd	r18, Y+44	; 0x2c
    164c:	3d a5       	ldd	r19, Y+45	; 0x2d
    164e:	4e a5       	ldd	r20, Y+46	; 0x2e
    1650:	5f a5       	ldd	r21, Y+47	; 0x2f
    1652:	c7 01       	movw	r24, r14
    1654:	b6 01       	movw	r22, r12
    1656:	0e 94 e0 0c 	call	0x19c0	; 0x19c0 <__addsf3>
    165a:	6b 01       	movw	r12, r22
    165c:	7c 01       	movw	r14, r24
			{
				//UART_printXY(pntCur.x, pntCur.y);
				//anglePre = (int)angle;
			}
			pntPre.x = pntCur.x;
			pntPre.y = pntCur.y;
    165e:	19 87       	std	Y+9, r17	; 0x09
    1660:	b9 8a       	std	Y+17, r11	; 0x11
    1662:	aa 8a       	std	Y+18, r10	; 0x12
    1664:	09 2d       	mov	r16, r9
			if ((int)angle != anglePre)// ghi gia tri len uart
			{
				//UART_printXY(pntCur.x, pntCur.y);
				//anglePre = (int)angle;
			}
			pntPre.x = pntCur.x;
    1666:	8b 8a       	std	Y+19, r8	; 0x13
    1668:	3c 8a       	std	Y+20, r3	; 0x14
    166a:	2d 8a       	std	Y+21, r2	; 0x15
    166c:	bd 81       	ldd	r27, Y+5	; 0x05
    166e:	be 8b       	std	Y+22, r27	; 0x16
		|| (pntStart.angle >= 0 && pntEnd.angle >= 0 && pntEnd.angle <= pntStart.angle)
		)
		{
			pntEnd.angle += 360;
		}
		while (angle <= pntEnd.angle)
    1670:	9b 01       	movw	r18, r22
    1672:	ac 01       	movw	r20, r24
    1674:	6d 85       	ldd	r22, Y+13	; 0x0d
    1676:	7e 85       	ldd	r23, Y+14	; 0x0e
    1678:	8f 85       	ldd	r24, Y+15	; 0x0f
    167a:	98 89       	ldd	r25, Y+16	; 0x10
    167c:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
    1680:	88 23       	and	r24, r24
    1682:	0c f0       	brlt	.+2      	; 0x1686 <__stack+0x1227>
    1684:	8b cf       	rjmp	.-234    	; 0x159c <__stack+0x113d>
			angle += deltaC;
		}
		gVal1.R = 0;
	}

	return pntEnd;
    1686:	2c 8d       	ldd	r18, Y+28	; 0x1c
    1688:	3d 8d       	ldd	r19, Y+29	; 0x1d
    168a:	4e 8d       	ldd	r20, Y+30	; 0x1e
    168c:	5f 8d       	ldd	r21, Y+31	; 0x1f
    168e:	aa 8d       	ldd	r26, Y+26	; 0x1a
    1690:	bb 8d       	ldd	r27, Y+27	; 0x1b
    1692:	2d 93       	st	X+, r18
    1694:	3d 93       	st	X+, r19
    1696:	4d 93       	st	X+, r20
    1698:	5c 93       	st	X, r21
    169a:	13 97       	sbiw	r26, 0x03	; 3
    169c:	2c a1       	ldd	r18, Y+36	; 0x24
    169e:	3d a1       	ldd	r19, Y+37	; 0x25
    16a0:	4e a1       	ldd	r20, Y+38	; 0x26
    16a2:	5f a1       	ldd	r21, Y+39	; 0x27
    16a4:	14 96       	adiw	r26, 0x04	; 4
    16a6:	2d 93       	st	X+, r18
    16a8:	3d 93       	st	X+, r19
    16aa:	4d 93       	st	X+, r20
    16ac:	5c 93       	st	X, r21
    16ae:	17 97       	sbiw	r26, 0x07	; 7
    16b0:	2d 85       	ldd	r18, Y+13	; 0x0d
    16b2:	3e 85       	ldd	r19, Y+14	; 0x0e
    16b4:	4f 85       	ldd	r20, Y+15	; 0x0f
    16b6:	58 89       	ldd	r21, Y+16	; 0x10
    16b8:	18 96       	adiw	r26, 0x08	; 8
    16ba:	2d 93       	st	X+, r18
    16bc:	3d 93       	st	X+, r19
    16be:	4d 93       	st	X+, r20
    16c0:	5c 93       	st	X, r21
    16c2:	1b 97       	sbiw	r26, 0x0b	; 11
    16c4:	0d c0       	rjmp	.+26     	; 0x16e0 <__stack+0x1281>

		// do dich chuyen cua 1 truc tuong ung voi 1 buoc (STEP)
		deltaC = 360 * STEP / (2 * M_PI * gVal1.R);
		// quen me roi, nhung ma cai nay khac cai case tren.
		if ((pntStart.angle <= 0 && pntEnd.angle <= 0 && pntEnd.angle <= pntStart.angle)
		|| (pntStart.angle >= 0 && pntEnd.angle <= 0)
    16c6:	20 e0       	ldi	r18, 0x00	; 0
    16c8:	30 e0       	ldi	r19, 0x00	; 0
    16ca:	a9 01       	movw	r20, r18
    16cc:	69 81       	ldd	r22, Y+1	; 0x01
    16ce:	7a 81       	ldd	r23, Y+2	; 0x02
    16d0:	8b 81       	ldd	r24, Y+3	; 0x03
    16d2:	9c 81       	ldd	r25, Y+4	; 0x04
    16d4:	0e 94 88 0f 	call	0x1f10	; 0x1f10 <__gesf2>
    16d8:	88 23       	and	r24, r24
    16da:	0c f0       	brlt	.+2      	; 0x16de <__stack+0x127f>
    16dc:	38 cf       	rjmp	.-400    	; 0x154e <__stack+0x10ef>
    16de:	15 cf       	rjmp	.-470    	; 0x150a <__stack+0x10ab>
		}
		gVal1.R = 0;
	}

	return pntEnd;
}
    16e0:	8a 8d       	ldd	r24, Y+26	; 0x1a
    16e2:	9b 8d       	ldd	r25, Y+27	; 0x1b
    16e4:	af 96       	adiw	r28, 0x2f	; 47
    16e6:	0f b6       	in	r0, 0x3f	; 63
    16e8:	f8 94       	cli
    16ea:	de bf       	out	0x3e, r29	; 62
    16ec:	0f be       	out	0x3f, r0	; 63
    16ee:	cd bf       	out	0x3d, r28	; 61
    16f0:	df 91       	pop	r29
    16f2:	cf 91       	pop	r28
    16f4:	1f 91       	pop	r17
    16f6:	0f 91       	pop	r16
    16f8:	ff 90       	pop	r15
    16fa:	ef 90       	pop	r14
    16fc:	df 90       	pop	r13
    16fe:	cf 90       	pop	r12
    1700:	bf 90       	pop	r11
    1702:	af 90       	pop	r10
    1704:	9f 90       	pop	r9
    1706:	8f 90       	pop	r8
    1708:	7f 90       	pop	r7
    170a:	6f 90       	pop	r6
    170c:	5f 90       	pop	r5
    170e:	4f 90       	pop	r4
    1710:	3f 90       	pop	r3
    1712:	2f 90       	pop	r2
    1714:	08 95       	ret

00001716 <main>:
int main(void)
{
    1716:	cf 93       	push	r28
    1718:	df 93       	push	r29
    171a:	cd b7       	in	r28, 0x3d	; 61
    171c:	de b7       	in	r29, 0x3e	; 62
    171e:	e9 97       	sbiw	r28, 0x39	; 57
    1720:	0f b6       	in	r0, 0x3f	; 63
    1722:	f8 94       	cli
    1724:	de bf       	out	0x3e, r29	; 62
    1726:	0f be       	out	0x3f, r0	; 63
    1728:	cd bf       	out	0x3d, r28	; 61

	struct gValue gVal;
	struct point pntStart;
	pntStart.x = pntStart.y = 0;
    172a:	1a a2       	std	Y+34, r1	; 0x22
    172c:	1b a2       	std	Y+35, r1	; 0x23
    172e:	1c a2       	std	Y+36, r1	; 0x24
    1730:	1d a2       	std	Y+37, r1	; 0x25

	stdout = &mystdout;
    1732:	86 e6       	ldi	r24, 0x66	; 102
    1734:	90 e0       	ldi	r25, 0x00	; 0
    1736:	90 93 d7 00 	sts	0x00D7, r25	; 0x8000d7 <__iob+0x3>
    173a:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__iob+0x2>

	UART_config(9600);
    173e:	60 e8       	ldi	r22, 0x80	; 128
    1740:	75 e2       	ldi	r23, 0x25	; 37
    1742:	80 e0       	ldi	r24, 0x00	; 0
    1744:	90 e0       	ldi	r25, 0x00	; 0
    1746:	0e 94 4e 0c 	call	0x189c	; 0x189c <UART_config>
	stepper_config();
    174a:	0e 94 27 0c 	call	0x184e	; 0x184e <stepper_config>
	UART_println("START!!!");
    174e:	84 e7       	ldi	r24, 0x74	; 116
    1750:	90 e0       	ldi	r25, 0x00	; 0
    1752:	0e 94 b3 0c 	call	0x1966	; 0x1966 <UART_println>
	sei();
    1756:	78 94       	sei
		}
		_delay_ms(1000);
	}
	while(1)
	{
		if (transmitted == truee)
    1758:	80 91 9d 00 	lds	r24, 0x009D	; 0x80009d <transmitted>
    175c:	81 30       	cpi	r24, 0x01	; 1
    175e:	c9 f5       	brne	.+114    	; 0x17d2 <main+0xbc>
		{
			//UART_println(uartBuffer);
			gVal = getAllGcodeValue(uartBuffer);
    1760:	6e e9       	ldi	r22, 0x9E	; 158
    1762:	70 e0       	ldi	r23, 0x00	; 0
    1764:	ce 01       	movw	r24, r28
    1766:	01 96       	adiw	r24, 0x01	; 1
    1768:	0e 94 da 00 	call	0x1b4	; 0x1b4 <getAllGcodeValue>
			//printf("G = %d\nX = %d\nY = %d\nR = %d\nI = %d\nJ = %d\n", (int)gVal.G, (int)gVal.X, (int)gVal.Y, (int)gVal.R, (int)gVal.I, (int)gVal.J);
			draw(gVal, pntStart);
    176c:	1e a2       	std	Y+38, r1	; 0x26
    176e:	1f a2       	std	Y+39, r1	; 0x27
    1770:	18 a6       	std	Y+40, r1	; 0x28
    1772:	19 a6       	std	Y+41, r1	; 0x29
    1774:	8d b7       	in	r24, 0x3d	; 61
    1776:	9e b7       	in	r25, 0x3e	; 62
    1778:	0c 97       	sbiw	r24, 0x0c	; 12
    177a:	0f b6       	in	r0, 0x3f	; 63
    177c:	f8 94       	cli
    177e:	9e bf       	out	0x3e, r25	; 62
    1780:	0f be       	out	0x3f, r0	; 63
    1782:	8d bf       	out	0x3d, r24	; 61
    1784:	ad b7       	in	r26, 0x3d	; 61
    1786:	be b7       	in	r27, 0x3e	; 62
    1788:	11 96       	adiw	r26, 0x01	; 1
    178a:	8c e0       	ldi	r24, 0x0C	; 12
    178c:	fe 01       	movw	r30, r28
    178e:	b2 96       	adiw	r30, 0x22	; 34
    1790:	01 90       	ld	r0, Z+
    1792:	0d 92       	st	X+, r0
    1794:	8a 95       	dec	r24
    1796:	e1 f7       	brne	.-8      	; 0x1790 <main+0x7a>
    1798:	8d b7       	in	r24, 0x3d	; 61
    179a:	9e b7       	in	r25, 0x3e	; 62
    179c:	81 97       	sbiw	r24, 0x21	; 33
    179e:	0f b6       	in	r0, 0x3f	; 63
    17a0:	f8 94       	cli
    17a2:	9e bf       	out	0x3e, r25	; 62
    17a4:	0f be       	out	0x3f, r0	; 63
    17a6:	8d bf       	out	0x3d, r24	; 61
    17a8:	ad b7       	in	r26, 0x3d	; 61
    17aa:	be b7       	in	r27, 0x3e	; 62
    17ac:	11 96       	adiw	r26, 0x01	; 1
    17ae:	81 e2       	ldi	r24, 0x21	; 33
    17b0:	fe 01       	movw	r30, r28
    17b2:	31 96       	adiw	r30, 0x01	; 1
    17b4:	01 90       	ld	r0, Z+
    17b6:	0d 92       	st	X+, r0
    17b8:	8a 95       	dec	r24
    17ba:	e1 f7       	brne	.-8      	; 0x17b4 <main+0x9e>
    17bc:	ce 01       	movw	r24, r28
    17be:	8e 96       	adiw	r24, 0x2e	; 46
    17c0:	0e 94 59 01 	call	0x2b2	; 0x2b2 <draw>
			transmitted = falsee;
    17c4:	10 92 9d 00 	sts	0x009D, r1	; 0x80009d <transmitted>
    17c8:	0f b6       	in	r0, 0x3f	; 63
    17ca:	f8 94       	cli
    17cc:	de bf       	out	0x3e, r29	; 62
    17ce:	0f be       	out	0x3f, r0	; 63
    17d0:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    17d2:	9f ef       	ldi	r25, 0xFF	; 255
    17d4:	29 e6       	ldi	r18, 0x69	; 105
    17d6:	88 e1       	ldi	r24, 0x18	; 24
    17d8:	91 50       	subi	r25, 0x01	; 1
    17da:	20 40       	sbci	r18, 0x00	; 0
    17dc:	80 40       	sbci	r24, 0x00	; 0
    17de:	e1 f7       	brne	.-8      	; 0x17d8 <main+0xc2>
    17e0:	00 c0       	rjmp	.+0      	; 0x17e2 <main+0xcc>
    17e2:	00 00       	nop
    17e4:	b9 cf       	rjmp	.-142    	; 0x1758 <main+0x42>

000017e6 <__vector_11>:
		//UART_println("LOPP");
		_delay_ms(500);
	}
}
ISR(USART_RXC_vect)
{
    17e6:	1f 92       	push	r1
    17e8:	0f 92       	push	r0
    17ea:	0f b6       	in	r0, 0x3f	; 63
    17ec:	0f 92       	push	r0
    17ee:	11 24       	eor	r1, r1
    17f0:	2f 93       	push	r18
    17f2:	3f 93       	push	r19
    17f4:	4f 93       	push	r20
    17f6:	8f 93       	push	r24
    17f8:	9f 93       	push	r25
    17fa:	ef 93       	push	r30
    17fc:	ff 93       	push	r31
	uartBuffer[indexUART] = UDR;
    17fe:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__data_end>
    1802:	28 2f       	mov	r18, r24
    1804:	30 e0       	ldi	r19, 0x00	; 0
    1806:	9c b1       	in	r25, 0x0c	; 12
    1808:	f9 01       	movw	r30, r18
    180a:	e2 56       	subi	r30, 0x62	; 98
    180c:	ff 4f       	sbci	r31, 0xFF	; 255
    180e:	90 83       	st	Z, r25
	if (transmitted == truee)
    1810:	40 91 9d 00 	lds	r20, 0x009D	; 0x80009d <transmitted>
    1814:	41 30       	cpi	r20, 0x01	; 1
    1816:	79 f0       	breq	.+30     	; 0x1836 <__vector_11+0x50>
	{
		return;
	}
	if (uartBuffer[indexUART] == '@')
    1818:	90 34       	cpi	r25, 0x40	; 64
    181a:	51 f4       	brne	.+20     	; 0x1830 <__vector_11+0x4a>
	{
		uartBuffer[indexUART] = '\0';
    181c:	f9 01       	movw	r30, r18
    181e:	e2 56       	subi	r30, 0x62	; 98
    1820:	ff 4f       	sbci	r31, 0xFF	; 255
    1822:	10 82       	st	Z, r1
		indexUART = 0;
    1824:	10 92 9c 00 	sts	0x009C, r1	; 0x80009c <__data_end>
		transmitted = truee;
    1828:	81 e0       	ldi	r24, 0x01	; 1
    182a:	80 93 9d 00 	sts	0x009D, r24	; 0x80009d <transmitted>
		return;
    182e:	03 c0       	rjmp	.+6      	; 0x1836 <__vector_11+0x50>
	}
	indexUART++;
    1830:	8f 5f       	subi	r24, 0xFF	; 255
    1832:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__data_end>
}
    1836:	ff 91       	pop	r31
    1838:	ef 91       	pop	r30
    183a:	9f 91       	pop	r25
    183c:	8f 91       	pop	r24
    183e:	4f 91       	pop	r20
    1840:	3f 91       	pop	r19
    1842:	2f 91       	pop	r18
    1844:	0f 90       	pop	r0
    1846:	0f be       	out	0x3f, r0	; 63
    1848:	0f 90       	pop	r0
    184a:	1f 90       	pop	r1
    184c:	18 95       	reti

0000184e <stepper_config>:
#include "stepper.h"

// configure stepper pin
void stepper_config()
{
	DDR_STEPPER |= (1<<PIN_DIR_X) | (1<<PIN_DIR_Y) | (1<<PIN_STEP_X) | (1<<PIN_STEP_Y);
    184e:	81 b3       	in	r24, 0x11	; 17
    1850:	8c 63       	ori	r24, 0x3C	; 60
    1852:	81 bb       	out	0x11, r24	; 17
    1854:	08 95       	ret

00001856 <stepper_ctrl>:

// control a stepper
void stepper_ctrl(int8_t delta_x, int8_t delta_y)
{
	// configure direction of steppers
	if (delta_x < 0) setb(PORT_STEPPER, PIN_DIR_X);
    1856:	88 23       	and	r24, r24
    1858:	14 f4       	brge	.+4      	; 0x185e <stepper_ctrl+0x8>
    185a:	92 9a       	sbi	0x12, 2	; 18
    185c:	01 c0       	rjmp	.+2      	; 0x1860 <stepper_ctrl+0xa>
	else clrb(PORT_STEPPER, PIN_DIR_X);
    185e:	92 98       	cbi	0x12, 2	; 18
	
	if (delta_y < 0) setb(PORT_STEPPER, PIN_DIR_Y);
    1860:	66 23       	and	r22, r22
    1862:	14 f4       	brge	.+4      	; 0x1868 <stepper_ctrl+0x12>
    1864:	94 9a       	sbi	0x12, 4	; 18
    1866:	01 c0       	rjmp	.+2      	; 0x186a <stepper_ctrl+0x14>
	else clrb(PORT_STEPPER, PIN_DIR_Y);
    1868:	94 98       	cbi	0x12, 4	; 18
	
	if (delta_x != 0) setb(PORT_STEPPER, PIN_STEP_X);
    186a:	88 23       	and	r24, r24
    186c:	11 f0       	breq	.+4      	; 0x1872 <stepper_ctrl+0x1c>
    186e:	93 9a       	sbi	0x12, 3	; 18
    1870:	01 c0       	rjmp	.+2      	; 0x1874 <stepper_ctrl+0x1e>
	else clrb(PORT_STEPPER, PIN_STEP_X);
    1872:	93 98       	cbi	0x12, 3	; 18
	if (delta_y != 0) setb(PORT_STEPPER, PIN_STEP_Y);
    1874:	66 23       	and	r22, r22
    1876:	11 f0       	breq	.+4      	; 0x187c <stepper_ctrl+0x26>
    1878:	95 9a       	sbi	0x12, 5	; 18
    187a:	01 c0       	rjmp	.+2      	; 0x187e <stepper_ctrl+0x28>
	else clrb(PORT_STEPPER, PIN_STEP_Y);
    187c:	95 98       	cbi	0x12, 5	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    187e:	8f e8       	ldi	r24, 0x8F	; 143
    1880:	91 e0       	ldi	r25, 0x01	; 1
    1882:	01 97       	sbiw	r24, 0x01	; 1
    1884:	f1 f7       	brne	.-4      	; 0x1882 <stepper_ctrl+0x2c>
    1886:	00 c0       	rjmp	.+0      	; 0x1888 <stepper_ctrl+0x32>
    1888:	00 00       	nop
	
	_delay_us(100);
	clrb(PORT_STEPPER, PIN_STEP_X);
    188a:	93 98       	cbi	0x12, 3	; 18
	clrb(PORT_STEPPER, PIN_STEP_Y);
    188c:	95 98       	cbi	0x12, 5	; 18
    188e:	8f e8       	ldi	r24, 0x8F	; 143
    1890:	91 e0       	ldi	r25, 0x01	; 1
    1892:	01 97       	sbiw	r24, 0x01	; 1
    1894:	f1 f7       	brne	.-4      	; 0x1892 <stepper_ctrl+0x3c>
    1896:	00 c0       	rjmp	.+0      	; 0x1898 <stepper_ctrl+0x42>
    1898:	00 00       	nop
    189a:	08 95       	ret

0000189c <UART_config>:
{
	// Wait for incoming data
	while ( ( UCSRA & ( 1 << RXC ) ) == 0);
	/// Return the data
	return UDR;
}
    189c:	9b 01       	movw	r18, r22
    189e:	ac 01       	movw	r20, r24
    18a0:	10 bc       	out	0x20, r1	; 32
    18a2:	60 e4       	ldi	r22, 0x40	; 64
    18a4:	72 e4       	ldi	r23, 0x42	; 66
    18a6:	8f e0       	ldi	r24, 0x0F	; 15
    18a8:	90 e0       	ldi	r25, 0x00	; 0
    18aa:	0e 94 91 10 	call	0x2122	; 0x2122 <__udivmodsi4>
    18ae:	29 b9       	out	0x09, r18	; 9
    18b0:	86 e8       	ldi	r24, 0x86	; 134
    18b2:	80 bd       	out	0x20, r24	; 32
    18b4:	88 e9       	ldi	r24, 0x98	; 152
    18b6:	8a b9       	out	0x0a, r24	; 10
    18b8:	08 95       	ret

000018ba <UART_putChar>:
    18ba:	5d 9b       	sbis	0x0b, 5	; 11
    18bc:	fe cf       	rjmp	.-4      	; 0x18ba <UART_putChar>
    18be:	8c b9       	out	0x0c, r24	; 12
    18c0:	08 95       	ret

000018c2 <usart_putchar_printf>:
    18c2:	cf 93       	push	r28
    18c4:	c8 2f       	mov	r28, r24
    18c6:	8a 30       	cpi	r24, 0x0A	; 10
    18c8:	19 f4       	brne	.+6      	; 0x18d0 <usart_putchar_printf+0xe>
    18ca:	8d e0       	ldi	r24, 0x0D	; 13
    18cc:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <UART_putChar>
    18d0:	8c 2f       	mov	r24, r28
    18d2:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <UART_putChar>
    18d6:	80 e0       	ldi	r24, 0x00	; 0
    18d8:	90 e0       	ldi	r25, 0x00	; 0
    18da:	cf 91       	pop	r28
    18dc:	08 95       	ret

000018de <UART_print>:
    18de:	cf 93       	push	r28
    18e0:	df 93       	push	r29
    18e2:	ec 01       	movw	r28, r24
    18e4:	88 81       	ld	r24, Y
    18e6:	88 23       	and	r24, r24
    18e8:	31 f0       	breq	.+12     	; 0x18f6 <UART_print+0x18>
    18ea:	21 96       	adiw	r28, 0x01	; 1
    18ec:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <UART_putChar>
    18f0:	89 91       	ld	r24, Y+
    18f2:	81 11       	cpse	r24, r1
    18f4:	fb cf       	rjmp	.-10     	; 0x18ec <UART_print+0xe>
    18f6:	df 91       	pop	r29
    18f8:	cf 91       	pop	r28
    18fa:	08 95       	ret

000018fc <UART_printNum>:
    18fc:	0f 93       	push	r16
    18fe:	1f 93       	push	r17
    1900:	cf 93       	push	r28
    1902:	df 93       	push	r29
    1904:	cd b7       	in	r28, 0x3d	; 61
    1906:	de b7       	in	r29, 0x3e	; 62
    1908:	64 97       	sbiw	r28, 0x14	; 20
    190a:	0f b6       	in	r0, 0x3f	; 63
    190c:	f8 94       	cli
    190e:	de bf       	out	0x3e, r29	; 62
    1910:	0f be       	out	0x3f, r0	; 63
    1912:	cd bf       	out	0x3d, r28	; 61
    1914:	9f 93       	push	r25
    1916:	8f 93       	push	r24
    1918:	7f 93       	push	r23
    191a:	6f 93       	push	r22
    191c:	8d e7       	ldi	r24, 0x7D	; 125
    191e:	90 e0       	ldi	r25, 0x00	; 0
    1920:	9f 93       	push	r25
    1922:	8f 93       	push	r24
    1924:	8e 01       	movw	r16, r28
    1926:	0f 5f       	subi	r16, 0xFF	; 255
    1928:	1f 4f       	sbci	r17, 0xFF	; 255
    192a:	1f 93       	push	r17
    192c:	0f 93       	push	r16
    192e:	0e 94 0b 12 	call	0x2416	; 0x2416 <sprintf>
    1932:	c8 01       	movw	r24, r16
    1934:	0e 94 6f 0c 	call	0x18de	; 0x18de <UART_print>
    1938:	0f b6       	in	r0, 0x3f	; 63
    193a:	f8 94       	cli
    193c:	de bf       	out	0x3e, r29	; 62
    193e:	0f be       	out	0x3f, r0	; 63
    1940:	cd bf       	out	0x3d, r28	; 61
    1942:	64 96       	adiw	r28, 0x14	; 20
    1944:	0f b6       	in	r0, 0x3f	; 63
    1946:	f8 94       	cli
    1948:	de bf       	out	0x3e, r29	; 62
    194a:	0f be       	out	0x3f, r0	; 63
    194c:	cd bf       	out	0x3d, r28	; 61
    194e:	df 91       	pop	r29
    1950:	cf 91       	pop	r28
    1952:	1f 91       	pop	r17
    1954:	0f 91       	pop	r16
    1956:	08 95       	ret

00001958 <UART_printNumln>:
    1958:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <UART_printNum>
    195c:	81 e8       	ldi	r24, 0x81	; 129
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	0e 94 6f 0c 	call	0x18de	; 0x18de <UART_print>
    1964:	08 95       	ret

00001966 <UART_println>:
    1966:	0e 94 6f 0c 	call	0x18de	; 0x18de <UART_print>
    196a:	81 e8       	ldi	r24, 0x81	; 129
    196c:	90 e0       	ldi	r25, 0x00	; 0
    196e:	0e 94 6f 0c 	call	0x18de	; 0x18de <UART_print>
    1972:	08 95       	ret

00001974 <UART_printXY>:

void UART_printXY(int32_t x, int32_t y)
{
    1974:	8f 92       	push	r8
    1976:	9f 92       	push	r9
    1978:	af 92       	push	r10
    197a:	bf 92       	push	r11
    197c:	cf 92       	push	r12
    197e:	df 92       	push	r13
    1980:	ef 92       	push	r14
    1982:	ff 92       	push	r15
    1984:	4b 01       	movw	r8, r22
    1986:	5c 01       	movw	r10, r24
    1988:	69 01       	movw	r12, r18
    198a:	7a 01       	movw	r14, r20
	UART_print("X = ");
    198c:	80 e9       	ldi	r24, 0x90	; 144
    198e:	90 e0       	ldi	r25, 0x00	; 0
    1990:	0e 94 6f 0c 	call	0x18de	; 0x18de <UART_print>
	UART_printNum(x);
    1994:	c5 01       	movw	r24, r10
    1996:	b4 01       	movw	r22, r8
    1998:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <UART_printNum>
	UART_print("\tY = ");
    199c:	85 e9       	ldi	r24, 0x95	; 149
    199e:	90 e0       	ldi	r25, 0x00	; 0
    19a0:	0e 94 6f 0c 	call	0x18de	; 0x18de <UART_print>
	UART_printNumln(y);
    19a4:	c7 01       	movw	r24, r14
    19a6:	b6 01       	movw	r22, r12
    19a8:	0e 94 ac 0c 	call	0x1958	; 0x1958 <UART_printNumln>
}
    19ac:	ff 90       	pop	r15
    19ae:	ef 90       	pop	r14
    19b0:	df 90       	pop	r13
    19b2:	cf 90       	pop	r12
    19b4:	bf 90       	pop	r11
    19b6:	af 90       	pop	r10
    19b8:	9f 90       	pop	r9
    19ba:	8f 90       	pop	r8
    19bc:	08 95       	ret

000019be <__subsf3>:
    19be:	50 58       	subi	r21, 0x80	; 128

000019c0 <__addsf3>:
    19c0:	bb 27       	eor	r27, r27
    19c2:	aa 27       	eor	r26, r26
    19c4:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <__addsf3x>
    19c8:	0c 94 3a 0f 	jmp	0x1e74	; 0x1e74 <__fp_round>
    19cc:	0e 94 01 0f 	call	0x1e02	; 0x1e02 <__fp_pscA>
    19d0:	38 f0       	brcs	.+14     	; 0x19e0 <__addsf3+0x20>
    19d2:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <__fp_pscB>
    19d6:	20 f0       	brcs	.+8      	; 0x19e0 <__addsf3+0x20>
    19d8:	39 f4       	brne	.+14     	; 0x19e8 <__addsf3+0x28>
    19da:	9f 3f       	cpi	r25, 0xFF	; 255
    19dc:	19 f4       	brne	.+6      	; 0x19e4 <__addsf3+0x24>
    19de:	26 f4       	brtc	.+8      	; 0x19e8 <__addsf3+0x28>
    19e0:	0c 94 d7 0e 	jmp	0x1dae	; 0x1dae <__fp_nan>
    19e4:	0e f4       	brtc	.+2      	; 0x19e8 <__addsf3+0x28>
    19e6:	e0 95       	com	r30
    19e8:	e7 fb       	bst	r30, 7
    19ea:	0c 94 d1 0e 	jmp	0x1da2	; 0x1da2 <__fp_inf>

000019ee <__addsf3x>:
    19ee:	e9 2f       	mov	r30, r25
    19f0:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__fp_split3>
    19f4:	58 f3       	brcs	.-42     	; 0x19cc <__addsf3+0xc>
    19f6:	ba 17       	cp	r27, r26
    19f8:	62 07       	cpc	r22, r18
    19fa:	73 07       	cpc	r23, r19
    19fc:	84 07       	cpc	r24, r20
    19fe:	95 07       	cpc	r25, r21
    1a00:	20 f0       	brcs	.+8      	; 0x1a0a <__addsf3x+0x1c>
    1a02:	79 f4       	brne	.+30     	; 0x1a22 <__addsf3x+0x34>
    1a04:	a6 f5       	brtc	.+104    	; 0x1a6e <__addsf3x+0x80>
    1a06:	0c 94 81 0f 	jmp	0x1f02	; 0x1f02 <__fp_zero>
    1a0a:	0e f4       	brtc	.+2      	; 0x1a0e <__addsf3x+0x20>
    1a0c:	e0 95       	com	r30
    1a0e:	0b 2e       	mov	r0, r27
    1a10:	ba 2f       	mov	r27, r26
    1a12:	a0 2d       	mov	r26, r0
    1a14:	0b 01       	movw	r0, r22
    1a16:	b9 01       	movw	r22, r18
    1a18:	90 01       	movw	r18, r0
    1a1a:	0c 01       	movw	r0, r24
    1a1c:	ca 01       	movw	r24, r20
    1a1e:	a0 01       	movw	r20, r0
    1a20:	11 24       	eor	r1, r1
    1a22:	ff 27       	eor	r31, r31
    1a24:	59 1b       	sub	r21, r25
    1a26:	99 f0       	breq	.+38     	; 0x1a4e <__addsf3x+0x60>
    1a28:	59 3f       	cpi	r21, 0xF9	; 249
    1a2a:	50 f4       	brcc	.+20     	; 0x1a40 <__addsf3x+0x52>
    1a2c:	50 3e       	cpi	r21, 0xE0	; 224
    1a2e:	68 f1       	brcs	.+90     	; 0x1a8a <__addsf3x+0x9c>
    1a30:	1a 16       	cp	r1, r26
    1a32:	f0 40       	sbci	r31, 0x00	; 0
    1a34:	a2 2f       	mov	r26, r18
    1a36:	23 2f       	mov	r18, r19
    1a38:	34 2f       	mov	r19, r20
    1a3a:	44 27       	eor	r20, r20
    1a3c:	58 5f       	subi	r21, 0xF8	; 248
    1a3e:	f3 cf       	rjmp	.-26     	; 0x1a26 <__addsf3x+0x38>
    1a40:	46 95       	lsr	r20
    1a42:	37 95       	ror	r19
    1a44:	27 95       	ror	r18
    1a46:	a7 95       	ror	r26
    1a48:	f0 40       	sbci	r31, 0x00	; 0
    1a4a:	53 95       	inc	r21
    1a4c:	c9 f7       	brne	.-14     	; 0x1a40 <__addsf3x+0x52>
    1a4e:	7e f4       	brtc	.+30     	; 0x1a6e <__addsf3x+0x80>
    1a50:	1f 16       	cp	r1, r31
    1a52:	ba 0b       	sbc	r27, r26
    1a54:	62 0b       	sbc	r22, r18
    1a56:	73 0b       	sbc	r23, r19
    1a58:	84 0b       	sbc	r24, r20
    1a5a:	ba f0       	brmi	.+46     	; 0x1a8a <__addsf3x+0x9c>
    1a5c:	91 50       	subi	r25, 0x01	; 1
    1a5e:	a1 f0       	breq	.+40     	; 0x1a88 <__addsf3x+0x9a>
    1a60:	ff 0f       	add	r31, r31
    1a62:	bb 1f       	adc	r27, r27
    1a64:	66 1f       	adc	r22, r22
    1a66:	77 1f       	adc	r23, r23
    1a68:	88 1f       	adc	r24, r24
    1a6a:	c2 f7       	brpl	.-16     	; 0x1a5c <__addsf3x+0x6e>
    1a6c:	0e c0       	rjmp	.+28     	; 0x1a8a <__addsf3x+0x9c>
    1a6e:	ba 0f       	add	r27, r26
    1a70:	62 1f       	adc	r22, r18
    1a72:	73 1f       	adc	r23, r19
    1a74:	84 1f       	adc	r24, r20
    1a76:	48 f4       	brcc	.+18     	; 0x1a8a <__addsf3x+0x9c>
    1a78:	87 95       	ror	r24
    1a7a:	77 95       	ror	r23
    1a7c:	67 95       	ror	r22
    1a7e:	b7 95       	ror	r27
    1a80:	f7 95       	ror	r31
    1a82:	9e 3f       	cpi	r25, 0xFE	; 254
    1a84:	08 f0       	brcs	.+2      	; 0x1a88 <__addsf3x+0x9a>
    1a86:	b0 cf       	rjmp	.-160    	; 0x19e8 <__addsf3+0x28>
    1a88:	93 95       	inc	r25
    1a8a:	88 0f       	add	r24, r24
    1a8c:	08 f0       	brcs	.+2      	; 0x1a90 <__addsf3x+0xa2>
    1a8e:	99 27       	eor	r25, r25
    1a90:	ee 0f       	add	r30, r30
    1a92:	97 95       	ror	r25
    1a94:	87 95       	ror	r24
    1a96:	08 95       	ret
    1a98:	0e 94 01 0f 	call	0x1e02	; 0x1e02 <__fp_pscA>
    1a9c:	60 f0       	brcs	.+24     	; 0x1ab6 <__addsf3x+0xc8>
    1a9e:	80 e8       	ldi	r24, 0x80	; 128
    1aa0:	91 e0       	ldi	r25, 0x01	; 1
    1aa2:	09 f4       	brne	.+2      	; 0x1aa6 <__addsf3x+0xb8>
    1aa4:	9e ef       	ldi	r25, 0xFE	; 254
    1aa6:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <__fp_pscB>
    1aaa:	28 f0       	brcs	.+10     	; 0x1ab6 <__addsf3x+0xc8>
    1aac:	40 e8       	ldi	r20, 0x80	; 128
    1aae:	51 e0       	ldi	r21, 0x01	; 1
    1ab0:	71 f4       	brne	.+28     	; 0x1ace <atan2+0x10>
    1ab2:	5e ef       	ldi	r21, 0xFE	; 254
    1ab4:	0c c0       	rjmp	.+24     	; 0x1ace <atan2+0x10>
    1ab6:	0c 94 d7 0e 	jmp	0x1dae	; 0x1dae <__fp_nan>
    1aba:	0c 94 81 0f 	jmp	0x1f02	; 0x1f02 <__fp_zero>

00001abe <atan2>:
    1abe:	e9 2f       	mov	r30, r25
    1ac0:	e0 78       	andi	r30, 0x80	; 128
    1ac2:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__fp_split3>
    1ac6:	40 f3       	brcs	.-48     	; 0x1a98 <__addsf3x+0xaa>
    1ac8:	09 2e       	mov	r0, r25
    1aca:	05 2a       	or	r0, r21
    1acc:	b1 f3       	breq	.-20     	; 0x1aba <__addsf3x+0xcc>
    1ace:	26 17       	cp	r18, r22
    1ad0:	37 07       	cpc	r19, r23
    1ad2:	48 07       	cpc	r20, r24
    1ad4:	59 07       	cpc	r21, r25
    1ad6:	38 f0       	brcs	.+14     	; 0x1ae6 <atan2+0x28>
    1ad8:	0e 2e       	mov	r0, r30
    1ada:	07 f8       	bld	r0, 7
    1adc:	e0 25       	eor	r30, r0
    1ade:	69 f0       	breq	.+26     	; 0x1afa <atan2+0x3c>
    1ae0:	e0 25       	eor	r30, r0
    1ae2:	e0 64       	ori	r30, 0x40	; 64
    1ae4:	0a c0       	rjmp	.+20     	; 0x1afa <atan2+0x3c>
    1ae6:	ef 63       	ori	r30, 0x3F	; 63
    1ae8:	07 f8       	bld	r0, 7
    1aea:	00 94       	com	r0
    1aec:	07 fa       	bst	r0, 7
    1aee:	db 01       	movw	r26, r22
    1af0:	b9 01       	movw	r22, r18
    1af2:	9d 01       	movw	r18, r26
    1af4:	dc 01       	movw	r26, r24
    1af6:	ca 01       	movw	r24, r20
    1af8:	ad 01       	movw	r20, r26
    1afa:	ef 93       	push	r30
    1afc:	0e 94 df 0d 	call	0x1bbe	; 0x1bbe <__divsf3_pse>
    1b00:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <__fp_round>
    1b04:	0e 94 8f 0d 	call	0x1b1e	; 0x1b1e <atan>
    1b08:	5f 91       	pop	r21
    1b0a:	55 23       	and	r21, r21
    1b0c:	39 f0       	breq	.+14     	; 0x1b1c <atan2+0x5e>
    1b0e:	2b ed       	ldi	r18, 0xDB	; 219
    1b10:	3f e0       	ldi	r19, 0x0F	; 15
    1b12:	49 e4       	ldi	r20, 0x49	; 73
    1b14:	50 fd       	sbrc	r21, 0
    1b16:	49 ec       	ldi	r20, 0xC9	; 201
    1b18:	0c 94 e0 0c 	jmp	0x19c0	; 0x19c0 <__addsf3>
    1b1c:	08 95       	ret

00001b1e <atan>:
    1b1e:	df 93       	push	r29
    1b20:	dd 27       	eor	r29, r29
    1b22:	b9 2f       	mov	r27, r25
    1b24:	bf 77       	andi	r27, 0x7F	; 127
    1b26:	40 e8       	ldi	r20, 0x80	; 128
    1b28:	5f e3       	ldi	r21, 0x3F	; 63
    1b2a:	16 16       	cp	r1, r22
    1b2c:	17 06       	cpc	r1, r23
    1b2e:	48 07       	cpc	r20, r24
    1b30:	5b 07       	cpc	r21, r27
    1b32:	18 f4       	brcc	.+6      	; 0x1b3a <atan+0x1c>
    1b34:	d9 2f       	mov	r29, r25
    1b36:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <inverse>
    1b3a:	9f 93       	push	r25
    1b3c:	8f 93       	push	r24
    1b3e:	7f 93       	push	r23
    1b40:	6f 93       	push	r22
    1b42:	0e 94 50 10 	call	0x20a0	; 0x20a0 <square>
    1b46:	e4 e5       	ldi	r30, 0x54	; 84
    1b48:	f0 e0       	ldi	r31, 0x00	; 0
    1b4a:	0e 94 da 0e 	call	0x1db4	; 0x1db4 <__fp_powser>
    1b4e:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <__fp_round>
    1b52:	2f 91       	pop	r18
    1b54:	3f 91       	pop	r19
    1b56:	4f 91       	pop	r20
    1b58:	5f 91       	pop	r21
    1b5a:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <__mulsf3x>
    1b5e:	dd 23       	and	r29, r29
    1b60:	51 f0       	breq	.+20     	; 0x1b76 <atan+0x58>
    1b62:	90 58       	subi	r25, 0x80	; 128
    1b64:	a2 ea       	ldi	r26, 0xA2	; 162
    1b66:	2a ed       	ldi	r18, 0xDA	; 218
    1b68:	3f e0       	ldi	r19, 0x0F	; 15
    1b6a:	49 ec       	ldi	r20, 0xC9	; 201
    1b6c:	5f e3       	ldi	r21, 0x3F	; 63
    1b6e:	d0 78       	andi	r29, 0x80	; 128
    1b70:	5d 27       	eor	r21, r29
    1b72:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <__addsf3x>
    1b76:	df 91       	pop	r29
    1b78:	0c 94 3a 0f 	jmp	0x1e74	; 0x1e74 <__fp_round>

00001b7c <__cmpsf2>:
    1b7c:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <__fp_cmp>
    1b80:	08 f4       	brcc	.+2      	; 0x1b84 <__cmpsf2+0x8>
    1b82:	81 e0       	ldi	r24, 0x01	; 1
    1b84:	08 95       	ret

00001b86 <cos>:
    1b86:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <__fp_rempio2>
    1b8a:	e3 95       	inc	r30
    1b8c:	0c 94 4b 0f 	jmp	0x1e96	; 0x1e96 <__fp_sinus>

00001b90 <__divsf3>:
    1b90:	0e 94 dc 0d 	call	0x1bb8	; 0x1bb8 <__divsf3x>
    1b94:	0c 94 3a 0f 	jmp	0x1e74	; 0x1e74 <__fp_round>
    1b98:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <__fp_pscB>
    1b9c:	58 f0       	brcs	.+22     	; 0x1bb4 <__divsf3+0x24>
    1b9e:	0e 94 01 0f 	call	0x1e02	; 0x1e02 <__fp_pscA>
    1ba2:	40 f0       	brcs	.+16     	; 0x1bb4 <__divsf3+0x24>
    1ba4:	29 f4       	brne	.+10     	; 0x1bb0 <__divsf3+0x20>
    1ba6:	5f 3f       	cpi	r21, 0xFF	; 255
    1ba8:	29 f0       	breq	.+10     	; 0x1bb4 <__divsf3+0x24>
    1baa:	0c 94 d1 0e 	jmp	0x1da2	; 0x1da2 <__fp_inf>
    1bae:	51 11       	cpse	r21, r1
    1bb0:	0c 94 82 0f 	jmp	0x1f04	; 0x1f04 <__fp_szero>
    1bb4:	0c 94 d7 0e 	jmp	0x1dae	; 0x1dae <__fp_nan>

00001bb8 <__divsf3x>:
    1bb8:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__fp_split3>
    1bbc:	68 f3       	brcs	.-38     	; 0x1b98 <__divsf3+0x8>

00001bbe <__divsf3_pse>:
    1bbe:	99 23       	and	r25, r25
    1bc0:	b1 f3       	breq	.-20     	; 0x1bae <__divsf3+0x1e>
    1bc2:	55 23       	and	r21, r21
    1bc4:	91 f3       	breq	.-28     	; 0x1baa <__divsf3+0x1a>
    1bc6:	95 1b       	sub	r25, r21
    1bc8:	55 0b       	sbc	r21, r21
    1bca:	bb 27       	eor	r27, r27
    1bcc:	aa 27       	eor	r26, r26
    1bce:	62 17       	cp	r22, r18
    1bd0:	73 07       	cpc	r23, r19
    1bd2:	84 07       	cpc	r24, r20
    1bd4:	38 f0       	brcs	.+14     	; 0x1be4 <__divsf3_pse+0x26>
    1bd6:	9f 5f       	subi	r25, 0xFF	; 255
    1bd8:	5f 4f       	sbci	r21, 0xFF	; 255
    1bda:	22 0f       	add	r18, r18
    1bdc:	33 1f       	adc	r19, r19
    1bde:	44 1f       	adc	r20, r20
    1be0:	aa 1f       	adc	r26, r26
    1be2:	a9 f3       	breq	.-22     	; 0x1bce <__divsf3_pse+0x10>
    1be4:	35 d0       	rcall	.+106    	; 0x1c50 <__divsf3_pse+0x92>
    1be6:	0e 2e       	mov	r0, r30
    1be8:	3a f0       	brmi	.+14     	; 0x1bf8 <__divsf3_pse+0x3a>
    1bea:	e0 e8       	ldi	r30, 0x80	; 128
    1bec:	32 d0       	rcall	.+100    	; 0x1c52 <__divsf3_pse+0x94>
    1bee:	91 50       	subi	r25, 0x01	; 1
    1bf0:	50 40       	sbci	r21, 0x00	; 0
    1bf2:	e6 95       	lsr	r30
    1bf4:	00 1c       	adc	r0, r0
    1bf6:	ca f7       	brpl	.-14     	; 0x1bea <__divsf3_pse+0x2c>
    1bf8:	2b d0       	rcall	.+86     	; 0x1c50 <__divsf3_pse+0x92>
    1bfa:	fe 2f       	mov	r31, r30
    1bfc:	29 d0       	rcall	.+82     	; 0x1c50 <__divsf3_pse+0x92>
    1bfe:	66 0f       	add	r22, r22
    1c00:	77 1f       	adc	r23, r23
    1c02:	88 1f       	adc	r24, r24
    1c04:	bb 1f       	adc	r27, r27
    1c06:	26 17       	cp	r18, r22
    1c08:	37 07       	cpc	r19, r23
    1c0a:	48 07       	cpc	r20, r24
    1c0c:	ab 07       	cpc	r26, r27
    1c0e:	b0 e8       	ldi	r27, 0x80	; 128
    1c10:	09 f0       	breq	.+2      	; 0x1c14 <__divsf3_pse+0x56>
    1c12:	bb 0b       	sbc	r27, r27
    1c14:	80 2d       	mov	r24, r0
    1c16:	bf 01       	movw	r22, r30
    1c18:	ff 27       	eor	r31, r31
    1c1a:	93 58       	subi	r25, 0x83	; 131
    1c1c:	5f 4f       	sbci	r21, 0xFF	; 255
    1c1e:	3a f0       	brmi	.+14     	; 0x1c2e <__divsf3_pse+0x70>
    1c20:	9e 3f       	cpi	r25, 0xFE	; 254
    1c22:	51 05       	cpc	r21, r1
    1c24:	78 f0       	brcs	.+30     	; 0x1c44 <__divsf3_pse+0x86>
    1c26:	0c 94 d1 0e 	jmp	0x1da2	; 0x1da2 <__fp_inf>
    1c2a:	0c 94 82 0f 	jmp	0x1f04	; 0x1f04 <__fp_szero>
    1c2e:	5f 3f       	cpi	r21, 0xFF	; 255
    1c30:	e4 f3       	brlt	.-8      	; 0x1c2a <__divsf3_pse+0x6c>
    1c32:	98 3e       	cpi	r25, 0xE8	; 232
    1c34:	d4 f3       	brlt	.-12     	; 0x1c2a <__divsf3_pse+0x6c>
    1c36:	86 95       	lsr	r24
    1c38:	77 95       	ror	r23
    1c3a:	67 95       	ror	r22
    1c3c:	b7 95       	ror	r27
    1c3e:	f7 95       	ror	r31
    1c40:	9f 5f       	subi	r25, 0xFF	; 255
    1c42:	c9 f7       	brne	.-14     	; 0x1c36 <__divsf3_pse+0x78>
    1c44:	88 0f       	add	r24, r24
    1c46:	91 1d       	adc	r25, r1
    1c48:	96 95       	lsr	r25
    1c4a:	87 95       	ror	r24
    1c4c:	97 f9       	bld	r25, 7
    1c4e:	08 95       	ret
    1c50:	e1 e0       	ldi	r30, 0x01	; 1
    1c52:	66 0f       	add	r22, r22
    1c54:	77 1f       	adc	r23, r23
    1c56:	88 1f       	adc	r24, r24
    1c58:	bb 1f       	adc	r27, r27
    1c5a:	62 17       	cp	r22, r18
    1c5c:	73 07       	cpc	r23, r19
    1c5e:	84 07       	cpc	r24, r20
    1c60:	ba 07       	cpc	r27, r26
    1c62:	20 f0       	brcs	.+8      	; 0x1c6c <__divsf3_pse+0xae>
    1c64:	62 1b       	sub	r22, r18
    1c66:	73 0b       	sbc	r23, r19
    1c68:	84 0b       	sbc	r24, r20
    1c6a:	ba 0b       	sbc	r27, r26
    1c6c:	ee 1f       	adc	r30, r30
    1c6e:	88 f7       	brcc	.-30     	; 0x1c52 <__divsf3_pse+0x94>
    1c70:	e0 95       	com	r30
    1c72:	08 95       	ret

00001c74 <__fixsfsi>:
    1c74:	0e 94 41 0e 	call	0x1c82	; 0x1c82 <__fixunssfsi>
    1c78:	68 94       	set
    1c7a:	b1 11       	cpse	r27, r1
    1c7c:	0c 94 82 0f 	jmp	0x1f04	; 0x1f04 <__fp_szero>
    1c80:	08 95       	ret

00001c82 <__fixunssfsi>:
    1c82:	0e 94 67 0f 	call	0x1ece	; 0x1ece <__fp_splitA>
    1c86:	88 f0       	brcs	.+34     	; 0x1caa <__fixunssfsi+0x28>
    1c88:	9f 57       	subi	r25, 0x7F	; 127
    1c8a:	98 f0       	brcs	.+38     	; 0x1cb2 <__fixunssfsi+0x30>
    1c8c:	b9 2f       	mov	r27, r25
    1c8e:	99 27       	eor	r25, r25
    1c90:	b7 51       	subi	r27, 0x17	; 23
    1c92:	b0 f0       	brcs	.+44     	; 0x1cc0 <__fixunssfsi+0x3e>
    1c94:	e1 f0       	breq	.+56     	; 0x1cce <__fixunssfsi+0x4c>
    1c96:	66 0f       	add	r22, r22
    1c98:	77 1f       	adc	r23, r23
    1c9a:	88 1f       	adc	r24, r24
    1c9c:	99 1f       	adc	r25, r25
    1c9e:	1a f0       	brmi	.+6      	; 0x1ca6 <__fixunssfsi+0x24>
    1ca0:	ba 95       	dec	r27
    1ca2:	c9 f7       	brne	.-14     	; 0x1c96 <__fixunssfsi+0x14>
    1ca4:	14 c0       	rjmp	.+40     	; 0x1cce <__fixunssfsi+0x4c>
    1ca6:	b1 30       	cpi	r27, 0x01	; 1
    1ca8:	91 f0       	breq	.+36     	; 0x1cce <__fixunssfsi+0x4c>
    1caa:	0e 94 81 0f 	call	0x1f02	; 0x1f02 <__fp_zero>
    1cae:	b1 e0       	ldi	r27, 0x01	; 1
    1cb0:	08 95       	ret
    1cb2:	0c 94 81 0f 	jmp	0x1f02	; 0x1f02 <__fp_zero>
    1cb6:	67 2f       	mov	r22, r23
    1cb8:	78 2f       	mov	r23, r24
    1cba:	88 27       	eor	r24, r24
    1cbc:	b8 5f       	subi	r27, 0xF8	; 248
    1cbe:	39 f0       	breq	.+14     	; 0x1cce <__fixunssfsi+0x4c>
    1cc0:	b9 3f       	cpi	r27, 0xF9	; 249
    1cc2:	cc f3       	brlt	.-14     	; 0x1cb6 <__fixunssfsi+0x34>
    1cc4:	86 95       	lsr	r24
    1cc6:	77 95       	ror	r23
    1cc8:	67 95       	ror	r22
    1cca:	b3 95       	inc	r27
    1ccc:	d9 f7       	brne	.-10     	; 0x1cc4 <__fixunssfsi+0x42>
    1cce:	3e f4       	brtc	.+14     	; 0x1cde <__fixunssfsi+0x5c>
    1cd0:	90 95       	com	r25
    1cd2:	80 95       	com	r24
    1cd4:	70 95       	com	r23
    1cd6:	61 95       	neg	r22
    1cd8:	7f 4f       	sbci	r23, 0xFF	; 255
    1cda:	8f 4f       	sbci	r24, 0xFF	; 255
    1cdc:	9f 4f       	sbci	r25, 0xFF	; 255
    1cde:	08 95       	ret

00001ce0 <__floatunsisf>:
    1ce0:	e8 94       	clt
    1ce2:	09 c0       	rjmp	.+18     	; 0x1cf6 <__floatsisf+0x12>

00001ce4 <__floatsisf>:
    1ce4:	97 fb       	bst	r25, 7
    1ce6:	3e f4       	brtc	.+14     	; 0x1cf6 <__floatsisf+0x12>
    1ce8:	90 95       	com	r25
    1cea:	80 95       	com	r24
    1cec:	70 95       	com	r23
    1cee:	61 95       	neg	r22
    1cf0:	7f 4f       	sbci	r23, 0xFF	; 255
    1cf2:	8f 4f       	sbci	r24, 0xFF	; 255
    1cf4:	9f 4f       	sbci	r25, 0xFF	; 255
    1cf6:	99 23       	and	r25, r25
    1cf8:	a9 f0       	breq	.+42     	; 0x1d24 <__floatsisf+0x40>
    1cfa:	f9 2f       	mov	r31, r25
    1cfc:	96 e9       	ldi	r25, 0x96	; 150
    1cfe:	bb 27       	eor	r27, r27
    1d00:	93 95       	inc	r25
    1d02:	f6 95       	lsr	r31
    1d04:	87 95       	ror	r24
    1d06:	77 95       	ror	r23
    1d08:	67 95       	ror	r22
    1d0a:	b7 95       	ror	r27
    1d0c:	f1 11       	cpse	r31, r1
    1d0e:	f8 cf       	rjmp	.-16     	; 0x1d00 <__floatsisf+0x1c>
    1d10:	fa f4       	brpl	.+62     	; 0x1d50 <__floatsisf+0x6c>
    1d12:	bb 0f       	add	r27, r27
    1d14:	11 f4       	brne	.+4      	; 0x1d1a <__floatsisf+0x36>
    1d16:	60 ff       	sbrs	r22, 0
    1d18:	1b c0       	rjmp	.+54     	; 0x1d50 <__floatsisf+0x6c>
    1d1a:	6f 5f       	subi	r22, 0xFF	; 255
    1d1c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d1e:	8f 4f       	sbci	r24, 0xFF	; 255
    1d20:	9f 4f       	sbci	r25, 0xFF	; 255
    1d22:	16 c0       	rjmp	.+44     	; 0x1d50 <__floatsisf+0x6c>
    1d24:	88 23       	and	r24, r24
    1d26:	11 f0       	breq	.+4      	; 0x1d2c <__floatsisf+0x48>
    1d28:	96 e9       	ldi	r25, 0x96	; 150
    1d2a:	11 c0       	rjmp	.+34     	; 0x1d4e <__floatsisf+0x6a>
    1d2c:	77 23       	and	r23, r23
    1d2e:	21 f0       	breq	.+8      	; 0x1d38 <__floatsisf+0x54>
    1d30:	9e e8       	ldi	r25, 0x8E	; 142
    1d32:	87 2f       	mov	r24, r23
    1d34:	76 2f       	mov	r23, r22
    1d36:	05 c0       	rjmp	.+10     	; 0x1d42 <__floatsisf+0x5e>
    1d38:	66 23       	and	r22, r22
    1d3a:	71 f0       	breq	.+28     	; 0x1d58 <__floatsisf+0x74>
    1d3c:	96 e8       	ldi	r25, 0x86	; 134
    1d3e:	86 2f       	mov	r24, r22
    1d40:	70 e0       	ldi	r23, 0x00	; 0
    1d42:	60 e0       	ldi	r22, 0x00	; 0
    1d44:	2a f0       	brmi	.+10     	; 0x1d50 <__floatsisf+0x6c>
    1d46:	9a 95       	dec	r25
    1d48:	66 0f       	add	r22, r22
    1d4a:	77 1f       	adc	r23, r23
    1d4c:	88 1f       	adc	r24, r24
    1d4e:	da f7       	brpl	.-10     	; 0x1d46 <__floatsisf+0x62>
    1d50:	88 0f       	add	r24, r24
    1d52:	96 95       	lsr	r25
    1d54:	87 95       	ror	r24
    1d56:	97 f9       	bld	r25, 7
    1d58:	08 95       	ret

00001d5a <__fp_cmp>:
    1d5a:	99 0f       	add	r25, r25
    1d5c:	00 08       	sbc	r0, r0
    1d5e:	55 0f       	add	r21, r21
    1d60:	aa 0b       	sbc	r26, r26
    1d62:	e0 e8       	ldi	r30, 0x80	; 128
    1d64:	fe ef       	ldi	r31, 0xFE	; 254
    1d66:	16 16       	cp	r1, r22
    1d68:	17 06       	cpc	r1, r23
    1d6a:	e8 07       	cpc	r30, r24
    1d6c:	f9 07       	cpc	r31, r25
    1d6e:	c0 f0       	brcs	.+48     	; 0x1da0 <__fp_cmp+0x46>
    1d70:	12 16       	cp	r1, r18
    1d72:	13 06       	cpc	r1, r19
    1d74:	e4 07       	cpc	r30, r20
    1d76:	f5 07       	cpc	r31, r21
    1d78:	98 f0       	brcs	.+38     	; 0x1da0 <__fp_cmp+0x46>
    1d7a:	62 1b       	sub	r22, r18
    1d7c:	73 0b       	sbc	r23, r19
    1d7e:	84 0b       	sbc	r24, r20
    1d80:	95 0b       	sbc	r25, r21
    1d82:	39 f4       	brne	.+14     	; 0x1d92 <__fp_cmp+0x38>
    1d84:	0a 26       	eor	r0, r26
    1d86:	61 f0       	breq	.+24     	; 0x1da0 <__fp_cmp+0x46>
    1d88:	23 2b       	or	r18, r19
    1d8a:	24 2b       	or	r18, r20
    1d8c:	25 2b       	or	r18, r21
    1d8e:	21 f4       	brne	.+8      	; 0x1d98 <__fp_cmp+0x3e>
    1d90:	08 95       	ret
    1d92:	0a 26       	eor	r0, r26
    1d94:	09 f4       	brne	.+2      	; 0x1d98 <__fp_cmp+0x3e>
    1d96:	a1 40       	sbci	r26, 0x01	; 1
    1d98:	a6 95       	lsr	r26
    1d9a:	8f ef       	ldi	r24, 0xFF	; 255
    1d9c:	81 1d       	adc	r24, r1
    1d9e:	81 1d       	adc	r24, r1
    1da0:	08 95       	ret

00001da2 <__fp_inf>:
    1da2:	97 f9       	bld	r25, 7
    1da4:	9f 67       	ori	r25, 0x7F	; 127
    1da6:	80 e8       	ldi	r24, 0x80	; 128
    1da8:	70 e0       	ldi	r23, 0x00	; 0
    1daa:	60 e0       	ldi	r22, 0x00	; 0
    1dac:	08 95       	ret

00001dae <__fp_nan>:
    1dae:	9f ef       	ldi	r25, 0xFF	; 255
    1db0:	80 ec       	ldi	r24, 0xC0	; 192
    1db2:	08 95       	ret

00001db4 <__fp_powser>:
    1db4:	df 93       	push	r29
    1db6:	cf 93       	push	r28
    1db8:	1f 93       	push	r17
    1dba:	0f 93       	push	r16
    1dbc:	ff 92       	push	r15
    1dbe:	ef 92       	push	r14
    1dc0:	df 92       	push	r13
    1dc2:	7b 01       	movw	r14, r22
    1dc4:	8c 01       	movw	r16, r24
    1dc6:	68 94       	set
    1dc8:	06 c0       	rjmp	.+12     	; 0x1dd6 <__fp_powser+0x22>
    1dca:	da 2e       	mov	r13, r26
    1dcc:	ef 01       	movw	r28, r30
    1dce:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <__mulsf3x>
    1dd2:	fe 01       	movw	r30, r28
    1dd4:	e8 94       	clt
    1dd6:	a5 91       	lpm	r26, Z+
    1dd8:	25 91       	lpm	r18, Z+
    1dda:	35 91       	lpm	r19, Z+
    1ddc:	45 91       	lpm	r20, Z+
    1dde:	55 91       	lpm	r21, Z+
    1de0:	a6 f3       	brts	.-24     	; 0x1dca <__fp_powser+0x16>
    1de2:	ef 01       	movw	r28, r30
    1de4:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <__addsf3x>
    1de8:	fe 01       	movw	r30, r28
    1dea:	97 01       	movw	r18, r14
    1dec:	a8 01       	movw	r20, r16
    1dee:	da 94       	dec	r13
    1df0:	69 f7       	brne	.-38     	; 0x1dcc <__fp_powser+0x18>
    1df2:	df 90       	pop	r13
    1df4:	ef 90       	pop	r14
    1df6:	ff 90       	pop	r15
    1df8:	0f 91       	pop	r16
    1dfa:	1f 91       	pop	r17
    1dfc:	cf 91       	pop	r28
    1dfe:	df 91       	pop	r29
    1e00:	08 95       	ret

00001e02 <__fp_pscA>:
    1e02:	00 24       	eor	r0, r0
    1e04:	0a 94       	dec	r0
    1e06:	16 16       	cp	r1, r22
    1e08:	17 06       	cpc	r1, r23
    1e0a:	18 06       	cpc	r1, r24
    1e0c:	09 06       	cpc	r0, r25
    1e0e:	08 95       	ret

00001e10 <__fp_pscB>:
    1e10:	00 24       	eor	r0, r0
    1e12:	0a 94       	dec	r0
    1e14:	12 16       	cp	r1, r18
    1e16:	13 06       	cpc	r1, r19
    1e18:	14 06       	cpc	r1, r20
    1e1a:	05 06       	cpc	r0, r21
    1e1c:	08 95       	ret
    1e1e:	0c 94 d7 0e 	jmp	0x1dae	; 0x1dae <__fp_nan>

00001e22 <__fp_rempio2>:
    1e22:	0e 94 67 0f 	call	0x1ece	; 0x1ece <__fp_splitA>
    1e26:	d8 f3       	brcs	.-10     	; 0x1e1e <__fp_pscB+0xe>
    1e28:	e8 94       	clt
    1e2a:	e0 e0       	ldi	r30, 0x00	; 0
    1e2c:	bb 27       	eor	r27, r27
    1e2e:	9f 57       	subi	r25, 0x7F	; 127
    1e30:	f0 f0       	brcs	.+60     	; 0x1e6e <__fp_rempio2+0x4c>
    1e32:	2a ed       	ldi	r18, 0xDA	; 218
    1e34:	3f e0       	ldi	r19, 0x0F	; 15
    1e36:	49 ec       	ldi	r20, 0xC9	; 201
    1e38:	06 c0       	rjmp	.+12     	; 0x1e46 <__fp_rempio2+0x24>
    1e3a:	ee 0f       	add	r30, r30
    1e3c:	bb 0f       	add	r27, r27
    1e3e:	66 1f       	adc	r22, r22
    1e40:	77 1f       	adc	r23, r23
    1e42:	88 1f       	adc	r24, r24
    1e44:	28 f0       	brcs	.+10     	; 0x1e50 <__fp_rempio2+0x2e>
    1e46:	b2 3a       	cpi	r27, 0xA2	; 162
    1e48:	62 07       	cpc	r22, r18
    1e4a:	73 07       	cpc	r23, r19
    1e4c:	84 07       	cpc	r24, r20
    1e4e:	28 f0       	brcs	.+10     	; 0x1e5a <__fp_rempio2+0x38>
    1e50:	b2 5a       	subi	r27, 0xA2	; 162
    1e52:	62 0b       	sbc	r22, r18
    1e54:	73 0b       	sbc	r23, r19
    1e56:	84 0b       	sbc	r24, r20
    1e58:	e3 95       	inc	r30
    1e5a:	9a 95       	dec	r25
    1e5c:	72 f7       	brpl	.-36     	; 0x1e3a <__fp_rempio2+0x18>
    1e5e:	80 38       	cpi	r24, 0x80	; 128
    1e60:	30 f4       	brcc	.+12     	; 0x1e6e <__fp_rempio2+0x4c>
    1e62:	9a 95       	dec	r25
    1e64:	bb 0f       	add	r27, r27
    1e66:	66 1f       	adc	r22, r22
    1e68:	77 1f       	adc	r23, r23
    1e6a:	88 1f       	adc	r24, r24
    1e6c:	d2 f7       	brpl	.-12     	; 0x1e62 <__fp_rempio2+0x40>
    1e6e:	90 48       	sbci	r25, 0x80	; 128
    1e70:	0c 94 56 10 	jmp	0x20ac	; 0x20ac <__fp_mpack_finite>

00001e74 <__fp_round>:
    1e74:	09 2e       	mov	r0, r25
    1e76:	03 94       	inc	r0
    1e78:	00 0c       	add	r0, r0
    1e7a:	11 f4       	brne	.+4      	; 0x1e80 <__fp_round+0xc>
    1e7c:	88 23       	and	r24, r24
    1e7e:	52 f0       	brmi	.+20     	; 0x1e94 <__fp_round+0x20>
    1e80:	bb 0f       	add	r27, r27
    1e82:	40 f4       	brcc	.+16     	; 0x1e94 <__fp_round+0x20>
    1e84:	bf 2b       	or	r27, r31
    1e86:	11 f4       	brne	.+4      	; 0x1e8c <__fp_round+0x18>
    1e88:	60 ff       	sbrs	r22, 0
    1e8a:	04 c0       	rjmp	.+8      	; 0x1e94 <__fp_round+0x20>
    1e8c:	6f 5f       	subi	r22, 0xFF	; 255
    1e8e:	7f 4f       	sbci	r23, 0xFF	; 255
    1e90:	8f 4f       	sbci	r24, 0xFF	; 255
    1e92:	9f 4f       	sbci	r25, 0xFF	; 255
    1e94:	08 95       	ret

00001e96 <__fp_sinus>:
    1e96:	ef 93       	push	r30
    1e98:	e0 ff       	sbrs	r30, 0
    1e9a:	07 c0       	rjmp	.+14     	; 0x1eaa <__fp_sinus+0x14>
    1e9c:	a2 ea       	ldi	r26, 0xA2	; 162
    1e9e:	2a ed       	ldi	r18, 0xDA	; 218
    1ea0:	3f e0       	ldi	r19, 0x0F	; 15
    1ea2:	49 ec       	ldi	r20, 0xC9	; 201
    1ea4:	5f eb       	ldi	r21, 0xBF	; 191
    1ea6:	0e 94 f7 0c 	call	0x19ee	; 0x19ee <__addsf3x>
    1eaa:	0e 94 3a 0f 	call	0x1e74	; 0x1e74 <__fp_round>
    1eae:	0f 90       	pop	r0
    1eb0:	03 94       	inc	r0
    1eb2:	01 fc       	sbrc	r0, 1
    1eb4:	90 58       	subi	r25, 0x80	; 128
    1eb6:	e1 e8       	ldi	r30, 0x81	; 129
    1eb8:	f0 e0       	ldi	r31, 0x00	; 0
    1eba:	0c 94 69 10 	jmp	0x20d2	; 0x20d2 <__fp_powsodd>

00001ebe <__fp_split3>:
    1ebe:	57 fd       	sbrc	r21, 7
    1ec0:	90 58       	subi	r25, 0x80	; 128
    1ec2:	44 0f       	add	r20, r20
    1ec4:	55 1f       	adc	r21, r21
    1ec6:	59 f0       	breq	.+22     	; 0x1ede <__fp_splitA+0x10>
    1ec8:	5f 3f       	cpi	r21, 0xFF	; 255
    1eca:	71 f0       	breq	.+28     	; 0x1ee8 <__fp_splitA+0x1a>
    1ecc:	47 95       	ror	r20

00001ece <__fp_splitA>:
    1ece:	88 0f       	add	r24, r24
    1ed0:	97 fb       	bst	r25, 7
    1ed2:	99 1f       	adc	r25, r25
    1ed4:	61 f0       	breq	.+24     	; 0x1eee <__fp_splitA+0x20>
    1ed6:	9f 3f       	cpi	r25, 0xFF	; 255
    1ed8:	79 f0       	breq	.+30     	; 0x1ef8 <__fp_splitA+0x2a>
    1eda:	87 95       	ror	r24
    1edc:	08 95       	ret
    1ede:	12 16       	cp	r1, r18
    1ee0:	13 06       	cpc	r1, r19
    1ee2:	14 06       	cpc	r1, r20
    1ee4:	55 1f       	adc	r21, r21
    1ee6:	f2 cf       	rjmp	.-28     	; 0x1ecc <__fp_split3+0xe>
    1ee8:	46 95       	lsr	r20
    1eea:	f1 df       	rcall	.-30     	; 0x1ece <__fp_splitA>
    1eec:	08 c0       	rjmp	.+16     	; 0x1efe <__fp_splitA+0x30>
    1eee:	16 16       	cp	r1, r22
    1ef0:	17 06       	cpc	r1, r23
    1ef2:	18 06       	cpc	r1, r24
    1ef4:	99 1f       	adc	r25, r25
    1ef6:	f1 cf       	rjmp	.-30     	; 0x1eda <__fp_splitA+0xc>
    1ef8:	86 95       	lsr	r24
    1efa:	71 05       	cpc	r23, r1
    1efc:	61 05       	cpc	r22, r1
    1efe:	08 94       	sec
    1f00:	08 95       	ret

00001f02 <__fp_zero>:
    1f02:	e8 94       	clt

00001f04 <__fp_szero>:
    1f04:	bb 27       	eor	r27, r27
    1f06:	66 27       	eor	r22, r22
    1f08:	77 27       	eor	r23, r23
    1f0a:	cb 01       	movw	r24, r22
    1f0c:	97 f9       	bld	r25, 7
    1f0e:	08 95       	ret

00001f10 <__gesf2>:
    1f10:	0e 94 ad 0e 	call	0x1d5a	; 0x1d5a <__fp_cmp>
    1f14:	08 f4       	brcc	.+2      	; 0x1f18 <__gesf2+0x8>
    1f16:	8f ef       	ldi	r24, 0xFF	; 255
    1f18:	08 95       	ret

00001f1a <inverse>:
    1f1a:	9b 01       	movw	r18, r22
    1f1c:	ac 01       	movw	r20, r24
    1f1e:	60 e0       	ldi	r22, 0x00	; 0
    1f20:	70 e0       	ldi	r23, 0x00	; 0
    1f22:	80 e8       	ldi	r24, 0x80	; 128
    1f24:	9f e3       	ldi	r25, 0x3F	; 63
    1f26:	0c 94 c8 0d 	jmp	0x1b90	; 0x1b90 <__divsf3>

00001f2a <__mulsf3>:
    1f2a:	0e 94 a8 0f 	call	0x1f50	; 0x1f50 <__mulsf3x>
    1f2e:	0c 94 3a 0f 	jmp	0x1e74	; 0x1e74 <__fp_round>
    1f32:	0e 94 01 0f 	call	0x1e02	; 0x1e02 <__fp_pscA>
    1f36:	38 f0       	brcs	.+14     	; 0x1f46 <__mulsf3+0x1c>
    1f38:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <__fp_pscB>
    1f3c:	20 f0       	brcs	.+8      	; 0x1f46 <__mulsf3+0x1c>
    1f3e:	95 23       	and	r25, r21
    1f40:	11 f0       	breq	.+4      	; 0x1f46 <__mulsf3+0x1c>
    1f42:	0c 94 d1 0e 	jmp	0x1da2	; 0x1da2 <__fp_inf>
    1f46:	0c 94 d7 0e 	jmp	0x1dae	; 0x1dae <__fp_nan>
    1f4a:	11 24       	eor	r1, r1
    1f4c:	0c 94 82 0f 	jmp	0x1f04	; 0x1f04 <__fp_szero>

00001f50 <__mulsf3x>:
    1f50:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__fp_split3>
    1f54:	70 f3       	brcs	.-36     	; 0x1f32 <__mulsf3+0x8>

00001f56 <__mulsf3_pse>:
    1f56:	95 9f       	mul	r25, r21
    1f58:	c1 f3       	breq	.-16     	; 0x1f4a <__mulsf3+0x20>
    1f5a:	95 0f       	add	r25, r21
    1f5c:	50 e0       	ldi	r21, 0x00	; 0
    1f5e:	55 1f       	adc	r21, r21
    1f60:	62 9f       	mul	r22, r18
    1f62:	f0 01       	movw	r30, r0
    1f64:	72 9f       	mul	r23, r18
    1f66:	bb 27       	eor	r27, r27
    1f68:	f0 0d       	add	r31, r0
    1f6a:	b1 1d       	adc	r27, r1
    1f6c:	63 9f       	mul	r22, r19
    1f6e:	aa 27       	eor	r26, r26
    1f70:	f0 0d       	add	r31, r0
    1f72:	b1 1d       	adc	r27, r1
    1f74:	aa 1f       	adc	r26, r26
    1f76:	64 9f       	mul	r22, r20
    1f78:	66 27       	eor	r22, r22
    1f7a:	b0 0d       	add	r27, r0
    1f7c:	a1 1d       	adc	r26, r1
    1f7e:	66 1f       	adc	r22, r22
    1f80:	82 9f       	mul	r24, r18
    1f82:	22 27       	eor	r18, r18
    1f84:	b0 0d       	add	r27, r0
    1f86:	a1 1d       	adc	r26, r1
    1f88:	62 1f       	adc	r22, r18
    1f8a:	73 9f       	mul	r23, r19
    1f8c:	b0 0d       	add	r27, r0
    1f8e:	a1 1d       	adc	r26, r1
    1f90:	62 1f       	adc	r22, r18
    1f92:	83 9f       	mul	r24, r19
    1f94:	a0 0d       	add	r26, r0
    1f96:	61 1d       	adc	r22, r1
    1f98:	22 1f       	adc	r18, r18
    1f9a:	74 9f       	mul	r23, r20
    1f9c:	33 27       	eor	r19, r19
    1f9e:	a0 0d       	add	r26, r0
    1fa0:	61 1d       	adc	r22, r1
    1fa2:	23 1f       	adc	r18, r19
    1fa4:	84 9f       	mul	r24, r20
    1fa6:	60 0d       	add	r22, r0
    1fa8:	21 1d       	adc	r18, r1
    1faa:	82 2f       	mov	r24, r18
    1fac:	76 2f       	mov	r23, r22
    1fae:	6a 2f       	mov	r22, r26
    1fb0:	11 24       	eor	r1, r1
    1fb2:	9f 57       	subi	r25, 0x7F	; 127
    1fb4:	50 40       	sbci	r21, 0x00	; 0
    1fb6:	9a f0       	brmi	.+38     	; 0x1fde <__mulsf3_pse+0x88>
    1fb8:	f1 f0       	breq	.+60     	; 0x1ff6 <__mulsf3_pse+0xa0>
    1fba:	88 23       	and	r24, r24
    1fbc:	4a f0       	brmi	.+18     	; 0x1fd0 <__mulsf3_pse+0x7a>
    1fbe:	ee 0f       	add	r30, r30
    1fc0:	ff 1f       	adc	r31, r31
    1fc2:	bb 1f       	adc	r27, r27
    1fc4:	66 1f       	adc	r22, r22
    1fc6:	77 1f       	adc	r23, r23
    1fc8:	88 1f       	adc	r24, r24
    1fca:	91 50       	subi	r25, 0x01	; 1
    1fcc:	50 40       	sbci	r21, 0x00	; 0
    1fce:	a9 f7       	brne	.-22     	; 0x1fba <__mulsf3_pse+0x64>
    1fd0:	9e 3f       	cpi	r25, 0xFE	; 254
    1fd2:	51 05       	cpc	r21, r1
    1fd4:	80 f0       	brcs	.+32     	; 0x1ff6 <__mulsf3_pse+0xa0>
    1fd6:	0c 94 d1 0e 	jmp	0x1da2	; 0x1da2 <__fp_inf>
    1fda:	0c 94 82 0f 	jmp	0x1f04	; 0x1f04 <__fp_szero>
    1fde:	5f 3f       	cpi	r21, 0xFF	; 255
    1fe0:	e4 f3       	brlt	.-8      	; 0x1fda <__mulsf3_pse+0x84>
    1fe2:	98 3e       	cpi	r25, 0xE8	; 232
    1fe4:	d4 f3       	brlt	.-12     	; 0x1fda <__mulsf3_pse+0x84>
    1fe6:	86 95       	lsr	r24
    1fe8:	77 95       	ror	r23
    1fea:	67 95       	ror	r22
    1fec:	b7 95       	ror	r27
    1fee:	f7 95       	ror	r31
    1ff0:	e7 95       	ror	r30
    1ff2:	9f 5f       	subi	r25, 0xFF	; 255
    1ff4:	c1 f7       	brne	.-16     	; 0x1fe6 <__mulsf3_pse+0x90>
    1ff6:	fe 2b       	or	r31, r30
    1ff8:	88 0f       	add	r24, r24
    1ffa:	91 1d       	adc	r25, r1
    1ffc:	96 95       	lsr	r25
    1ffe:	87 95       	ror	r24
    2000:	97 f9       	bld	r25, 7
    2002:	08 95       	ret

00002004 <sin>:
    2004:	9f 93       	push	r25
    2006:	0e 94 11 0f 	call	0x1e22	; 0x1e22 <__fp_rempio2>
    200a:	0f 90       	pop	r0
    200c:	07 fc       	sbrc	r0, 7
    200e:	ee 5f       	subi	r30, 0xFE	; 254
    2010:	0c 94 4b 0f 	jmp	0x1e96	; 0x1e96 <__fp_sinus>
    2014:	19 f4       	brne	.+6      	; 0x201c <sin+0x18>
    2016:	16 f4       	brtc	.+4      	; 0x201c <sin+0x18>
    2018:	0c 94 d7 0e 	jmp	0x1dae	; 0x1dae <__fp_nan>
    201c:	0c 94 54 10 	jmp	0x20a8	; 0x20a8 <__fp_mpack>

00002020 <sqrt>:
    2020:	0e 94 67 0f 	call	0x1ece	; 0x1ece <__fp_splitA>
    2024:	b8 f3       	brcs	.-18     	; 0x2014 <sin+0x10>
    2026:	99 23       	and	r25, r25
    2028:	c9 f3       	breq	.-14     	; 0x201c <sin+0x18>
    202a:	b6 f3       	brts	.-20     	; 0x2018 <sin+0x14>
    202c:	9f 57       	subi	r25, 0x7F	; 127
    202e:	55 0b       	sbc	r21, r21
    2030:	87 ff       	sbrs	r24, 7
    2032:	0e 94 62 10 	call	0x20c4	; 0x20c4 <__fp_norm2>
    2036:	00 24       	eor	r0, r0
    2038:	a0 e6       	ldi	r26, 0x60	; 96
    203a:	40 ea       	ldi	r20, 0xA0	; 160
    203c:	90 01       	movw	r18, r0
    203e:	80 58       	subi	r24, 0x80	; 128
    2040:	56 95       	lsr	r21
    2042:	97 95       	ror	r25
    2044:	28 f4       	brcc	.+10     	; 0x2050 <sqrt+0x30>
    2046:	80 5c       	subi	r24, 0xC0	; 192
    2048:	66 0f       	add	r22, r22
    204a:	77 1f       	adc	r23, r23
    204c:	88 1f       	adc	r24, r24
    204e:	20 f0       	brcs	.+8      	; 0x2058 <sqrt+0x38>
    2050:	26 17       	cp	r18, r22
    2052:	37 07       	cpc	r19, r23
    2054:	48 07       	cpc	r20, r24
    2056:	30 f4       	brcc	.+12     	; 0x2064 <sqrt+0x44>
    2058:	62 1b       	sub	r22, r18
    205a:	73 0b       	sbc	r23, r19
    205c:	84 0b       	sbc	r24, r20
    205e:	20 29       	or	r18, r0
    2060:	31 29       	or	r19, r1
    2062:	4a 2b       	or	r20, r26
    2064:	a6 95       	lsr	r26
    2066:	17 94       	ror	r1
    2068:	07 94       	ror	r0
    206a:	20 25       	eor	r18, r0
    206c:	31 25       	eor	r19, r1
    206e:	4a 27       	eor	r20, r26
    2070:	58 f7       	brcc	.-42     	; 0x2048 <sqrt+0x28>
    2072:	66 0f       	add	r22, r22
    2074:	77 1f       	adc	r23, r23
    2076:	88 1f       	adc	r24, r24
    2078:	20 f0       	brcs	.+8      	; 0x2082 <sqrt+0x62>
    207a:	26 17       	cp	r18, r22
    207c:	37 07       	cpc	r19, r23
    207e:	48 07       	cpc	r20, r24
    2080:	30 f4       	brcc	.+12     	; 0x208e <sqrt+0x6e>
    2082:	62 0b       	sbc	r22, r18
    2084:	73 0b       	sbc	r23, r19
    2086:	84 0b       	sbc	r24, r20
    2088:	20 0d       	add	r18, r0
    208a:	31 1d       	adc	r19, r1
    208c:	41 1d       	adc	r20, r1
    208e:	a0 95       	com	r26
    2090:	81 f7       	brne	.-32     	; 0x2072 <sqrt+0x52>
    2092:	b9 01       	movw	r22, r18
    2094:	84 2f       	mov	r24, r20
    2096:	91 58       	subi	r25, 0x81	; 129
    2098:	88 0f       	add	r24, r24
    209a:	96 95       	lsr	r25
    209c:	87 95       	ror	r24
    209e:	08 95       	ret

000020a0 <square>:
    20a0:	9b 01       	movw	r18, r22
    20a2:	ac 01       	movw	r20, r24
    20a4:	0c 94 95 0f 	jmp	0x1f2a	; 0x1f2a <__mulsf3>

000020a8 <__fp_mpack>:
    20a8:	9f 3f       	cpi	r25, 0xFF	; 255
    20aa:	31 f0       	breq	.+12     	; 0x20b8 <__fp_mpack_finite+0xc>

000020ac <__fp_mpack_finite>:
    20ac:	91 50       	subi	r25, 0x01	; 1
    20ae:	20 f4       	brcc	.+8      	; 0x20b8 <__fp_mpack_finite+0xc>
    20b0:	87 95       	ror	r24
    20b2:	77 95       	ror	r23
    20b4:	67 95       	ror	r22
    20b6:	b7 95       	ror	r27
    20b8:	88 0f       	add	r24, r24
    20ba:	91 1d       	adc	r25, r1
    20bc:	96 95       	lsr	r25
    20be:	87 95       	ror	r24
    20c0:	97 f9       	bld	r25, 7
    20c2:	08 95       	ret

000020c4 <__fp_norm2>:
    20c4:	91 50       	subi	r25, 0x01	; 1
    20c6:	50 40       	sbci	r21, 0x00	; 0
    20c8:	66 0f       	add	r22, r22
    20ca:	77 1f       	adc	r23, r23
    20cc:	88 1f       	adc	r24, r24
    20ce:	d2 f7       	brpl	.-12     	; 0x20c4 <__fp_norm2>
    20d0:	08 95       	ret

000020d2 <__fp_powsodd>:
    20d2:	9f 93       	push	r25
    20d4:	8f 93       	push	r24
    20d6:	7f 93       	push	r23
    20d8:	6f 93       	push	r22
    20da:	ff 93       	push	r31
    20dc:	ef 93       	push	r30
    20de:	9b 01       	movw	r18, r22
    20e0:	ac 01       	movw	r20, r24
    20e2:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    20e6:	ef 91       	pop	r30
    20e8:	ff 91       	pop	r31
    20ea:	0e 94 da 0e 	call	0x1db4	; 0x1db4 <__fp_powser>
    20ee:	2f 91       	pop	r18
    20f0:	3f 91       	pop	r19
    20f2:	4f 91       	pop	r20
    20f4:	5f 91       	pop	r21
    20f6:	0c 94 95 0f 	jmp	0x1f2a	; 0x1f2a <__mulsf3>

000020fa <__divmodhi4>:
    20fa:	97 fb       	bst	r25, 7
    20fc:	07 2e       	mov	r0, r23
    20fe:	16 f4       	brtc	.+4      	; 0x2104 <__divmodhi4+0xa>
    2100:	00 94       	com	r0
    2102:	07 d0       	rcall	.+14     	; 0x2112 <__divmodhi4_neg1>
    2104:	77 fd       	sbrc	r23, 7
    2106:	09 d0       	rcall	.+18     	; 0x211a <__divmodhi4_neg2>
    2108:	0e 94 d2 10 	call	0x21a4	; 0x21a4 <__udivmodhi4>
    210c:	07 fc       	sbrc	r0, 7
    210e:	05 d0       	rcall	.+10     	; 0x211a <__divmodhi4_neg2>
    2110:	3e f4       	brtc	.+14     	; 0x2120 <__divmodhi4_exit>

00002112 <__divmodhi4_neg1>:
    2112:	90 95       	com	r25
    2114:	81 95       	neg	r24
    2116:	9f 4f       	sbci	r25, 0xFF	; 255
    2118:	08 95       	ret

0000211a <__divmodhi4_neg2>:
    211a:	70 95       	com	r23
    211c:	61 95       	neg	r22
    211e:	7f 4f       	sbci	r23, 0xFF	; 255

00002120 <__divmodhi4_exit>:
    2120:	08 95       	ret

00002122 <__udivmodsi4>:
    2122:	a1 e2       	ldi	r26, 0x21	; 33
    2124:	1a 2e       	mov	r1, r26
    2126:	aa 1b       	sub	r26, r26
    2128:	bb 1b       	sub	r27, r27
    212a:	fd 01       	movw	r30, r26
    212c:	0d c0       	rjmp	.+26     	; 0x2148 <__udivmodsi4_ep>

0000212e <__udivmodsi4_loop>:
    212e:	aa 1f       	adc	r26, r26
    2130:	bb 1f       	adc	r27, r27
    2132:	ee 1f       	adc	r30, r30
    2134:	ff 1f       	adc	r31, r31
    2136:	a2 17       	cp	r26, r18
    2138:	b3 07       	cpc	r27, r19
    213a:	e4 07       	cpc	r30, r20
    213c:	f5 07       	cpc	r31, r21
    213e:	20 f0       	brcs	.+8      	; 0x2148 <__udivmodsi4_ep>
    2140:	a2 1b       	sub	r26, r18
    2142:	b3 0b       	sbc	r27, r19
    2144:	e4 0b       	sbc	r30, r20
    2146:	f5 0b       	sbc	r31, r21

00002148 <__udivmodsi4_ep>:
    2148:	66 1f       	adc	r22, r22
    214a:	77 1f       	adc	r23, r23
    214c:	88 1f       	adc	r24, r24
    214e:	99 1f       	adc	r25, r25
    2150:	1a 94       	dec	r1
    2152:	69 f7       	brne	.-38     	; 0x212e <__udivmodsi4_loop>
    2154:	60 95       	com	r22
    2156:	70 95       	com	r23
    2158:	80 95       	com	r24
    215a:	90 95       	com	r25
    215c:	9b 01       	movw	r18, r22
    215e:	ac 01       	movw	r20, r24
    2160:	bd 01       	movw	r22, r26
    2162:	cf 01       	movw	r24, r30
    2164:	08 95       	ret

00002166 <__divmodsi4>:
    2166:	05 2e       	mov	r0, r21
    2168:	97 fb       	bst	r25, 7
    216a:	1e f4       	brtc	.+6      	; 0x2172 <__divmodsi4+0xc>
    216c:	00 94       	com	r0
    216e:	0e 94 ca 10 	call	0x2194	; 0x2194 <__negsi2>
    2172:	57 fd       	sbrc	r21, 7
    2174:	07 d0       	rcall	.+14     	; 0x2184 <__divmodsi4_neg2>
    2176:	0e 94 91 10 	call	0x2122	; 0x2122 <__udivmodsi4>
    217a:	07 fc       	sbrc	r0, 7
    217c:	03 d0       	rcall	.+6      	; 0x2184 <__divmodsi4_neg2>
    217e:	4e f4       	brtc	.+18     	; 0x2192 <__divmodsi4_exit>
    2180:	0c 94 ca 10 	jmp	0x2194	; 0x2194 <__negsi2>

00002184 <__divmodsi4_neg2>:
    2184:	50 95       	com	r21
    2186:	40 95       	com	r20
    2188:	30 95       	com	r19
    218a:	21 95       	neg	r18
    218c:	3f 4f       	sbci	r19, 0xFF	; 255
    218e:	4f 4f       	sbci	r20, 0xFF	; 255
    2190:	5f 4f       	sbci	r21, 0xFF	; 255

00002192 <__divmodsi4_exit>:
    2192:	08 95       	ret

00002194 <__negsi2>:
    2194:	90 95       	com	r25
    2196:	80 95       	com	r24
    2198:	70 95       	com	r23
    219a:	61 95       	neg	r22
    219c:	7f 4f       	sbci	r23, 0xFF	; 255
    219e:	8f 4f       	sbci	r24, 0xFF	; 255
    21a0:	9f 4f       	sbci	r25, 0xFF	; 255
    21a2:	08 95       	ret

000021a4 <__udivmodhi4>:
    21a4:	aa 1b       	sub	r26, r26
    21a6:	bb 1b       	sub	r27, r27
    21a8:	51 e1       	ldi	r21, 0x11	; 17
    21aa:	07 c0       	rjmp	.+14     	; 0x21ba <__udivmodhi4_ep>

000021ac <__udivmodhi4_loop>:
    21ac:	aa 1f       	adc	r26, r26
    21ae:	bb 1f       	adc	r27, r27
    21b0:	a6 17       	cp	r26, r22
    21b2:	b7 07       	cpc	r27, r23
    21b4:	10 f0       	brcs	.+4      	; 0x21ba <__udivmodhi4_ep>
    21b6:	a6 1b       	sub	r26, r22
    21b8:	b7 0b       	sbc	r27, r23

000021ba <__udivmodhi4_ep>:
    21ba:	88 1f       	adc	r24, r24
    21bc:	99 1f       	adc	r25, r25
    21be:	5a 95       	dec	r21
    21c0:	a9 f7       	brne	.-22     	; 0x21ac <__udivmodhi4_loop>
    21c2:	80 95       	com	r24
    21c4:	90 95       	com	r25
    21c6:	bc 01       	movw	r22, r24
    21c8:	cd 01       	movw	r24, r26
    21ca:	08 95       	ret

000021cc <malloc>:
    21cc:	0f 93       	push	r16
    21ce:	1f 93       	push	r17
    21d0:	cf 93       	push	r28
    21d2:	df 93       	push	r29
    21d4:	82 30       	cpi	r24, 0x02	; 2
    21d6:	91 05       	cpc	r25, r1
    21d8:	10 f4       	brcc	.+4      	; 0x21de <malloc+0x12>
    21da:	82 e0       	ldi	r24, 0x02	; 2
    21dc:	90 e0       	ldi	r25, 0x00	; 0
    21de:	e0 91 d2 00 	lds	r30, 0x00D2	; 0x8000d2 <__flp>
    21e2:	f0 91 d3 00 	lds	r31, 0x00D3	; 0x8000d3 <__flp+0x1>
    21e6:	20 e0       	ldi	r18, 0x00	; 0
    21e8:	30 e0       	ldi	r19, 0x00	; 0
    21ea:	a0 e0       	ldi	r26, 0x00	; 0
    21ec:	b0 e0       	ldi	r27, 0x00	; 0
    21ee:	30 97       	sbiw	r30, 0x00	; 0
    21f0:	19 f1       	breq	.+70     	; 0x2238 <malloc+0x6c>
    21f2:	40 81       	ld	r20, Z
    21f4:	51 81       	ldd	r21, Z+1	; 0x01
    21f6:	02 81       	ldd	r16, Z+2	; 0x02
    21f8:	13 81       	ldd	r17, Z+3	; 0x03
    21fa:	48 17       	cp	r20, r24
    21fc:	59 07       	cpc	r21, r25
    21fe:	c8 f0       	brcs	.+50     	; 0x2232 <malloc+0x66>
    2200:	84 17       	cp	r24, r20
    2202:	95 07       	cpc	r25, r21
    2204:	69 f4       	brne	.+26     	; 0x2220 <malloc+0x54>
    2206:	10 97       	sbiw	r26, 0x00	; 0
    2208:	31 f0       	breq	.+12     	; 0x2216 <malloc+0x4a>
    220a:	12 96       	adiw	r26, 0x02	; 2
    220c:	0c 93       	st	X, r16
    220e:	12 97       	sbiw	r26, 0x02	; 2
    2210:	13 96       	adiw	r26, 0x03	; 3
    2212:	1c 93       	st	X, r17
    2214:	27 c0       	rjmp	.+78     	; 0x2264 <malloc+0x98>
    2216:	00 93 d2 00 	sts	0x00D2, r16	; 0x8000d2 <__flp>
    221a:	10 93 d3 00 	sts	0x00D3, r17	; 0x8000d3 <__flp+0x1>
    221e:	22 c0       	rjmp	.+68     	; 0x2264 <malloc+0x98>
    2220:	21 15       	cp	r18, r1
    2222:	31 05       	cpc	r19, r1
    2224:	19 f0       	breq	.+6      	; 0x222c <malloc+0x60>
    2226:	42 17       	cp	r20, r18
    2228:	53 07       	cpc	r21, r19
    222a:	18 f4       	brcc	.+6      	; 0x2232 <malloc+0x66>
    222c:	9a 01       	movw	r18, r20
    222e:	bd 01       	movw	r22, r26
    2230:	ef 01       	movw	r28, r30
    2232:	df 01       	movw	r26, r30
    2234:	f8 01       	movw	r30, r16
    2236:	db cf       	rjmp	.-74     	; 0x21ee <malloc+0x22>
    2238:	21 15       	cp	r18, r1
    223a:	31 05       	cpc	r19, r1
    223c:	f9 f0       	breq	.+62     	; 0x227c <malloc+0xb0>
    223e:	28 1b       	sub	r18, r24
    2240:	39 0b       	sbc	r19, r25
    2242:	24 30       	cpi	r18, 0x04	; 4
    2244:	31 05       	cpc	r19, r1
    2246:	80 f4       	brcc	.+32     	; 0x2268 <malloc+0x9c>
    2248:	8a 81       	ldd	r24, Y+2	; 0x02
    224a:	9b 81       	ldd	r25, Y+3	; 0x03
    224c:	61 15       	cp	r22, r1
    224e:	71 05       	cpc	r23, r1
    2250:	21 f0       	breq	.+8      	; 0x225a <malloc+0x8e>
    2252:	fb 01       	movw	r30, r22
    2254:	93 83       	std	Z+3, r25	; 0x03
    2256:	82 83       	std	Z+2, r24	; 0x02
    2258:	04 c0       	rjmp	.+8      	; 0x2262 <malloc+0x96>
    225a:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <__flp+0x1>
    225e:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <__flp>
    2262:	fe 01       	movw	r30, r28
    2264:	32 96       	adiw	r30, 0x02	; 2
    2266:	44 c0       	rjmp	.+136    	; 0x22f0 <malloc+0x124>
    2268:	fe 01       	movw	r30, r28
    226a:	e2 0f       	add	r30, r18
    226c:	f3 1f       	adc	r31, r19
    226e:	81 93       	st	Z+, r24
    2270:	91 93       	st	Z+, r25
    2272:	22 50       	subi	r18, 0x02	; 2
    2274:	31 09       	sbc	r19, r1
    2276:	39 83       	std	Y+1, r19	; 0x01
    2278:	28 83       	st	Y, r18
    227a:	3a c0       	rjmp	.+116    	; 0x22f0 <malloc+0x124>
    227c:	20 91 d0 00 	lds	r18, 0x00D0	; 0x8000d0 <__brkval>
    2280:	30 91 d1 00 	lds	r19, 0x00D1	; 0x8000d1 <__brkval+0x1>
    2284:	23 2b       	or	r18, r19
    2286:	41 f4       	brne	.+16     	; 0x2298 <malloc+0xcc>
    2288:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
    228c:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
    2290:	30 93 d1 00 	sts	0x00D1, r19	; 0x8000d1 <__brkval+0x1>
    2294:	20 93 d0 00 	sts	0x00D0, r18	; 0x8000d0 <__brkval>
    2298:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__data_start>
    229c:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__data_start+0x1>
    22a0:	21 15       	cp	r18, r1
    22a2:	31 05       	cpc	r19, r1
    22a4:	41 f4       	brne	.+16     	; 0x22b6 <malloc+0xea>
    22a6:	2d b7       	in	r18, 0x3d	; 61
    22a8:	3e b7       	in	r19, 0x3e	; 62
    22aa:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
    22ae:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
    22b2:	24 1b       	sub	r18, r20
    22b4:	35 0b       	sbc	r19, r21
    22b6:	e0 91 d0 00 	lds	r30, 0x00D0	; 0x8000d0 <__brkval>
    22ba:	f0 91 d1 00 	lds	r31, 0x00D1	; 0x8000d1 <__brkval+0x1>
    22be:	e2 17       	cp	r30, r18
    22c0:	f3 07       	cpc	r31, r19
    22c2:	a0 f4       	brcc	.+40     	; 0x22ec <malloc+0x120>
    22c4:	2e 1b       	sub	r18, r30
    22c6:	3f 0b       	sbc	r19, r31
    22c8:	28 17       	cp	r18, r24
    22ca:	39 07       	cpc	r19, r25
    22cc:	78 f0       	brcs	.+30     	; 0x22ec <malloc+0x120>
    22ce:	ac 01       	movw	r20, r24
    22d0:	4e 5f       	subi	r20, 0xFE	; 254
    22d2:	5f 4f       	sbci	r21, 0xFF	; 255
    22d4:	24 17       	cp	r18, r20
    22d6:	35 07       	cpc	r19, r21
    22d8:	48 f0       	brcs	.+18     	; 0x22ec <malloc+0x120>
    22da:	4e 0f       	add	r20, r30
    22dc:	5f 1f       	adc	r21, r31
    22de:	50 93 d1 00 	sts	0x00D1, r21	; 0x8000d1 <__brkval+0x1>
    22e2:	40 93 d0 00 	sts	0x00D0, r20	; 0x8000d0 <__brkval>
    22e6:	81 93       	st	Z+, r24
    22e8:	91 93       	st	Z+, r25
    22ea:	02 c0       	rjmp	.+4      	; 0x22f0 <malloc+0x124>
    22ec:	e0 e0       	ldi	r30, 0x00	; 0
    22ee:	f0 e0       	ldi	r31, 0x00	; 0
    22f0:	cf 01       	movw	r24, r30
    22f2:	df 91       	pop	r29
    22f4:	cf 91       	pop	r28
    22f6:	1f 91       	pop	r17
    22f8:	0f 91       	pop	r16
    22fa:	08 95       	ret

000022fc <free>:
    22fc:	cf 93       	push	r28
    22fe:	df 93       	push	r29
    2300:	00 97       	sbiw	r24, 0x00	; 0
    2302:	09 f4       	brne	.+2      	; 0x2306 <free+0xa>
    2304:	81 c0       	rjmp	.+258    	; 0x2408 <free+0x10c>
    2306:	fc 01       	movw	r30, r24
    2308:	32 97       	sbiw	r30, 0x02	; 2
    230a:	13 82       	std	Z+3, r1	; 0x03
    230c:	12 82       	std	Z+2, r1	; 0x02
    230e:	a0 91 d2 00 	lds	r26, 0x00D2	; 0x8000d2 <__flp>
    2312:	b0 91 d3 00 	lds	r27, 0x00D3	; 0x8000d3 <__flp+0x1>
    2316:	10 97       	sbiw	r26, 0x00	; 0
    2318:	81 f4       	brne	.+32     	; 0x233a <free+0x3e>
    231a:	20 81       	ld	r18, Z
    231c:	31 81       	ldd	r19, Z+1	; 0x01
    231e:	82 0f       	add	r24, r18
    2320:	93 1f       	adc	r25, r19
    2322:	20 91 d0 00 	lds	r18, 0x00D0	; 0x8000d0 <__brkval>
    2326:	30 91 d1 00 	lds	r19, 0x00D1	; 0x8000d1 <__brkval+0x1>
    232a:	28 17       	cp	r18, r24
    232c:	39 07       	cpc	r19, r25
    232e:	51 f5       	brne	.+84     	; 0x2384 <free+0x88>
    2330:	f0 93 d1 00 	sts	0x00D1, r31	; 0x8000d1 <__brkval+0x1>
    2334:	e0 93 d0 00 	sts	0x00D0, r30	; 0x8000d0 <__brkval>
    2338:	67 c0       	rjmp	.+206    	; 0x2408 <free+0x10c>
    233a:	ed 01       	movw	r28, r26
    233c:	20 e0       	ldi	r18, 0x00	; 0
    233e:	30 e0       	ldi	r19, 0x00	; 0
    2340:	ce 17       	cp	r28, r30
    2342:	df 07       	cpc	r29, r31
    2344:	40 f4       	brcc	.+16     	; 0x2356 <free+0x5a>
    2346:	4a 81       	ldd	r20, Y+2	; 0x02
    2348:	5b 81       	ldd	r21, Y+3	; 0x03
    234a:	9e 01       	movw	r18, r28
    234c:	41 15       	cp	r20, r1
    234e:	51 05       	cpc	r21, r1
    2350:	f1 f0       	breq	.+60     	; 0x238e <free+0x92>
    2352:	ea 01       	movw	r28, r20
    2354:	f5 cf       	rjmp	.-22     	; 0x2340 <free+0x44>
    2356:	d3 83       	std	Z+3, r29	; 0x03
    2358:	c2 83       	std	Z+2, r28	; 0x02
    235a:	40 81       	ld	r20, Z
    235c:	51 81       	ldd	r21, Z+1	; 0x01
    235e:	84 0f       	add	r24, r20
    2360:	95 1f       	adc	r25, r21
    2362:	c8 17       	cp	r28, r24
    2364:	d9 07       	cpc	r29, r25
    2366:	59 f4       	brne	.+22     	; 0x237e <free+0x82>
    2368:	88 81       	ld	r24, Y
    236a:	99 81       	ldd	r25, Y+1	; 0x01
    236c:	84 0f       	add	r24, r20
    236e:	95 1f       	adc	r25, r21
    2370:	02 96       	adiw	r24, 0x02	; 2
    2372:	91 83       	std	Z+1, r25	; 0x01
    2374:	80 83       	st	Z, r24
    2376:	8a 81       	ldd	r24, Y+2	; 0x02
    2378:	9b 81       	ldd	r25, Y+3	; 0x03
    237a:	93 83       	std	Z+3, r25	; 0x03
    237c:	82 83       	std	Z+2, r24	; 0x02
    237e:	21 15       	cp	r18, r1
    2380:	31 05       	cpc	r19, r1
    2382:	29 f4       	brne	.+10     	; 0x238e <free+0x92>
    2384:	f0 93 d3 00 	sts	0x00D3, r31	; 0x8000d3 <__flp+0x1>
    2388:	e0 93 d2 00 	sts	0x00D2, r30	; 0x8000d2 <__flp>
    238c:	3d c0       	rjmp	.+122    	; 0x2408 <free+0x10c>
    238e:	e9 01       	movw	r28, r18
    2390:	fb 83       	std	Y+3, r31	; 0x03
    2392:	ea 83       	std	Y+2, r30	; 0x02
    2394:	49 91       	ld	r20, Y+
    2396:	59 91       	ld	r21, Y+
    2398:	c4 0f       	add	r28, r20
    239a:	d5 1f       	adc	r29, r21
    239c:	ec 17       	cp	r30, r28
    239e:	fd 07       	cpc	r31, r29
    23a0:	61 f4       	brne	.+24     	; 0x23ba <free+0xbe>
    23a2:	80 81       	ld	r24, Z
    23a4:	91 81       	ldd	r25, Z+1	; 0x01
    23a6:	84 0f       	add	r24, r20
    23a8:	95 1f       	adc	r25, r21
    23aa:	02 96       	adiw	r24, 0x02	; 2
    23ac:	e9 01       	movw	r28, r18
    23ae:	99 83       	std	Y+1, r25	; 0x01
    23b0:	88 83       	st	Y, r24
    23b2:	82 81       	ldd	r24, Z+2	; 0x02
    23b4:	93 81       	ldd	r25, Z+3	; 0x03
    23b6:	9b 83       	std	Y+3, r25	; 0x03
    23b8:	8a 83       	std	Y+2, r24	; 0x02
    23ba:	e0 e0       	ldi	r30, 0x00	; 0
    23bc:	f0 e0       	ldi	r31, 0x00	; 0
    23be:	12 96       	adiw	r26, 0x02	; 2
    23c0:	8d 91       	ld	r24, X+
    23c2:	9c 91       	ld	r25, X
    23c4:	13 97       	sbiw	r26, 0x03	; 3
    23c6:	00 97       	sbiw	r24, 0x00	; 0
    23c8:	19 f0       	breq	.+6      	; 0x23d0 <free+0xd4>
    23ca:	fd 01       	movw	r30, r26
    23cc:	dc 01       	movw	r26, r24
    23ce:	f7 cf       	rjmp	.-18     	; 0x23be <free+0xc2>
    23d0:	8d 91       	ld	r24, X+
    23d2:	9c 91       	ld	r25, X
    23d4:	11 97       	sbiw	r26, 0x01	; 1
    23d6:	9d 01       	movw	r18, r26
    23d8:	2e 5f       	subi	r18, 0xFE	; 254
    23da:	3f 4f       	sbci	r19, 0xFF	; 255
    23dc:	82 0f       	add	r24, r18
    23de:	93 1f       	adc	r25, r19
    23e0:	20 91 d0 00 	lds	r18, 0x00D0	; 0x8000d0 <__brkval>
    23e4:	30 91 d1 00 	lds	r19, 0x00D1	; 0x8000d1 <__brkval+0x1>
    23e8:	28 17       	cp	r18, r24
    23ea:	39 07       	cpc	r19, r25
    23ec:	69 f4       	brne	.+26     	; 0x2408 <free+0x10c>
    23ee:	30 97       	sbiw	r30, 0x00	; 0
    23f0:	29 f4       	brne	.+10     	; 0x23fc <free+0x100>
    23f2:	10 92 d3 00 	sts	0x00D3, r1	; 0x8000d3 <__flp+0x1>
    23f6:	10 92 d2 00 	sts	0x00D2, r1	; 0x8000d2 <__flp>
    23fa:	02 c0       	rjmp	.+4      	; 0x2400 <free+0x104>
    23fc:	13 82       	std	Z+3, r1	; 0x03
    23fe:	12 82       	std	Z+2, r1	; 0x02
    2400:	b0 93 d1 00 	sts	0x00D1, r27	; 0x8000d1 <__brkval+0x1>
    2404:	a0 93 d0 00 	sts	0x00D0, r26	; 0x8000d0 <__brkval>
    2408:	df 91       	pop	r29
    240a:	cf 91       	pop	r28
    240c:	08 95       	ret

0000240e <atof>:
    240e:	66 27       	eor	r22, r22
    2410:	77 27       	eor	r23, r23
    2412:	0c 94 0e 14 	jmp	0x281c	; 0x281c <strtod>

00002416 <sprintf>:
    2416:	ae e0       	ldi	r26, 0x0E	; 14
    2418:	b0 e0       	ldi	r27, 0x00	; 0
    241a:	e1 e1       	ldi	r30, 0x11	; 17
    241c:	f2 e1       	ldi	r31, 0x12	; 18
    241e:	0c 94 49 16 	jmp	0x2c92	; 0x2c92 <__prologue_saves__+0x1c>
    2422:	0d 89       	ldd	r16, Y+21	; 0x15
    2424:	1e 89       	ldd	r17, Y+22	; 0x16
    2426:	86 e0       	ldi	r24, 0x06	; 6
    2428:	8c 83       	std	Y+4, r24	; 0x04
    242a:	1a 83       	std	Y+2, r17	; 0x02
    242c:	09 83       	std	Y+1, r16	; 0x01
    242e:	8f ef       	ldi	r24, 0xFF	; 255
    2430:	9f e7       	ldi	r25, 0x7F	; 127
    2432:	9e 83       	std	Y+6, r25	; 0x06
    2434:	8d 83       	std	Y+5, r24	; 0x05
    2436:	ae 01       	movw	r20, r28
    2438:	47 5e       	subi	r20, 0xE7	; 231
    243a:	5f 4f       	sbci	r21, 0xFF	; 255
    243c:	6f 89       	ldd	r22, Y+23	; 0x17
    243e:	78 8d       	ldd	r23, Y+24	; 0x18
    2440:	ce 01       	movw	r24, r28
    2442:	01 96       	adiw	r24, 0x01	; 1
    2444:	0e 94 2d 12 	call	0x245a	; 0x245a <vfprintf>
    2448:	ef 81       	ldd	r30, Y+7	; 0x07
    244a:	f8 85       	ldd	r31, Y+8	; 0x08
    244c:	e0 0f       	add	r30, r16
    244e:	f1 1f       	adc	r31, r17
    2450:	10 82       	st	Z, r1
    2452:	2e 96       	adiw	r28, 0x0e	; 14
    2454:	e4 e0       	ldi	r30, 0x04	; 4
    2456:	0c 94 65 16 	jmp	0x2cca	; 0x2cca <__epilogue_restores__+0x1c>

0000245a <vfprintf>:
    245a:	ab e0       	ldi	r26, 0x0B	; 11
    245c:	b0 e0       	ldi	r27, 0x00	; 0
    245e:	e3 e3       	ldi	r30, 0x33	; 51
    2460:	f2 e1       	ldi	r31, 0x12	; 18
    2462:	0c 94 3b 16 	jmp	0x2c76	; 0x2c76 <__prologue_saves__>
    2466:	6c 01       	movw	r12, r24
    2468:	7b 01       	movw	r14, r22
    246a:	8a 01       	movw	r16, r20
    246c:	fc 01       	movw	r30, r24
    246e:	17 82       	std	Z+7, r1	; 0x07
    2470:	16 82       	std	Z+6, r1	; 0x06
    2472:	83 81       	ldd	r24, Z+3	; 0x03
    2474:	81 ff       	sbrs	r24, 1
    2476:	cc c1       	rjmp	.+920    	; 0x2810 <vfprintf+0x3b6>
    2478:	ce 01       	movw	r24, r28
    247a:	01 96       	adiw	r24, 0x01	; 1
    247c:	3c 01       	movw	r6, r24
    247e:	f6 01       	movw	r30, r12
    2480:	93 81       	ldd	r25, Z+3	; 0x03
    2482:	f7 01       	movw	r30, r14
    2484:	93 fd       	sbrc	r25, 3
    2486:	85 91       	lpm	r24, Z+
    2488:	93 ff       	sbrs	r25, 3
    248a:	81 91       	ld	r24, Z+
    248c:	7f 01       	movw	r14, r30
    248e:	88 23       	and	r24, r24
    2490:	09 f4       	brne	.+2      	; 0x2494 <vfprintf+0x3a>
    2492:	ba c1       	rjmp	.+884    	; 0x2808 <vfprintf+0x3ae>
    2494:	85 32       	cpi	r24, 0x25	; 37
    2496:	39 f4       	brne	.+14     	; 0x24a6 <vfprintf+0x4c>
    2498:	93 fd       	sbrc	r25, 3
    249a:	85 91       	lpm	r24, Z+
    249c:	93 ff       	sbrs	r25, 3
    249e:	81 91       	ld	r24, Z+
    24a0:	7f 01       	movw	r14, r30
    24a2:	85 32       	cpi	r24, 0x25	; 37
    24a4:	29 f4       	brne	.+10     	; 0x24b0 <vfprintf+0x56>
    24a6:	b6 01       	movw	r22, r12
    24a8:	90 e0       	ldi	r25, 0x00	; 0
    24aa:	0e 94 93 15 	call	0x2b26	; 0x2b26 <fputc>
    24ae:	e7 cf       	rjmp	.-50     	; 0x247e <vfprintf+0x24>
    24b0:	91 2c       	mov	r9, r1
    24b2:	21 2c       	mov	r2, r1
    24b4:	31 2c       	mov	r3, r1
    24b6:	ff e1       	ldi	r31, 0x1F	; 31
    24b8:	f3 15       	cp	r31, r3
    24ba:	d8 f0       	brcs	.+54     	; 0x24f2 <vfprintf+0x98>
    24bc:	8b 32       	cpi	r24, 0x2B	; 43
    24be:	79 f0       	breq	.+30     	; 0x24de <vfprintf+0x84>
    24c0:	38 f4       	brcc	.+14     	; 0x24d0 <vfprintf+0x76>
    24c2:	80 32       	cpi	r24, 0x20	; 32
    24c4:	79 f0       	breq	.+30     	; 0x24e4 <vfprintf+0x8a>
    24c6:	83 32       	cpi	r24, 0x23	; 35
    24c8:	a1 f4       	brne	.+40     	; 0x24f2 <vfprintf+0x98>
    24ca:	23 2d       	mov	r18, r3
    24cc:	20 61       	ori	r18, 0x10	; 16
    24ce:	1d c0       	rjmp	.+58     	; 0x250a <vfprintf+0xb0>
    24d0:	8d 32       	cpi	r24, 0x2D	; 45
    24d2:	61 f0       	breq	.+24     	; 0x24ec <vfprintf+0x92>
    24d4:	80 33       	cpi	r24, 0x30	; 48
    24d6:	69 f4       	brne	.+26     	; 0x24f2 <vfprintf+0x98>
    24d8:	23 2d       	mov	r18, r3
    24da:	21 60       	ori	r18, 0x01	; 1
    24dc:	16 c0       	rjmp	.+44     	; 0x250a <vfprintf+0xb0>
    24de:	83 2d       	mov	r24, r3
    24e0:	82 60       	ori	r24, 0x02	; 2
    24e2:	38 2e       	mov	r3, r24
    24e4:	e3 2d       	mov	r30, r3
    24e6:	e4 60       	ori	r30, 0x04	; 4
    24e8:	3e 2e       	mov	r3, r30
    24ea:	2a c0       	rjmp	.+84     	; 0x2540 <vfprintf+0xe6>
    24ec:	f3 2d       	mov	r31, r3
    24ee:	f8 60       	ori	r31, 0x08	; 8
    24f0:	1d c0       	rjmp	.+58     	; 0x252c <vfprintf+0xd2>
    24f2:	37 fc       	sbrc	r3, 7
    24f4:	2d c0       	rjmp	.+90     	; 0x2550 <vfprintf+0xf6>
    24f6:	20 ed       	ldi	r18, 0xD0	; 208
    24f8:	28 0f       	add	r18, r24
    24fa:	2a 30       	cpi	r18, 0x0A	; 10
    24fc:	40 f0       	brcs	.+16     	; 0x250e <vfprintf+0xb4>
    24fe:	8e 32       	cpi	r24, 0x2E	; 46
    2500:	b9 f4       	brne	.+46     	; 0x2530 <vfprintf+0xd6>
    2502:	36 fc       	sbrc	r3, 6
    2504:	81 c1       	rjmp	.+770    	; 0x2808 <vfprintf+0x3ae>
    2506:	23 2d       	mov	r18, r3
    2508:	20 64       	ori	r18, 0x40	; 64
    250a:	32 2e       	mov	r3, r18
    250c:	19 c0       	rjmp	.+50     	; 0x2540 <vfprintf+0xe6>
    250e:	36 fe       	sbrs	r3, 6
    2510:	06 c0       	rjmp	.+12     	; 0x251e <vfprintf+0xc4>
    2512:	8a e0       	ldi	r24, 0x0A	; 10
    2514:	98 9e       	mul	r9, r24
    2516:	20 0d       	add	r18, r0
    2518:	11 24       	eor	r1, r1
    251a:	92 2e       	mov	r9, r18
    251c:	11 c0       	rjmp	.+34     	; 0x2540 <vfprintf+0xe6>
    251e:	ea e0       	ldi	r30, 0x0A	; 10
    2520:	2e 9e       	mul	r2, r30
    2522:	20 0d       	add	r18, r0
    2524:	11 24       	eor	r1, r1
    2526:	22 2e       	mov	r2, r18
    2528:	f3 2d       	mov	r31, r3
    252a:	f0 62       	ori	r31, 0x20	; 32
    252c:	3f 2e       	mov	r3, r31
    252e:	08 c0       	rjmp	.+16     	; 0x2540 <vfprintf+0xe6>
    2530:	8c 36       	cpi	r24, 0x6C	; 108
    2532:	21 f4       	brne	.+8      	; 0x253c <vfprintf+0xe2>
    2534:	83 2d       	mov	r24, r3
    2536:	80 68       	ori	r24, 0x80	; 128
    2538:	38 2e       	mov	r3, r24
    253a:	02 c0       	rjmp	.+4      	; 0x2540 <vfprintf+0xe6>
    253c:	88 36       	cpi	r24, 0x68	; 104
    253e:	41 f4       	brne	.+16     	; 0x2550 <vfprintf+0xf6>
    2540:	f7 01       	movw	r30, r14
    2542:	93 fd       	sbrc	r25, 3
    2544:	85 91       	lpm	r24, Z+
    2546:	93 ff       	sbrs	r25, 3
    2548:	81 91       	ld	r24, Z+
    254a:	7f 01       	movw	r14, r30
    254c:	81 11       	cpse	r24, r1
    254e:	b3 cf       	rjmp	.-154    	; 0x24b6 <vfprintf+0x5c>
    2550:	98 2f       	mov	r25, r24
    2552:	9f 7d       	andi	r25, 0xDF	; 223
    2554:	95 54       	subi	r25, 0x45	; 69
    2556:	93 30       	cpi	r25, 0x03	; 3
    2558:	28 f4       	brcc	.+10     	; 0x2564 <vfprintf+0x10a>
    255a:	0c 5f       	subi	r16, 0xFC	; 252
    255c:	1f 4f       	sbci	r17, 0xFF	; 255
    255e:	9f e3       	ldi	r25, 0x3F	; 63
    2560:	99 83       	std	Y+1, r25	; 0x01
    2562:	0d c0       	rjmp	.+26     	; 0x257e <vfprintf+0x124>
    2564:	83 36       	cpi	r24, 0x63	; 99
    2566:	31 f0       	breq	.+12     	; 0x2574 <vfprintf+0x11a>
    2568:	83 37       	cpi	r24, 0x73	; 115
    256a:	71 f0       	breq	.+28     	; 0x2588 <vfprintf+0x12e>
    256c:	83 35       	cpi	r24, 0x53	; 83
    256e:	09 f0       	breq	.+2      	; 0x2572 <vfprintf+0x118>
    2570:	59 c0       	rjmp	.+178    	; 0x2624 <vfprintf+0x1ca>
    2572:	21 c0       	rjmp	.+66     	; 0x25b6 <vfprintf+0x15c>
    2574:	f8 01       	movw	r30, r16
    2576:	80 81       	ld	r24, Z
    2578:	89 83       	std	Y+1, r24	; 0x01
    257a:	0e 5f       	subi	r16, 0xFE	; 254
    257c:	1f 4f       	sbci	r17, 0xFF	; 255
    257e:	88 24       	eor	r8, r8
    2580:	83 94       	inc	r8
    2582:	91 2c       	mov	r9, r1
    2584:	53 01       	movw	r10, r6
    2586:	13 c0       	rjmp	.+38     	; 0x25ae <vfprintf+0x154>
    2588:	28 01       	movw	r4, r16
    258a:	f2 e0       	ldi	r31, 0x02	; 2
    258c:	4f 0e       	add	r4, r31
    258e:	51 1c       	adc	r5, r1
    2590:	f8 01       	movw	r30, r16
    2592:	a0 80       	ld	r10, Z
    2594:	b1 80       	ldd	r11, Z+1	; 0x01
    2596:	36 fe       	sbrs	r3, 6
    2598:	03 c0       	rjmp	.+6      	; 0x25a0 <vfprintf+0x146>
    259a:	69 2d       	mov	r22, r9
    259c:	70 e0       	ldi	r23, 0x00	; 0
    259e:	02 c0       	rjmp	.+4      	; 0x25a4 <vfprintf+0x14a>
    25a0:	6f ef       	ldi	r22, 0xFF	; 255
    25a2:	7f ef       	ldi	r23, 0xFF	; 255
    25a4:	c5 01       	movw	r24, r10
    25a6:	0e 94 88 15 	call	0x2b10	; 0x2b10 <strnlen>
    25aa:	4c 01       	movw	r8, r24
    25ac:	82 01       	movw	r16, r4
    25ae:	f3 2d       	mov	r31, r3
    25b0:	ff 77       	andi	r31, 0x7F	; 127
    25b2:	3f 2e       	mov	r3, r31
    25b4:	16 c0       	rjmp	.+44     	; 0x25e2 <vfprintf+0x188>
    25b6:	28 01       	movw	r4, r16
    25b8:	22 e0       	ldi	r18, 0x02	; 2
    25ba:	42 0e       	add	r4, r18
    25bc:	51 1c       	adc	r5, r1
    25be:	f8 01       	movw	r30, r16
    25c0:	a0 80       	ld	r10, Z
    25c2:	b1 80       	ldd	r11, Z+1	; 0x01
    25c4:	36 fe       	sbrs	r3, 6
    25c6:	03 c0       	rjmp	.+6      	; 0x25ce <vfprintf+0x174>
    25c8:	69 2d       	mov	r22, r9
    25ca:	70 e0       	ldi	r23, 0x00	; 0
    25cc:	02 c0       	rjmp	.+4      	; 0x25d2 <vfprintf+0x178>
    25ce:	6f ef       	ldi	r22, 0xFF	; 255
    25d0:	7f ef       	ldi	r23, 0xFF	; 255
    25d2:	c5 01       	movw	r24, r10
    25d4:	0e 94 7d 15 	call	0x2afa	; 0x2afa <strnlen_P>
    25d8:	4c 01       	movw	r8, r24
    25da:	f3 2d       	mov	r31, r3
    25dc:	f0 68       	ori	r31, 0x80	; 128
    25de:	3f 2e       	mov	r3, r31
    25e0:	82 01       	movw	r16, r4
    25e2:	33 fc       	sbrc	r3, 3
    25e4:	1b c0       	rjmp	.+54     	; 0x261c <vfprintf+0x1c2>
    25e6:	82 2d       	mov	r24, r2
    25e8:	90 e0       	ldi	r25, 0x00	; 0
    25ea:	88 16       	cp	r8, r24
    25ec:	99 06       	cpc	r9, r25
    25ee:	b0 f4       	brcc	.+44     	; 0x261c <vfprintf+0x1c2>
    25f0:	b6 01       	movw	r22, r12
    25f2:	80 e2       	ldi	r24, 0x20	; 32
    25f4:	90 e0       	ldi	r25, 0x00	; 0
    25f6:	0e 94 93 15 	call	0x2b26	; 0x2b26 <fputc>
    25fa:	2a 94       	dec	r2
    25fc:	f4 cf       	rjmp	.-24     	; 0x25e6 <vfprintf+0x18c>
    25fe:	f5 01       	movw	r30, r10
    2600:	37 fc       	sbrc	r3, 7
    2602:	85 91       	lpm	r24, Z+
    2604:	37 fe       	sbrs	r3, 7
    2606:	81 91       	ld	r24, Z+
    2608:	5f 01       	movw	r10, r30
    260a:	b6 01       	movw	r22, r12
    260c:	90 e0       	ldi	r25, 0x00	; 0
    260e:	0e 94 93 15 	call	0x2b26	; 0x2b26 <fputc>
    2612:	21 10       	cpse	r2, r1
    2614:	2a 94       	dec	r2
    2616:	21 e0       	ldi	r18, 0x01	; 1
    2618:	82 1a       	sub	r8, r18
    261a:	91 08       	sbc	r9, r1
    261c:	81 14       	cp	r8, r1
    261e:	91 04       	cpc	r9, r1
    2620:	71 f7       	brne	.-36     	; 0x25fe <vfprintf+0x1a4>
    2622:	e8 c0       	rjmp	.+464    	; 0x27f4 <vfprintf+0x39a>
    2624:	84 36       	cpi	r24, 0x64	; 100
    2626:	11 f0       	breq	.+4      	; 0x262c <vfprintf+0x1d2>
    2628:	89 36       	cpi	r24, 0x69	; 105
    262a:	41 f5       	brne	.+80     	; 0x267c <vfprintf+0x222>
    262c:	f8 01       	movw	r30, r16
    262e:	37 fe       	sbrs	r3, 7
    2630:	07 c0       	rjmp	.+14     	; 0x2640 <vfprintf+0x1e6>
    2632:	60 81       	ld	r22, Z
    2634:	71 81       	ldd	r23, Z+1	; 0x01
    2636:	82 81       	ldd	r24, Z+2	; 0x02
    2638:	93 81       	ldd	r25, Z+3	; 0x03
    263a:	0c 5f       	subi	r16, 0xFC	; 252
    263c:	1f 4f       	sbci	r17, 0xFF	; 255
    263e:	08 c0       	rjmp	.+16     	; 0x2650 <vfprintf+0x1f6>
    2640:	60 81       	ld	r22, Z
    2642:	71 81       	ldd	r23, Z+1	; 0x01
    2644:	07 2e       	mov	r0, r23
    2646:	00 0c       	add	r0, r0
    2648:	88 0b       	sbc	r24, r24
    264a:	99 0b       	sbc	r25, r25
    264c:	0e 5f       	subi	r16, 0xFE	; 254
    264e:	1f 4f       	sbci	r17, 0xFF	; 255
    2650:	f3 2d       	mov	r31, r3
    2652:	ff 76       	andi	r31, 0x6F	; 111
    2654:	3f 2e       	mov	r3, r31
    2656:	97 ff       	sbrs	r25, 7
    2658:	09 c0       	rjmp	.+18     	; 0x266c <vfprintf+0x212>
    265a:	90 95       	com	r25
    265c:	80 95       	com	r24
    265e:	70 95       	com	r23
    2660:	61 95       	neg	r22
    2662:	7f 4f       	sbci	r23, 0xFF	; 255
    2664:	8f 4f       	sbci	r24, 0xFF	; 255
    2666:	9f 4f       	sbci	r25, 0xFF	; 255
    2668:	f0 68       	ori	r31, 0x80	; 128
    266a:	3f 2e       	mov	r3, r31
    266c:	2a e0       	ldi	r18, 0x0A	; 10
    266e:	30 e0       	ldi	r19, 0x00	; 0
    2670:	a3 01       	movw	r20, r6
    2672:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <__ultoa_invert>
    2676:	88 2e       	mov	r8, r24
    2678:	86 18       	sub	r8, r6
    267a:	45 c0       	rjmp	.+138    	; 0x2706 <vfprintf+0x2ac>
    267c:	85 37       	cpi	r24, 0x75	; 117
    267e:	31 f4       	brne	.+12     	; 0x268c <vfprintf+0x232>
    2680:	23 2d       	mov	r18, r3
    2682:	2f 7e       	andi	r18, 0xEF	; 239
    2684:	b2 2e       	mov	r11, r18
    2686:	2a e0       	ldi	r18, 0x0A	; 10
    2688:	30 e0       	ldi	r19, 0x00	; 0
    268a:	25 c0       	rjmp	.+74     	; 0x26d6 <vfprintf+0x27c>
    268c:	93 2d       	mov	r25, r3
    268e:	99 7f       	andi	r25, 0xF9	; 249
    2690:	b9 2e       	mov	r11, r25
    2692:	8f 36       	cpi	r24, 0x6F	; 111
    2694:	c1 f0       	breq	.+48     	; 0x26c6 <vfprintf+0x26c>
    2696:	18 f4       	brcc	.+6      	; 0x269e <vfprintf+0x244>
    2698:	88 35       	cpi	r24, 0x58	; 88
    269a:	79 f0       	breq	.+30     	; 0x26ba <vfprintf+0x260>
    269c:	b5 c0       	rjmp	.+362    	; 0x2808 <vfprintf+0x3ae>
    269e:	80 37       	cpi	r24, 0x70	; 112
    26a0:	19 f0       	breq	.+6      	; 0x26a8 <vfprintf+0x24e>
    26a2:	88 37       	cpi	r24, 0x78	; 120
    26a4:	21 f0       	breq	.+8      	; 0x26ae <vfprintf+0x254>
    26a6:	b0 c0       	rjmp	.+352    	; 0x2808 <vfprintf+0x3ae>
    26a8:	e9 2f       	mov	r30, r25
    26aa:	e0 61       	ori	r30, 0x10	; 16
    26ac:	be 2e       	mov	r11, r30
    26ae:	b4 fe       	sbrs	r11, 4
    26b0:	0d c0       	rjmp	.+26     	; 0x26cc <vfprintf+0x272>
    26b2:	fb 2d       	mov	r31, r11
    26b4:	f4 60       	ori	r31, 0x04	; 4
    26b6:	bf 2e       	mov	r11, r31
    26b8:	09 c0       	rjmp	.+18     	; 0x26cc <vfprintf+0x272>
    26ba:	34 fe       	sbrs	r3, 4
    26bc:	0a c0       	rjmp	.+20     	; 0x26d2 <vfprintf+0x278>
    26be:	29 2f       	mov	r18, r25
    26c0:	26 60       	ori	r18, 0x06	; 6
    26c2:	b2 2e       	mov	r11, r18
    26c4:	06 c0       	rjmp	.+12     	; 0x26d2 <vfprintf+0x278>
    26c6:	28 e0       	ldi	r18, 0x08	; 8
    26c8:	30 e0       	ldi	r19, 0x00	; 0
    26ca:	05 c0       	rjmp	.+10     	; 0x26d6 <vfprintf+0x27c>
    26cc:	20 e1       	ldi	r18, 0x10	; 16
    26ce:	30 e0       	ldi	r19, 0x00	; 0
    26d0:	02 c0       	rjmp	.+4      	; 0x26d6 <vfprintf+0x27c>
    26d2:	20 e1       	ldi	r18, 0x10	; 16
    26d4:	32 e0       	ldi	r19, 0x02	; 2
    26d6:	f8 01       	movw	r30, r16
    26d8:	b7 fe       	sbrs	r11, 7
    26da:	07 c0       	rjmp	.+14     	; 0x26ea <vfprintf+0x290>
    26dc:	60 81       	ld	r22, Z
    26de:	71 81       	ldd	r23, Z+1	; 0x01
    26e0:	82 81       	ldd	r24, Z+2	; 0x02
    26e2:	93 81       	ldd	r25, Z+3	; 0x03
    26e4:	0c 5f       	subi	r16, 0xFC	; 252
    26e6:	1f 4f       	sbci	r17, 0xFF	; 255
    26e8:	06 c0       	rjmp	.+12     	; 0x26f6 <vfprintf+0x29c>
    26ea:	60 81       	ld	r22, Z
    26ec:	71 81       	ldd	r23, Z+1	; 0x01
    26ee:	80 e0       	ldi	r24, 0x00	; 0
    26f0:	90 e0       	ldi	r25, 0x00	; 0
    26f2:	0e 5f       	subi	r16, 0xFE	; 254
    26f4:	1f 4f       	sbci	r17, 0xFF	; 255
    26f6:	a3 01       	movw	r20, r6
    26f8:	0e 94 cf 15 	call	0x2b9e	; 0x2b9e <__ultoa_invert>
    26fc:	88 2e       	mov	r8, r24
    26fe:	86 18       	sub	r8, r6
    2700:	fb 2d       	mov	r31, r11
    2702:	ff 77       	andi	r31, 0x7F	; 127
    2704:	3f 2e       	mov	r3, r31
    2706:	36 fe       	sbrs	r3, 6
    2708:	0d c0       	rjmp	.+26     	; 0x2724 <vfprintf+0x2ca>
    270a:	23 2d       	mov	r18, r3
    270c:	2e 7f       	andi	r18, 0xFE	; 254
    270e:	a2 2e       	mov	r10, r18
    2710:	89 14       	cp	r8, r9
    2712:	58 f4       	brcc	.+22     	; 0x272a <vfprintf+0x2d0>
    2714:	34 fe       	sbrs	r3, 4
    2716:	0b c0       	rjmp	.+22     	; 0x272e <vfprintf+0x2d4>
    2718:	32 fc       	sbrc	r3, 2
    271a:	09 c0       	rjmp	.+18     	; 0x272e <vfprintf+0x2d4>
    271c:	83 2d       	mov	r24, r3
    271e:	8e 7e       	andi	r24, 0xEE	; 238
    2720:	a8 2e       	mov	r10, r24
    2722:	05 c0       	rjmp	.+10     	; 0x272e <vfprintf+0x2d4>
    2724:	b8 2c       	mov	r11, r8
    2726:	a3 2c       	mov	r10, r3
    2728:	03 c0       	rjmp	.+6      	; 0x2730 <vfprintf+0x2d6>
    272a:	b8 2c       	mov	r11, r8
    272c:	01 c0       	rjmp	.+2      	; 0x2730 <vfprintf+0x2d6>
    272e:	b9 2c       	mov	r11, r9
    2730:	a4 fe       	sbrs	r10, 4
    2732:	0f c0       	rjmp	.+30     	; 0x2752 <vfprintf+0x2f8>
    2734:	fe 01       	movw	r30, r28
    2736:	e8 0d       	add	r30, r8
    2738:	f1 1d       	adc	r31, r1
    273a:	80 81       	ld	r24, Z
    273c:	80 33       	cpi	r24, 0x30	; 48
    273e:	21 f4       	brne	.+8      	; 0x2748 <vfprintf+0x2ee>
    2740:	9a 2d       	mov	r25, r10
    2742:	99 7e       	andi	r25, 0xE9	; 233
    2744:	a9 2e       	mov	r10, r25
    2746:	09 c0       	rjmp	.+18     	; 0x275a <vfprintf+0x300>
    2748:	a2 fe       	sbrs	r10, 2
    274a:	06 c0       	rjmp	.+12     	; 0x2758 <vfprintf+0x2fe>
    274c:	b3 94       	inc	r11
    274e:	b3 94       	inc	r11
    2750:	04 c0       	rjmp	.+8      	; 0x275a <vfprintf+0x300>
    2752:	8a 2d       	mov	r24, r10
    2754:	86 78       	andi	r24, 0x86	; 134
    2756:	09 f0       	breq	.+2      	; 0x275a <vfprintf+0x300>
    2758:	b3 94       	inc	r11
    275a:	a3 fc       	sbrc	r10, 3
    275c:	11 c0       	rjmp	.+34     	; 0x2780 <vfprintf+0x326>
    275e:	a0 fe       	sbrs	r10, 0
    2760:	06 c0       	rjmp	.+12     	; 0x276e <vfprintf+0x314>
    2762:	b2 14       	cp	r11, r2
    2764:	88 f4       	brcc	.+34     	; 0x2788 <vfprintf+0x32e>
    2766:	28 0c       	add	r2, r8
    2768:	92 2c       	mov	r9, r2
    276a:	9b 18       	sub	r9, r11
    276c:	0e c0       	rjmp	.+28     	; 0x278a <vfprintf+0x330>
    276e:	b2 14       	cp	r11, r2
    2770:	60 f4       	brcc	.+24     	; 0x278a <vfprintf+0x330>
    2772:	b6 01       	movw	r22, r12
    2774:	80 e2       	ldi	r24, 0x20	; 32
    2776:	90 e0       	ldi	r25, 0x00	; 0
    2778:	0e 94 93 15 	call	0x2b26	; 0x2b26 <fputc>
    277c:	b3 94       	inc	r11
    277e:	f7 cf       	rjmp	.-18     	; 0x276e <vfprintf+0x314>
    2780:	b2 14       	cp	r11, r2
    2782:	18 f4       	brcc	.+6      	; 0x278a <vfprintf+0x330>
    2784:	2b 18       	sub	r2, r11
    2786:	02 c0       	rjmp	.+4      	; 0x278c <vfprintf+0x332>
    2788:	98 2c       	mov	r9, r8
    278a:	21 2c       	mov	r2, r1
    278c:	a4 fe       	sbrs	r10, 4
    278e:	10 c0       	rjmp	.+32     	; 0x27b0 <vfprintf+0x356>
    2790:	b6 01       	movw	r22, r12
    2792:	80 e3       	ldi	r24, 0x30	; 48
    2794:	90 e0       	ldi	r25, 0x00	; 0
    2796:	0e 94 93 15 	call	0x2b26	; 0x2b26 <fputc>
    279a:	a2 fe       	sbrs	r10, 2
    279c:	17 c0       	rjmp	.+46     	; 0x27cc <vfprintf+0x372>
    279e:	a1 fc       	sbrc	r10, 1
    27a0:	03 c0       	rjmp	.+6      	; 0x27a8 <vfprintf+0x34e>
    27a2:	88 e7       	ldi	r24, 0x78	; 120
    27a4:	90 e0       	ldi	r25, 0x00	; 0
    27a6:	02 c0       	rjmp	.+4      	; 0x27ac <vfprintf+0x352>
    27a8:	88 e5       	ldi	r24, 0x58	; 88
    27aa:	90 e0       	ldi	r25, 0x00	; 0
    27ac:	b6 01       	movw	r22, r12
    27ae:	0c c0       	rjmp	.+24     	; 0x27c8 <vfprintf+0x36e>
    27b0:	8a 2d       	mov	r24, r10
    27b2:	86 78       	andi	r24, 0x86	; 134
    27b4:	59 f0       	breq	.+22     	; 0x27cc <vfprintf+0x372>
    27b6:	a1 fe       	sbrs	r10, 1
    27b8:	02 c0       	rjmp	.+4      	; 0x27be <vfprintf+0x364>
    27ba:	8b e2       	ldi	r24, 0x2B	; 43
    27bc:	01 c0       	rjmp	.+2      	; 0x27c0 <vfprintf+0x366>
    27be:	80 e2       	ldi	r24, 0x20	; 32
    27c0:	a7 fc       	sbrc	r10, 7
    27c2:	8d e2       	ldi	r24, 0x2D	; 45
    27c4:	b6 01       	movw	r22, r12
    27c6:	90 e0       	ldi	r25, 0x00	; 0
    27c8:	0e 94 93 15 	call	0x2b26	; 0x2b26 <fputc>
    27cc:	89 14       	cp	r8, r9
    27ce:	38 f4       	brcc	.+14     	; 0x27de <vfprintf+0x384>
    27d0:	b6 01       	movw	r22, r12
    27d2:	80 e3       	ldi	r24, 0x30	; 48
    27d4:	90 e0       	ldi	r25, 0x00	; 0
    27d6:	0e 94 93 15 	call	0x2b26	; 0x2b26 <fputc>
    27da:	9a 94       	dec	r9
    27dc:	f7 cf       	rjmp	.-18     	; 0x27cc <vfprintf+0x372>
    27de:	8a 94       	dec	r8
    27e0:	f3 01       	movw	r30, r6
    27e2:	e8 0d       	add	r30, r8
    27e4:	f1 1d       	adc	r31, r1
    27e6:	80 81       	ld	r24, Z
    27e8:	b6 01       	movw	r22, r12
    27ea:	90 e0       	ldi	r25, 0x00	; 0
    27ec:	0e 94 93 15 	call	0x2b26	; 0x2b26 <fputc>
    27f0:	81 10       	cpse	r8, r1
    27f2:	f5 cf       	rjmp	.-22     	; 0x27de <vfprintf+0x384>
    27f4:	22 20       	and	r2, r2
    27f6:	09 f4       	brne	.+2      	; 0x27fa <vfprintf+0x3a0>
    27f8:	42 ce       	rjmp	.-892    	; 0x247e <vfprintf+0x24>
    27fa:	b6 01       	movw	r22, r12
    27fc:	80 e2       	ldi	r24, 0x20	; 32
    27fe:	90 e0       	ldi	r25, 0x00	; 0
    2800:	0e 94 93 15 	call	0x2b26	; 0x2b26 <fputc>
    2804:	2a 94       	dec	r2
    2806:	f6 cf       	rjmp	.-20     	; 0x27f4 <vfprintf+0x39a>
    2808:	f6 01       	movw	r30, r12
    280a:	86 81       	ldd	r24, Z+6	; 0x06
    280c:	97 81       	ldd	r25, Z+7	; 0x07
    280e:	02 c0       	rjmp	.+4      	; 0x2814 <vfprintf+0x3ba>
    2810:	8f ef       	ldi	r24, 0xFF	; 255
    2812:	9f ef       	ldi	r25, 0xFF	; 255
    2814:	2b 96       	adiw	r28, 0x0b	; 11
    2816:	e2 e1       	ldi	r30, 0x12	; 18
    2818:	0c 94 57 16 	jmp	0x2cae	; 0x2cae <__epilogue_restores__>

0000281c <strtod>:
    281c:	a0 e0       	ldi	r26, 0x00	; 0
    281e:	b0 e0       	ldi	r27, 0x00	; 0
    2820:	e4 e1       	ldi	r30, 0x14	; 20
    2822:	f4 e1       	ldi	r31, 0x14	; 20
    2824:	0c 94 41 16 	jmp	0x2c82	; 0x2c82 <__prologue_saves__+0xc>
    2828:	ec 01       	movw	r28, r24
    282a:	6b 01       	movw	r12, r22
    282c:	61 15       	cp	r22, r1
    282e:	71 05       	cpc	r23, r1
    2830:	19 f0       	breq	.+6      	; 0x2838 <strtod+0x1c>
    2832:	fb 01       	movw	r30, r22
    2834:	91 83       	std	Z+1, r25	; 0x01
    2836:	80 83       	st	Z, r24
    2838:	7e 01       	movw	r14, r28
    283a:	ff ef       	ldi	r31, 0xFF	; 255
    283c:	ef 1a       	sub	r14, r31
    283e:	ff 0a       	sbc	r15, r31
    2840:	08 81       	ld	r16, Y
    2842:	80 2f       	mov	r24, r16
    2844:	90 e0       	ldi	r25, 0x00	; 0
    2846:	0e 94 5c 15 	call	0x2ab8	; 0x2ab8 <isspace>
    284a:	89 2b       	or	r24, r25
    284c:	11 f0       	breq	.+4      	; 0x2852 <strtod+0x36>
    284e:	e7 01       	movw	r28, r14
    2850:	f3 cf       	rjmp	.-26     	; 0x2838 <strtod+0x1c>
    2852:	0d 32       	cpi	r16, 0x2D	; 45
    2854:	39 f4       	brne	.+14     	; 0x2864 <strtod+0x48>
    2856:	7e 01       	movw	r14, r28
    2858:	82 e0       	ldi	r24, 0x02	; 2
    285a:	e8 0e       	add	r14, r24
    285c:	f1 1c       	adc	r15, r1
    285e:	09 81       	ldd	r16, Y+1	; 0x01
    2860:	11 e0       	ldi	r17, 0x01	; 1
    2862:	08 c0       	rjmp	.+16     	; 0x2874 <strtod+0x58>
    2864:	0b 32       	cpi	r16, 0x2B	; 43
    2866:	29 f4       	brne	.+10     	; 0x2872 <strtod+0x56>
    2868:	7e 01       	movw	r14, r28
    286a:	92 e0       	ldi	r25, 0x02	; 2
    286c:	e9 0e       	add	r14, r25
    286e:	f1 1c       	adc	r15, r1
    2870:	09 81       	ldd	r16, Y+1	; 0x01
    2872:	10 e0       	ldi	r17, 0x00	; 0
    2874:	e7 01       	movw	r28, r14
    2876:	21 97       	sbiw	r28, 0x01	; 1
    2878:	43 e0       	ldi	r20, 0x03	; 3
    287a:	50 e0       	ldi	r21, 0x00	; 0
    287c:	68 ea       	ldi	r22, 0xA8	; 168
    287e:	70 e0       	ldi	r23, 0x00	; 0
    2880:	ce 01       	movw	r24, r28
    2882:	0e 94 65 15 	call	0x2aca	; 0x2aca <strncasecmp_P>
    2886:	89 2b       	or	r24, r25
    2888:	c1 f4       	brne	.+48     	; 0x28ba <strtod+0x9e>
    288a:	23 96       	adiw	r28, 0x03	; 3
    288c:	45 e0       	ldi	r20, 0x05	; 5
    288e:	50 e0       	ldi	r21, 0x00	; 0
    2890:	63 ea       	ldi	r22, 0xA3	; 163
    2892:	70 e0       	ldi	r23, 0x00	; 0
    2894:	ce 01       	movw	r24, r28
    2896:	0e 94 65 15 	call	0x2aca	; 0x2aca <strncasecmp_P>
    289a:	89 2b       	or	r24, r25
    289c:	09 f4       	brne	.+2      	; 0x28a0 <strtod+0x84>
    289e:	25 96       	adiw	r28, 0x05	; 5
    28a0:	c1 14       	cp	r12, r1
    28a2:	d1 04       	cpc	r13, r1
    28a4:	19 f0       	breq	.+6      	; 0x28ac <strtod+0x90>
    28a6:	f6 01       	movw	r30, r12
    28a8:	d1 83       	std	Z+1, r29	; 0x01
    28aa:	c0 83       	st	Z, r28
    28ac:	11 11       	cpse	r17, r1
    28ae:	f6 c0       	rjmp	.+492    	; 0x2a9c <strtod+0x280>
    28b0:	60 e0       	ldi	r22, 0x00	; 0
    28b2:	70 e0       	ldi	r23, 0x00	; 0
    28b4:	80 e8       	ldi	r24, 0x80	; 128
    28b6:	9f e7       	ldi	r25, 0x7F	; 127
    28b8:	fa c0       	rjmp	.+500    	; 0x2aae <strtod+0x292>
    28ba:	43 e0       	ldi	r20, 0x03	; 3
    28bc:	50 e0       	ldi	r21, 0x00	; 0
    28be:	60 ea       	ldi	r22, 0xA0	; 160
    28c0:	70 e0       	ldi	r23, 0x00	; 0
    28c2:	ce 01       	movw	r24, r28
    28c4:	0e 94 65 15 	call	0x2aca	; 0x2aca <strncasecmp_P>
    28c8:	89 2b       	or	r24, r25
    28ca:	59 f4       	brne	.+22     	; 0x28e2 <strtod+0xc6>
    28cc:	c1 14       	cp	r12, r1
    28ce:	d1 04       	cpc	r13, r1
    28d0:	09 f4       	brne	.+2      	; 0x28d4 <strtod+0xb8>
    28d2:	e9 c0       	rjmp	.+466    	; 0x2aa6 <strtod+0x28a>
    28d4:	f2 e0       	ldi	r31, 0x02	; 2
    28d6:	ef 0e       	add	r14, r31
    28d8:	f1 1c       	adc	r15, r1
    28da:	f6 01       	movw	r30, r12
    28dc:	f1 82       	std	Z+1, r15	; 0x01
    28de:	e0 82       	st	Z, r14
    28e0:	e2 c0       	rjmp	.+452    	; 0x2aa6 <strtod+0x28a>
    28e2:	20 e0       	ldi	r18, 0x00	; 0
    28e4:	30 e0       	ldi	r19, 0x00	; 0
    28e6:	a9 01       	movw	r20, r18
    28e8:	c0 e0       	ldi	r28, 0x00	; 0
    28ea:	d0 e0       	ldi	r29, 0x00	; 0
    28ec:	f7 01       	movw	r30, r14
    28ee:	80 ed       	ldi	r24, 0xD0	; 208
    28f0:	a8 2e       	mov	r10, r24
    28f2:	a0 0e       	add	r10, r16
    28f4:	89 e0       	ldi	r24, 0x09	; 9
    28f6:	8a 15       	cp	r24, r10
    28f8:	30 f1       	brcs	.+76     	; 0x2946 <strtod+0x12a>
    28fa:	91 2f       	mov	r25, r17
    28fc:	92 60       	ori	r25, 0x02	; 2
    28fe:	b9 2e       	mov	r11, r25
    2900:	81 2f       	mov	r24, r17
    2902:	88 70       	andi	r24, 0x08	; 8
    2904:	12 ff       	sbrs	r17, 2
    2906:	04 c0       	rjmp	.+8      	; 0x2910 <strtod+0xf4>
    2908:	81 11       	cpse	r24, r1
    290a:	24 c0       	rjmp	.+72     	; 0x2954 <strtod+0x138>
    290c:	21 96       	adiw	r28, 0x01	; 1
    290e:	22 c0       	rjmp	.+68     	; 0x2954 <strtod+0x138>
    2910:	81 11       	cpse	r24, r1
    2912:	21 97       	sbiw	r28, 0x01	; 1
    2914:	a5 e0       	ldi	r26, 0x05	; 5
    2916:	b0 e0       	ldi	r27, 0x00	; 0
    2918:	0e 94 30 16 	call	0x2c60	; 0x2c60 <__muluhisi3>
    291c:	dc 01       	movw	r26, r24
    291e:	cb 01       	movw	r24, r22
    2920:	88 0f       	add	r24, r24
    2922:	99 1f       	adc	r25, r25
    2924:	aa 1f       	adc	r26, r26
    2926:	bb 1f       	adc	r27, r27
    2928:	9c 01       	movw	r18, r24
    292a:	ad 01       	movw	r20, r26
    292c:	2a 0d       	add	r18, r10
    292e:	31 1d       	adc	r19, r1
    2930:	41 1d       	adc	r20, r1
    2932:	51 1d       	adc	r21, r1
    2934:	28 39       	cpi	r18, 0x98	; 152
    2936:	89 e9       	ldi	r24, 0x99	; 153
    2938:	38 07       	cpc	r19, r24
    293a:	48 07       	cpc	r20, r24
    293c:	89 e1       	ldi	r24, 0x19	; 25
    293e:	58 07       	cpc	r21, r24
    2940:	48 f0       	brcs	.+18     	; 0x2954 <strtod+0x138>
    2942:	16 60       	ori	r17, 0x06	; 6
    2944:	06 c0       	rjmp	.+12     	; 0x2952 <strtod+0x136>
    2946:	9e ef       	ldi	r25, 0xFE	; 254
    2948:	a9 12       	cpse	r10, r25
    294a:	0a c0       	rjmp	.+20     	; 0x2960 <strtod+0x144>
    294c:	13 fd       	sbrc	r17, 3
    294e:	40 c0       	rjmp	.+128    	; 0x29d0 <strtod+0x1b4>
    2950:	18 60       	ori	r17, 0x08	; 8
    2952:	b1 2e       	mov	r11, r17
    2954:	8f ef       	ldi	r24, 0xFF	; 255
    2956:	e8 1a       	sub	r14, r24
    2958:	f8 0a       	sbc	r15, r24
    295a:	00 81       	ld	r16, Z
    295c:	1b 2d       	mov	r17, r11
    295e:	c6 cf       	rjmp	.-116    	; 0x28ec <strtod+0xd0>
    2960:	80 2f       	mov	r24, r16
    2962:	8f 7d       	andi	r24, 0xDF	; 223
    2964:	85 34       	cpi	r24, 0x45	; 69
    2966:	a1 f5       	brne	.+104    	; 0x29d0 <strtod+0x1b4>
    2968:	80 81       	ld	r24, Z
    296a:	8d 32       	cpi	r24, 0x2D	; 45
    296c:	11 f4       	brne	.+4      	; 0x2972 <strtod+0x156>
    296e:	10 61       	ori	r17, 0x10	; 16
    2970:	06 c0       	rjmp	.+12     	; 0x297e <strtod+0x162>
    2972:	8b 32       	cpi	r24, 0x2B	; 43
    2974:	21 f0       	breq	.+8      	; 0x297e <strtod+0x162>
    2976:	31 96       	adiw	r30, 0x01	; 1
    2978:	61 e0       	ldi	r22, 0x01	; 1
    297a:	70 e0       	ldi	r23, 0x00	; 0
    297c:	04 c0       	rjmp	.+8      	; 0x2986 <strtod+0x16a>
    297e:	81 81       	ldd	r24, Z+1	; 0x01
    2980:	32 96       	adiw	r30, 0x02	; 2
    2982:	62 e0       	ldi	r22, 0x02	; 2
    2984:	70 e0       	ldi	r23, 0x00	; 0
    2986:	80 53       	subi	r24, 0x30	; 48
    2988:	8a 30       	cpi	r24, 0x0A	; 10
    298a:	18 f0       	brcs	.+6      	; 0x2992 <strtod+0x176>
    298c:	e6 1b       	sub	r30, r22
    298e:	f7 0b       	sbc	r31, r23
    2990:	1f c0       	rjmp	.+62     	; 0x29d0 <strtod+0x1b4>
    2992:	60 e0       	ldi	r22, 0x00	; 0
    2994:	70 e0       	ldi	r23, 0x00	; 0
    2996:	60 38       	cpi	r22, 0x80	; 128
    2998:	9c e0       	ldi	r25, 0x0C	; 12
    299a:	79 07       	cpc	r23, r25
    299c:	5c f4       	brge	.+22     	; 0x29b4 <strtod+0x198>
    299e:	db 01       	movw	r26, r22
    29a0:	aa 0f       	add	r26, r26
    29a2:	bb 1f       	adc	r27, r27
    29a4:	aa 0f       	add	r26, r26
    29a6:	bb 1f       	adc	r27, r27
    29a8:	6a 0f       	add	r22, r26
    29aa:	7b 1f       	adc	r23, r27
    29ac:	66 0f       	add	r22, r22
    29ae:	77 1f       	adc	r23, r23
    29b0:	68 0f       	add	r22, r24
    29b2:	71 1d       	adc	r23, r1
    29b4:	31 96       	adiw	r30, 0x01	; 1
    29b6:	df 01       	movw	r26, r30
    29b8:	11 97       	sbiw	r26, 0x01	; 1
    29ba:	8c 91       	ld	r24, X
    29bc:	80 53       	subi	r24, 0x30	; 48
    29be:	8a 30       	cpi	r24, 0x0A	; 10
    29c0:	50 f3       	brcs	.-44     	; 0x2996 <strtod+0x17a>
    29c2:	14 ff       	sbrs	r17, 4
    29c4:	03 c0       	rjmp	.+6      	; 0x29cc <strtod+0x1b0>
    29c6:	71 95       	neg	r23
    29c8:	61 95       	neg	r22
    29ca:	71 09       	sbc	r23, r1
    29cc:	c6 0f       	add	r28, r22
    29ce:	d7 1f       	adc	r29, r23
    29d0:	11 ff       	sbrs	r17, 1
    29d2:	08 c0       	rjmp	.+16     	; 0x29e4 <strtod+0x1c8>
    29d4:	c1 14       	cp	r12, r1
    29d6:	d1 04       	cpc	r13, r1
    29d8:	29 f0       	breq	.+10     	; 0x29e4 <strtod+0x1c8>
    29da:	cf 01       	movw	r24, r30
    29dc:	01 97       	sbiw	r24, 0x01	; 1
    29de:	f6 01       	movw	r30, r12
    29e0:	91 83       	std	Z+1, r25	; 0x01
    29e2:	80 83       	st	Z, r24
    29e4:	ca 01       	movw	r24, r20
    29e6:	b9 01       	movw	r22, r18
    29e8:	0e 94 70 0e 	call	0x1ce0	; 0x1ce0 <__floatunsisf>
    29ec:	21 2f       	mov	r18, r17
    29ee:	23 70       	andi	r18, 0x03	; 3
    29f0:	23 30       	cpi	r18, 0x03	; 3
    29f2:	19 f0       	breq	.+6      	; 0x29fa <strtod+0x1de>
    29f4:	4b 01       	movw	r8, r22
    29f6:	5c 01       	movw	r10, r24
    29f8:	06 c0       	rjmp	.+12     	; 0x2a06 <strtod+0x1ea>
    29fa:	4b 01       	movw	r8, r22
    29fc:	5c 01       	movw	r10, r24
    29fe:	b7 fa       	bst	r11, 7
    2a00:	b0 94       	com	r11
    2a02:	b7 f8       	bld	r11, 7
    2a04:	b0 94       	com	r11
    2a06:	20 e0       	ldi	r18, 0x00	; 0
    2a08:	30 e0       	ldi	r19, 0x00	; 0
    2a0a:	a9 01       	movw	r20, r18
    2a0c:	c5 01       	movw	r24, r10
    2a0e:	b4 01       	movw	r22, r8
    2a10:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
    2a14:	88 23       	and	r24, r24
    2a16:	09 f4       	brne	.+2      	; 0x2a1a <strtod+0x1fe>
    2a18:	3e c0       	rjmp	.+124    	; 0x2a96 <strtod+0x27a>
    2a1a:	d7 ff       	sbrs	r29, 7
    2a1c:	06 c0       	rjmp	.+12     	; 0x2a2a <strtod+0x20e>
    2a1e:	d1 95       	neg	r29
    2a20:	c1 95       	neg	r28
    2a22:	d1 09       	sbc	r29, r1
    2a24:	0f eb       	ldi	r16, 0xBF	; 191
    2a26:	10 e0       	ldi	r17, 0x00	; 0
    2a28:	02 c0       	rjmp	.+4      	; 0x2a2e <strtod+0x212>
    2a2a:	07 ed       	ldi	r16, 0xD7	; 215
    2a2c:	10 e0       	ldi	r17, 0x00	; 0
    2a2e:	68 01       	movw	r12, r16
    2a30:	f8 e1       	ldi	r31, 0x18	; 24
    2a32:	cf 1a       	sub	r12, r31
    2a34:	d1 08       	sbc	r13, r1
    2a36:	90 e2       	ldi	r25, 0x20	; 32
    2a38:	e9 2e       	mov	r14, r25
    2a3a:	f1 2c       	mov	r15, r1
    2a3c:	ce 15       	cp	r28, r14
    2a3e:	df 05       	cpc	r29, r15
    2a40:	74 f0       	brlt	.+28     	; 0x2a5e <strtod+0x242>
    2a42:	f8 01       	movw	r30, r16
    2a44:	25 91       	lpm	r18, Z+
    2a46:	35 91       	lpm	r19, Z+
    2a48:	45 91       	lpm	r20, Z+
    2a4a:	54 91       	lpm	r21, Z
    2a4c:	c5 01       	movw	r24, r10
    2a4e:	b4 01       	movw	r22, r8
    2a50:	0e 94 95 0f 	call	0x1f2a	; 0x1f2a <__mulsf3>
    2a54:	4b 01       	movw	r8, r22
    2a56:	5c 01       	movw	r10, r24
    2a58:	ce 19       	sub	r28, r14
    2a5a:	df 09       	sbc	r29, r15
    2a5c:	ef cf       	rjmp	.-34     	; 0x2a3c <strtod+0x220>
    2a5e:	04 50       	subi	r16, 0x04	; 4
    2a60:	11 09       	sbc	r17, r1
    2a62:	f5 94       	asr	r15
    2a64:	e7 94       	ror	r14
    2a66:	0c 15       	cp	r16, r12
    2a68:	1d 05       	cpc	r17, r13
    2a6a:	41 f7       	brne	.-48     	; 0x2a3c <strtod+0x220>
    2a6c:	8a 2d       	mov	r24, r10
    2a6e:	88 0f       	add	r24, r24
    2a70:	8b 2d       	mov	r24, r11
    2a72:	88 1f       	adc	r24, r24
    2a74:	8f 3f       	cpi	r24, 0xFF	; 255
    2a76:	49 f0       	breq	.+18     	; 0x2a8a <strtod+0x26e>
    2a78:	20 e0       	ldi	r18, 0x00	; 0
    2a7a:	30 e0       	ldi	r19, 0x00	; 0
    2a7c:	a9 01       	movw	r20, r18
    2a7e:	c5 01       	movw	r24, r10
    2a80:	b4 01       	movw	r22, r8
    2a82:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <__cmpsf2>
    2a86:	81 11       	cpse	r24, r1
    2a88:	06 c0       	rjmp	.+12     	; 0x2a96 <strtod+0x27a>
    2a8a:	82 e2       	ldi	r24, 0x22	; 34
    2a8c:	90 e0       	ldi	r25, 0x00	; 0
    2a8e:	90 93 db 00 	sts	0x00DB, r25	; 0x8000db <errno+0x1>
    2a92:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <errno>
    2a96:	c5 01       	movw	r24, r10
    2a98:	b4 01       	movw	r22, r8
    2a9a:	09 c0       	rjmp	.+18     	; 0x2aae <strtod+0x292>
    2a9c:	60 e0       	ldi	r22, 0x00	; 0
    2a9e:	70 e0       	ldi	r23, 0x00	; 0
    2aa0:	80 e8       	ldi	r24, 0x80	; 128
    2aa2:	9f ef       	ldi	r25, 0xFF	; 255
    2aa4:	04 c0       	rjmp	.+8      	; 0x2aae <strtod+0x292>
    2aa6:	60 e0       	ldi	r22, 0x00	; 0
    2aa8:	70 e0       	ldi	r23, 0x00	; 0
    2aaa:	80 ec       	ldi	r24, 0xC0	; 192
    2aac:	9f e7       	ldi	r25, 0x7F	; 127
    2aae:	cd b7       	in	r28, 0x3d	; 61
    2ab0:	de b7       	in	r29, 0x3e	; 62
    2ab2:	ec e0       	ldi	r30, 0x0C	; 12
    2ab4:	0c 94 5d 16 	jmp	0x2cba	; 0x2cba <__epilogue_restores__+0xc>

00002ab8 <isspace>:
    2ab8:	91 11       	cpse	r25, r1
    2aba:	0c 94 2d 16 	jmp	0x2c5a	; 0x2c5a <__ctype_isfalse>
    2abe:	80 32       	cpi	r24, 0x20	; 32
    2ac0:	19 f0       	breq	.+6      	; 0x2ac8 <isspace+0x10>
    2ac2:	89 50       	subi	r24, 0x09	; 9
    2ac4:	85 50       	subi	r24, 0x05	; 5
    2ac6:	c8 f7       	brcc	.-14     	; 0x2aba <isspace+0x2>
    2ac8:	08 95       	ret

00002aca <strncasecmp_P>:
    2aca:	fb 01       	movw	r30, r22
    2acc:	dc 01       	movw	r26, r24
    2ace:	41 50       	subi	r20, 0x01	; 1
    2ad0:	50 40       	sbci	r21, 0x00	; 0
    2ad2:	88 f0       	brcs	.+34     	; 0x2af6 <strncasecmp_P+0x2c>
    2ad4:	8d 91       	ld	r24, X+
    2ad6:	81 34       	cpi	r24, 0x41	; 65
    2ad8:	1c f0       	brlt	.+6      	; 0x2ae0 <strncasecmp_P+0x16>
    2ada:	8b 35       	cpi	r24, 0x5B	; 91
    2adc:	0c f4       	brge	.+2      	; 0x2ae0 <strncasecmp_P+0x16>
    2ade:	80 5e       	subi	r24, 0xE0	; 224
    2ae0:	65 91       	lpm	r22, Z+
    2ae2:	61 34       	cpi	r22, 0x41	; 65
    2ae4:	1c f0       	brlt	.+6      	; 0x2aec <strncasecmp_P+0x22>
    2ae6:	6b 35       	cpi	r22, 0x5B	; 91
    2ae8:	0c f4       	brge	.+2      	; 0x2aec <strncasecmp_P+0x22>
    2aea:	60 5e       	subi	r22, 0xE0	; 224
    2aec:	86 1b       	sub	r24, r22
    2aee:	61 11       	cpse	r22, r1
    2af0:	71 f3       	breq	.-36     	; 0x2ace <strncasecmp_P+0x4>
    2af2:	99 0b       	sbc	r25, r25
    2af4:	08 95       	ret
    2af6:	88 1b       	sub	r24, r24
    2af8:	fc cf       	rjmp	.-8      	; 0x2af2 <strncasecmp_P+0x28>

00002afa <strnlen_P>:
    2afa:	fc 01       	movw	r30, r24
    2afc:	05 90       	lpm	r0, Z+
    2afe:	61 50       	subi	r22, 0x01	; 1
    2b00:	70 40       	sbci	r23, 0x00	; 0
    2b02:	01 10       	cpse	r0, r1
    2b04:	d8 f7       	brcc	.-10     	; 0x2afc <strnlen_P+0x2>
    2b06:	80 95       	com	r24
    2b08:	90 95       	com	r25
    2b0a:	8e 0f       	add	r24, r30
    2b0c:	9f 1f       	adc	r25, r31
    2b0e:	08 95       	ret

00002b10 <strnlen>:
    2b10:	fc 01       	movw	r30, r24
    2b12:	61 50       	subi	r22, 0x01	; 1
    2b14:	70 40       	sbci	r23, 0x00	; 0
    2b16:	01 90       	ld	r0, Z+
    2b18:	01 10       	cpse	r0, r1
    2b1a:	d8 f7       	brcc	.-10     	; 0x2b12 <strnlen+0x2>
    2b1c:	80 95       	com	r24
    2b1e:	90 95       	com	r25
    2b20:	8e 0f       	add	r24, r30
    2b22:	9f 1f       	adc	r25, r31
    2b24:	08 95       	ret

00002b26 <fputc>:
    2b26:	0f 93       	push	r16
    2b28:	1f 93       	push	r17
    2b2a:	cf 93       	push	r28
    2b2c:	df 93       	push	r29
    2b2e:	fb 01       	movw	r30, r22
    2b30:	23 81       	ldd	r18, Z+3	; 0x03
    2b32:	21 fd       	sbrc	r18, 1
    2b34:	03 c0       	rjmp	.+6      	; 0x2b3c <fputc+0x16>
    2b36:	8f ef       	ldi	r24, 0xFF	; 255
    2b38:	9f ef       	ldi	r25, 0xFF	; 255
    2b3a:	2c c0       	rjmp	.+88     	; 0x2b94 <fputc+0x6e>
    2b3c:	22 ff       	sbrs	r18, 2
    2b3e:	16 c0       	rjmp	.+44     	; 0x2b6c <fputc+0x46>
    2b40:	46 81       	ldd	r20, Z+6	; 0x06
    2b42:	57 81       	ldd	r21, Z+7	; 0x07
    2b44:	24 81       	ldd	r18, Z+4	; 0x04
    2b46:	35 81       	ldd	r19, Z+5	; 0x05
    2b48:	42 17       	cp	r20, r18
    2b4a:	53 07       	cpc	r21, r19
    2b4c:	44 f4       	brge	.+16     	; 0x2b5e <fputc+0x38>
    2b4e:	a0 81       	ld	r26, Z
    2b50:	b1 81       	ldd	r27, Z+1	; 0x01
    2b52:	9d 01       	movw	r18, r26
    2b54:	2f 5f       	subi	r18, 0xFF	; 255
    2b56:	3f 4f       	sbci	r19, 0xFF	; 255
    2b58:	31 83       	std	Z+1, r19	; 0x01
    2b5a:	20 83       	st	Z, r18
    2b5c:	8c 93       	st	X, r24
    2b5e:	26 81       	ldd	r18, Z+6	; 0x06
    2b60:	37 81       	ldd	r19, Z+7	; 0x07
    2b62:	2f 5f       	subi	r18, 0xFF	; 255
    2b64:	3f 4f       	sbci	r19, 0xFF	; 255
    2b66:	37 83       	std	Z+7, r19	; 0x07
    2b68:	26 83       	std	Z+6, r18	; 0x06
    2b6a:	14 c0       	rjmp	.+40     	; 0x2b94 <fputc+0x6e>
    2b6c:	8b 01       	movw	r16, r22
    2b6e:	ec 01       	movw	r28, r24
    2b70:	fb 01       	movw	r30, r22
    2b72:	00 84       	ldd	r0, Z+8	; 0x08
    2b74:	f1 85       	ldd	r31, Z+9	; 0x09
    2b76:	e0 2d       	mov	r30, r0
    2b78:	09 95       	icall
    2b7a:	89 2b       	or	r24, r25
    2b7c:	e1 f6       	brne	.-72     	; 0x2b36 <fputc+0x10>
    2b7e:	d8 01       	movw	r26, r16
    2b80:	16 96       	adiw	r26, 0x06	; 6
    2b82:	8d 91       	ld	r24, X+
    2b84:	9c 91       	ld	r25, X
    2b86:	17 97       	sbiw	r26, 0x07	; 7
    2b88:	01 96       	adiw	r24, 0x01	; 1
    2b8a:	17 96       	adiw	r26, 0x07	; 7
    2b8c:	9c 93       	st	X, r25
    2b8e:	8e 93       	st	-X, r24
    2b90:	16 97       	sbiw	r26, 0x06	; 6
    2b92:	ce 01       	movw	r24, r28
    2b94:	df 91       	pop	r29
    2b96:	cf 91       	pop	r28
    2b98:	1f 91       	pop	r17
    2b9a:	0f 91       	pop	r16
    2b9c:	08 95       	ret

00002b9e <__ultoa_invert>:
    2b9e:	fa 01       	movw	r30, r20
    2ba0:	aa 27       	eor	r26, r26
    2ba2:	28 30       	cpi	r18, 0x08	; 8
    2ba4:	51 f1       	breq	.+84     	; 0x2bfa <__ultoa_invert+0x5c>
    2ba6:	20 31       	cpi	r18, 0x10	; 16
    2ba8:	81 f1       	breq	.+96     	; 0x2c0a <__ultoa_invert+0x6c>
    2baa:	e8 94       	clt
    2bac:	6f 93       	push	r22
    2bae:	6e 7f       	andi	r22, 0xFE	; 254
    2bb0:	6e 5f       	subi	r22, 0xFE	; 254
    2bb2:	7f 4f       	sbci	r23, 0xFF	; 255
    2bb4:	8f 4f       	sbci	r24, 0xFF	; 255
    2bb6:	9f 4f       	sbci	r25, 0xFF	; 255
    2bb8:	af 4f       	sbci	r26, 0xFF	; 255
    2bba:	b1 e0       	ldi	r27, 0x01	; 1
    2bbc:	3e d0       	rcall	.+124    	; 0x2c3a <__ultoa_invert+0x9c>
    2bbe:	b4 e0       	ldi	r27, 0x04	; 4
    2bc0:	3c d0       	rcall	.+120    	; 0x2c3a <__ultoa_invert+0x9c>
    2bc2:	67 0f       	add	r22, r23
    2bc4:	78 1f       	adc	r23, r24
    2bc6:	89 1f       	adc	r24, r25
    2bc8:	9a 1f       	adc	r25, r26
    2bca:	a1 1d       	adc	r26, r1
    2bcc:	68 0f       	add	r22, r24
    2bce:	79 1f       	adc	r23, r25
    2bd0:	8a 1f       	adc	r24, r26
    2bd2:	91 1d       	adc	r25, r1
    2bd4:	a1 1d       	adc	r26, r1
    2bd6:	6a 0f       	add	r22, r26
    2bd8:	71 1d       	adc	r23, r1
    2bda:	81 1d       	adc	r24, r1
    2bdc:	91 1d       	adc	r25, r1
    2bde:	a1 1d       	adc	r26, r1
    2be0:	20 d0       	rcall	.+64     	; 0x2c22 <__ultoa_invert+0x84>
    2be2:	09 f4       	brne	.+2      	; 0x2be6 <__ultoa_invert+0x48>
    2be4:	68 94       	set
    2be6:	3f 91       	pop	r19
    2be8:	2a e0       	ldi	r18, 0x0A	; 10
    2bea:	26 9f       	mul	r18, r22
    2bec:	11 24       	eor	r1, r1
    2bee:	30 19       	sub	r19, r0
    2bf0:	30 5d       	subi	r19, 0xD0	; 208
    2bf2:	31 93       	st	Z+, r19
    2bf4:	de f6       	brtc	.-74     	; 0x2bac <__ultoa_invert+0xe>
    2bf6:	cf 01       	movw	r24, r30
    2bf8:	08 95       	ret
    2bfa:	46 2f       	mov	r20, r22
    2bfc:	47 70       	andi	r20, 0x07	; 7
    2bfe:	40 5d       	subi	r20, 0xD0	; 208
    2c00:	41 93       	st	Z+, r20
    2c02:	b3 e0       	ldi	r27, 0x03	; 3
    2c04:	0f d0       	rcall	.+30     	; 0x2c24 <__ultoa_invert+0x86>
    2c06:	c9 f7       	brne	.-14     	; 0x2bfa <__ultoa_invert+0x5c>
    2c08:	f6 cf       	rjmp	.-20     	; 0x2bf6 <__ultoa_invert+0x58>
    2c0a:	46 2f       	mov	r20, r22
    2c0c:	4f 70       	andi	r20, 0x0F	; 15
    2c0e:	40 5d       	subi	r20, 0xD0	; 208
    2c10:	4a 33       	cpi	r20, 0x3A	; 58
    2c12:	18 f0       	brcs	.+6      	; 0x2c1a <__ultoa_invert+0x7c>
    2c14:	49 5d       	subi	r20, 0xD9	; 217
    2c16:	31 fd       	sbrc	r19, 1
    2c18:	40 52       	subi	r20, 0x20	; 32
    2c1a:	41 93       	st	Z+, r20
    2c1c:	02 d0       	rcall	.+4      	; 0x2c22 <__ultoa_invert+0x84>
    2c1e:	a9 f7       	brne	.-22     	; 0x2c0a <__ultoa_invert+0x6c>
    2c20:	ea cf       	rjmp	.-44     	; 0x2bf6 <__ultoa_invert+0x58>
    2c22:	b4 e0       	ldi	r27, 0x04	; 4
    2c24:	a6 95       	lsr	r26
    2c26:	97 95       	ror	r25
    2c28:	87 95       	ror	r24
    2c2a:	77 95       	ror	r23
    2c2c:	67 95       	ror	r22
    2c2e:	ba 95       	dec	r27
    2c30:	c9 f7       	brne	.-14     	; 0x2c24 <__ultoa_invert+0x86>
    2c32:	00 97       	sbiw	r24, 0x00	; 0
    2c34:	61 05       	cpc	r22, r1
    2c36:	71 05       	cpc	r23, r1
    2c38:	08 95       	ret
    2c3a:	9b 01       	movw	r18, r22
    2c3c:	ac 01       	movw	r20, r24
    2c3e:	0a 2e       	mov	r0, r26
    2c40:	06 94       	lsr	r0
    2c42:	57 95       	ror	r21
    2c44:	47 95       	ror	r20
    2c46:	37 95       	ror	r19
    2c48:	27 95       	ror	r18
    2c4a:	ba 95       	dec	r27
    2c4c:	c9 f7       	brne	.-14     	; 0x2c40 <__ultoa_invert+0xa2>
    2c4e:	62 0f       	add	r22, r18
    2c50:	73 1f       	adc	r23, r19
    2c52:	84 1f       	adc	r24, r20
    2c54:	95 1f       	adc	r25, r21
    2c56:	a0 1d       	adc	r26, r0
    2c58:	08 95       	ret

00002c5a <__ctype_isfalse>:
    2c5a:	99 27       	eor	r25, r25
    2c5c:	88 27       	eor	r24, r24

00002c5e <__ctype_istrue>:
    2c5e:	08 95       	ret

00002c60 <__muluhisi3>:
    2c60:	0e 94 72 16 	call	0x2ce4	; 0x2ce4 <__umulhisi3>
    2c64:	a5 9f       	mul	r26, r21
    2c66:	90 0d       	add	r25, r0
    2c68:	b4 9f       	mul	r27, r20
    2c6a:	90 0d       	add	r25, r0
    2c6c:	a4 9f       	mul	r26, r20
    2c6e:	80 0d       	add	r24, r0
    2c70:	91 1d       	adc	r25, r1
    2c72:	11 24       	eor	r1, r1
    2c74:	08 95       	ret

00002c76 <__prologue_saves__>:
    2c76:	2f 92       	push	r2
    2c78:	3f 92       	push	r3
    2c7a:	4f 92       	push	r4
    2c7c:	5f 92       	push	r5
    2c7e:	6f 92       	push	r6
    2c80:	7f 92       	push	r7
    2c82:	8f 92       	push	r8
    2c84:	9f 92       	push	r9
    2c86:	af 92       	push	r10
    2c88:	bf 92       	push	r11
    2c8a:	cf 92       	push	r12
    2c8c:	df 92       	push	r13
    2c8e:	ef 92       	push	r14
    2c90:	ff 92       	push	r15
    2c92:	0f 93       	push	r16
    2c94:	1f 93       	push	r17
    2c96:	cf 93       	push	r28
    2c98:	df 93       	push	r29
    2c9a:	cd b7       	in	r28, 0x3d	; 61
    2c9c:	de b7       	in	r29, 0x3e	; 62
    2c9e:	ca 1b       	sub	r28, r26
    2ca0:	db 0b       	sbc	r29, r27
    2ca2:	0f b6       	in	r0, 0x3f	; 63
    2ca4:	f8 94       	cli
    2ca6:	de bf       	out	0x3e, r29	; 62
    2ca8:	0f be       	out	0x3f, r0	; 63
    2caa:	cd bf       	out	0x3d, r28	; 61
    2cac:	09 94       	ijmp

00002cae <__epilogue_restores__>:
    2cae:	2a 88       	ldd	r2, Y+18	; 0x12
    2cb0:	39 88       	ldd	r3, Y+17	; 0x11
    2cb2:	48 88       	ldd	r4, Y+16	; 0x10
    2cb4:	5f 84       	ldd	r5, Y+15	; 0x0f
    2cb6:	6e 84       	ldd	r6, Y+14	; 0x0e
    2cb8:	7d 84       	ldd	r7, Y+13	; 0x0d
    2cba:	8c 84       	ldd	r8, Y+12	; 0x0c
    2cbc:	9b 84       	ldd	r9, Y+11	; 0x0b
    2cbe:	aa 84       	ldd	r10, Y+10	; 0x0a
    2cc0:	b9 84       	ldd	r11, Y+9	; 0x09
    2cc2:	c8 84       	ldd	r12, Y+8	; 0x08
    2cc4:	df 80       	ldd	r13, Y+7	; 0x07
    2cc6:	ee 80       	ldd	r14, Y+6	; 0x06
    2cc8:	fd 80       	ldd	r15, Y+5	; 0x05
    2cca:	0c 81       	ldd	r16, Y+4	; 0x04
    2ccc:	1b 81       	ldd	r17, Y+3	; 0x03
    2cce:	aa 81       	ldd	r26, Y+2	; 0x02
    2cd0:	b9 81       	ldd	r27, Y+1	; 0x01
    2cd2:	ce 0f       	add	r28, r30
    2cd4:	d1 1d       	adc	r29, r1
    2cd6:	0f b6       	in	r0, 0x3f	; 63
    2cd8:	f8 94       	cli
    2cda:	de bf       	out	0x3e, r29	; 62
    2cdc:	0f be       	out	0x3f, r0	; 63
    2cde:	cd bf       	out	0x3d, r28	; 61
    2ce0:	ed 01       	movw	r28, r26
    2ce2:	08 95       	ret

00002ce4 <__umulhisi3>:
    2ce4:	a2 9f       	mul	r26, r18
    2ce6:	b0 01       	movw	r22, r0
    2ce8:	b3 9f       	mul	r27, r19
    2cea:	c0 01       	movw	r24, r0
    2cec:	a3 9f       	mul	r26, r19
    2cee:	70 0d       	add	r23, r0
    2cf0:	81 1d       	adc	r24, r1
    2cf2:	11 24       	eor	r1, r1
    2cf4:	91 1d       	adc	r25, r1
    2cf6:	b2 9f       	mul	r27, r18
    2cf8:	70 0d       	add	r23, r0
    2cfa:	81 1d       	adc	r24, r1
    2cfc:	11 24       	eor	r1, r1
    2cfe:	91 1d       	adc	r25, r1
    2d00:	08 95       	ret

00002d02 <_exit>:
    2d02:	f8 94       	cli

00002d04 <__stop_program>:
    2d04:	ff cf       	rjmp	.-2      	; 0x2d04 <__stop_program>
