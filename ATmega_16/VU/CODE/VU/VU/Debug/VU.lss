
VU.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006b6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000052  00800060  000006b6  0000074a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  008000b2  008000b2  0000079c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000079c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  000007cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000093b  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000284  00000000  00000000  00001187  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002cb  00000000  00000000  0000140b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000164  00000000  00000000  000016d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001f7  00000000  00000000  0000183c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006f3  00000000  00000000  00001a33  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00002126  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 eb       	ldi	r30, 0xB6	; 182
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 3b       	cpi	r26, 0xB2	; 178
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 eb       	ldi	r26, 0xB2	; 178
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a5 3b       	cpi	r26, 0xB5	; 181
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <main>
  8a:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Truyenlenh>:
	EN  - PORTC.3
*/

void Truyenlenh (char Command)
{
		clb(PORTC,RS);
  92:	aa 98       	cbi	0x15, 2	; 21
		setb(PORTC,EN);
  94:	ab 9a       	sbi	0x15, 3	; 21
		PORTC=((PORTC&0x0f)|(Command&0xf0));//xoa 4 bit cao cua PORTC va cong 4 bit cao cua lenh
  96:	95 b3       	in	r25, 0x15	; 21
  98:	28 2f       	mov	r18, r24
  9a:	20 7f       	andi	r18, 0xF0	; 240
  9c:	9f 70       	andi	r25, 0x0F	; 15
  9e:	92 2b       	or	r25, r18
  a0:	95 bb       	out	0x15, r25	; 21
		clb(PORTC,EN);
  a2:	ab 98       	cbi	0x15, 3	; 21
		setb(PORTC,EN);
  a4:	ab 9a       	sbi	0x15, 3	; 21
		PORTC=((PORTC&0x0f)|((Command<<4)&0xf0));//xoa 4 bit cao va cong 4 bit thap cua lenh
  a6:	25 b3       	in	r18, 0x15	; 21
  a8:	30 e1       	ldi	r19, 0x10	; 16
  aa:	83 9f       	mul	r24, r19
  ac:	c0 01       	movw	r24, r0
  ae:	11 24       	eor	r1, r1
  b0:	92 2f       	mov	r25, r18
  b2:	9f 70       	andi	r25, 0x0F	; 15
  b4:	89 2b       	or	r24, r25
  b6:	85 bb       	out	0x15, r24	; 21
		clb(PORTC,EN);
  b8:	ab 98       	cbi	0x15, 3	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ba:	8f e0       	ldi	r24, 0x0F	; 15
  bc:	97 e2       	ldi	r25, 0x27	; 39
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	f1 f7       	brne	.-4      	; 0xbe <Truyenlenh+0x2c>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <Truyenlenh+0x32>
  c4:	00 00       	nop
  c6:	08 95       	ret

000000c8 <Truyendulieu>:
		_delay_ms(5);
}

void Truyendulieu (char data)
{
		setb(PORTC,RS);
  c8:	aa 9a       	sbi	0x15, 2	; 21
		setb(PORTC,EN);
  ca:	ab 9a       	sbi	0x15, 3	; 21
		PORTC=((PORTC&0x0f)|(data&0xf0));//xoa 4 bit cao cua PORTC va cong 4 bit cao cua du lieu
  cc:	95 b3       	in	r25, 0x15	; 21
  ce:	28 2f       	mov	r18, r24
  d0:	20 7f       	andi	r18, 0xF0	; 240
  d2:	9f 70       	andi	r25, 0x0F	; 15
  d4:	92 2b       	or	r25, r18
  d6:	95 bb       	out	0x15, r25	; 21
		clb(PORTC,EN);
  d8:	ab 98       	cbi	0x15, 3	; 21
		setb(PORTC,EN);
  da:	ab 9a       	sbi	0x15, 3	; 21
		PORTC=((PORTC&0x0f)|((data<<4)&0xf0));//xoa 4 bit cao va cong 4 bit thap cua du lieu
  dc:	25 b3       	in	r18, 0x15	; 21
  de:	30 e1       	ldi	r19, 0x10	; 16
  e0:	83 9f       	mul	r24, r19
  e2:	c0 01       	movw	r24, r0
  e4:	11 24       	eor	r1, r1
  e6:	92 2f       	mov	r25, r18
  e8:	9f 70       	andi	r25, 0x0F	; 15
  ea:	89 2b       	or	r24, r25
  ec:	85 bb       	out	0x15, r24	; 21
		clb(PORTC,EN);
  ee:	ab 98       	cbi	0x15, 3	; 21
  f0:	8f ec       	ldi	r24, 0xCF	; 207
  f2:	97 e0       	ldi	r25, 0x07	; 7
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <Truyendulieu+0x2c>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <Truyendulieu+0x32>
  fa:	00 00       	nop
  fc:	08 95       	ret

000000fe <LCD_Init>:
}

// Ham khoi tao LCD
void LCD_Init(void)
{
		DDRC=0xff;
  fe:	8f ef       	ldi	r24, 0xFF	; 255
 100:	84 bb       	out	0x14, r24	; 20
		PORTC=0xfd;
 102:	8d ef       	ldi	r24, 0xFD	; 253
 104:	85 bb       	out	0x15, r24	; 21
		Truyenlenh(0x02); // di chuyen con tro ve dau man hinh
 106:	82 e0       	ldi	r24, 0x02	; 2
 108:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
		Truyenlenh(0x28); // giao tiep 4 bit, hien thi 2 dong, kich thuoc font 5x7
 10c:	88 e2       	ldi	r24, 0x28	; 40
 10e:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
		Truyenlenh(0x0c); // bat hien thi va tat con tro
 112:	8c e0       	ldi	r24, 0x0C	; 12
 114:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
		Truyenlenh(0x06); // tu dong di chuyen con tro den vi tri tiep theo
 118:	86 e0       	ldi	r24, 0x06	; 6
 11a:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
		Truyenlenh(0x01); // xoa toan bo lcd
 11e:	81 e0       	ldi	r24, 0x01	; 1
 120:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
 124:	08 95       	ret

00000126 <LCD_Clear>:
}
// Ham xoa LCD
void LCD_Clear()
{   
	PORTC&=~(1<<RS);
 126:	aa 98       	cbi	0x15, 2	; 21
	Truyenlenh(0x01);
 128:	81 e0       	ldi	r24, 0x01	; 1
 12a:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
 12e:	8f ec       	ldi	r24, 0xCF	; 207
 130:	97 e0       	ldi	r25, 0x07	; 7
 132:	01 97       	sbiw	r24, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <LCD_Clear+0xc>
 136:	00 c0       	rjmp	.+0      	; 0x138 <LCD_Clear+0x12>
 138:	00 00       	nop
 13a:	08 95       	ret

0000013c <LCD_Puts>:
	_delay_ms(1);
}
// Ham viet 1 chuoi ki tu ra LCD
void LCD_Puts (char *s)
{
 13c:	cf 93       	push	r28
 13e:	df 93       	push	r29
 140:	ec 01       	movw	r28, r24
		while (*s)
 142:	88 81       	ld	r24, Y
 144:	88 23       	and	r24, r24
 146:	31 f0       	breq	.+12     	; 0x154 <LCD_Puts+0x18>
 148:	21 96       	adiw	r28, 0x01	; 1
		{
			Truyendulieu(*s);
 14a:	0e 94 64 00 	call	0xc8	; 0xc8 <Truyendulieu>
	_delay_ms(1);
}
// Ham viet 1 chuoi ki tu ra LCD
void LCD_Puts (char *s)
{
		while (*s)
 14e:	89 91       	ld	r24, Y+
 150:	81 11       	cpse	r24, r1
 152:	fb cf       	rjmp	.-10     	; 0x14a <LCD_Puts+0xe>
		{
			Truyendulieu(*s);
			s++;
		}
}
 154:	df 91       	pop	r29
 156:	cf 91       	pop	r28
 158:	08 95       	ret

0000015a <Viet_So>:

void Viet_So(int so)
{
 15a:	ef 92       	push	r14
 15c:	ff 92       	push	r15
 15e:	0f 93       	push	r16
 160:	1f 93       	push	r17
 162:	cf 93       	push	r28
 164:	df 93       	push	r29
 166:	8c 01       	movw	r16, r24
		unsigned char nghin,tram,chuc,donvi;
		nghin=so/1000;
		tram=(so%1000)/100;
 168:	68 ee       	ldi	r22, 0xE8	; 232
 16a:	73 e0       	ldi	r23, 0x03	; 3
 16c:	0e 94 31 03 	call	0x662	; 0x662 <__divmodhi4>
 170:	ec 01       	movw	r28, r24
		chuc=(so%1000%100)/10;
		donvi=so%10;
		Truyendulieu(nghin+48);
 172:	80 e3       	ldi	r24, 0x30	; 48
 174:	86 0f       	add	r24, r22
 176:	0e 94 64 00 	call	0xc8	; 0xc8 <Truyendulieu>

void Viet_So(int so)
{
		unsigned char nghin,tram,chuc,donvi;
		nghin=so/1000;
		tram=(so%1000)/100;
 17a:	ce 01       	movw	r24, r28
 17c:	64 e6       	ldi	r22, 0x64	; 100
 17e:	70 e0       	ldi	r23, 0x00	; 0
 180:	0e 94 31 03 	call	0x662	; 0x662 <__divmodhi4>
 184:	7c 01       	movw	r14, r24
		chuc=(so%1000%100)/10;
		donvi=so%10;
		Truyendulieu(nghin+48);
		Truyendulieu(tram+48);
 186:	80 e3       	ldi	r24, 0x30	; 48
 188:	86 0f       	add	r24, r22
 18a:	0e 94 64 00 	call	0xc8	; 0xc8 <Truyendulieu>
void Viet_So(int so)
{
		unsigned char nghin,tram,chuc,donvi;
		nghin=so/1000;
		tram=(so%1000)/100;
		chuc=(so%1000%100)/10;
 18e:	ca e0       	ldi	r28, 0x0A	; 10
 190:	d0 e0       	ldi	r29, 0x00	; 0
 192:	c7 01       	movw	r24, r14
 194:	be 01       	movw	r22, r28
 196:	0e 94 31 03 	call	0x662	; 0x662 <__divmodhi4>
		donvi=so%10;
		Truyendulieu(nghin+48);
		Truyendulieu(tram+48);
		Truyendulieu(chuc+48);
 19a:	80 e3       	ldi	r24, 0x30	; 48
 19c:	86 0f       	add	r24, r22
 19e:	0e 94 64 00 	call	0xc8	; 0xc8 <Truyendulieu>
{
		unsigned char nghin,tram,chuc,donvi;
		nghin=so/1000;
		tram=(so%1000)/100;
		chuc=(so%1000%100)/10;
		donvi=so%10;
 1a2:	c8 01       	movw	r24, r16
 1a4:	be 01       	movw	r22, r28
 1a6:	0e 94 31 03 	call	0x662	; 0x662 <__divmodhi4>
		Truyendulieu(nghin+48);
		Truyendulieu(tram+48);
		Truyendulieu(chuc+48);
		Truyendulieu(donvi+48);
 1aa:	80 5d       	subi	r24, 0xD0	; 208
 1ac:	0e 94 64 00 	call	0xc8	; 0xc8 <Truyendulieu>
}
 1b0:	df 91       	pop	r29
 1b2:	cf 91       	pop	r28
 1b4:	1f 91       	pop	r17
 1b6:	0f 91       	pop	r16
 1b8:	ff 90       	pop	r15
 1ba:	ef 90       	pop	r14
 1bc:	08 95       	ret

000001be <read_adc>:
unsigned char adc,t;
 int8_t  mode;
int    a = 35;
void read_adc(unsigned char kenh)
{
	ADMUX=(1<<REFS0)|kenh;
 1be:	80 64       	ori	r24, 0x40	; 64
 1c0:	87 b9       	out	0x07, r24	; 7
	setb(ADCSRA,ADSC);
 1c2:	36 9a       	sbi	0x06, 6	; 6
	while(inbit(ADCSRA,ADIF)==0);
 1c4:	34 9b       	sbis	0x06, 4	; 6
 1c6:	fe cf       	rjmp	.-4      	; 0x1c4 <read_adc+0x6>
	adc=ADCW;
 1c8:	84 b1       	in	r24, 0x04	; 4
 1ca:	95 b1       	in	r25, 0x05	; 5
 1cc:	80 93 b4 00 	sts	0x00B4, r24
 1d0:	08 95       	ret

000001d2 <temp>:
}
void temp()
{   
 1d2:	cf 93       	push	r28
	read_adc(0);
 1d4:	80 e0       	ldi	r24, 0x00	; 0
 1d6:	0e 94 df 00 	call	0x1be	; 0x1be <read_adc>
	t=adc/2.048;
 1da:	60 91 b4 00 	lds	r22, 0x00B4
 1de:	70 e0       	ldi	r23, 0x00	; 0
 1e0:	80 e0       	ldi	r24, 0x00	; 0
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	0e 94 a5 02 	call	0x54a	; 0x54a <__floatsisf>
 1e8:	2f e6       	ldi	r18, 0x6F	; 111
 1ea:	32 e1       	ldi	r19, 0x12	; 18
 1ec:	43 e0       	ldi	r20, 0x03	; 3
 1ee:	50 e4       	ldi	r21, 0x40	; 64
 1f0:	0e 94 0f 02 	call	0x41e	; 0x41e <__divsf3>
 1f4:	0e 94 77 02 	call	0x4ee	; 0x4ee <__fixunssfsi>
 1f8:	60 93 b2 00 	sts	0x00B2, r22

void LCD_Vitri (unsigned char line,unsigned char colum)
{
		uint8_t Ad;
		Ad=64*(line-1)+(colum-1)+0x80;
		Truyenlenh(Ad);
 1fc:	8b e8       	ldi	r24, 0x8B	; 139
 1fe:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
	LCD_Vitri(1,12);
	Truyendulieu((t/100)+48);
 202:	80 91 b2 00 	lds	r24, 0x00B2
 206:	c9 e2       	ldi	r28, 0x29	; 41
 208:	8c 9f       	mul	r24, r28
 20a:	81 2d       	mov	r24, r1
 20c:	11 24       	eor	r1, r1
 20e:	82 95       	swap	r24
 210:	8f 70       	andi	r24, 0x0F	; 15
 212:	80 5d       	subi	r24, 0xD0	; 208
 214:	0e 94 64 00 	call	0xc8	; 0xc8 <Truyendulieu>
 218:	8c e8       	ldi	r24, 0x8C	; 140
 21a:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
	LCD_Vitri(1,13);
	Truyendulieu((t%100/10)+48);
 21e:	80 91 b2 00 	lds	r24, 0x00B2
 222:	8c 9f       	mul	r24, r28
 224:	c1 2d       	mov	r28, r1
 226:	11 24       	eor	r1, r1
 228:	c2 95       	swap	r28
 22a:	cf 70       	andi	r28, 0x0F	; 15
 22c:	94 e6       	ldi	r25, 0x64	; 100
 22e:	c9 9f       	mul	r28, r25
 230:	80 19       	sub	r24, r0
 232:	11 24       	eor	r1, r1
 234:	cd ec       	ldi	r28, 0xCD	; 205
 236:	8c 9f       	mul	r24, r28
 238:	81 2d       	mov	r24, r1
 23a:	11 24       	eor	r1, r1
 23c:	86 95       	lsr	r24
 23e:	86 95       	lsr	r24
 240:	86 95       	lsr	r24
 242:	80 5d       	subi	r24, 0xD0	; 208
 244:	0e 94 64 00 	call	0xc8	; 0xc8 <Truyendulieu>
 248:	8d e8       	ldi	r24, 0x8D	; 141
 24a:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
	LCD_Vitri(1,14);
	Truyendulieu((t%10)+48);
 24e:	80 91 b2 00 	lds	r24, 0x00B2
 252:	8c 9f       	mul	r24, r28
 254:	c1 2d       	mov	r28, r1
 256:	11 24       	eor	r1, r1
 258:	c6 95       	lsr	r28
 25a:	c6 95       	lsr	r28
 25c:	c6 95       	lsr	r28
 25e:	cc 0f       	add	r28, r28
 260:	9c 2f       	mov	r25, r28
 262:	99 0f       	add	r25, r25
 264:	99 0f       	add	r25, r25
 266:	c9 0f       	add	r28, r25
 268:	8c 1b       	sub	r24, r28
 26a:	80 5d       	subi	r24, 0xD0	; 208
 26c:	0e 94 64 00 	call	0xc8	; 0xc8 <Truyendulieu>
}
 270:	cf 91       	pop	r28
 272:	08 95       	ret

00000274 <Thongtin>:
void Thongtin(void)
{
 274:	af 92       	push	r10
 276:	bf 92       	push	r11
 278:	cf 92       	push	r12
 27a:	df 92       	push	r13
 27c:	ef 92       	push	r14
 27e:	ff 92       	push	r15
 280:	0f 93       	push	r16
 282:	1f 93       	push	r17
 284:	cf 93       	push	r28
 286:	df 93       	push	r29
 288:	cd b7       	in	r28, 0x3d	; 61
 28a:	de b7       	in	r29, 0x3e	; 62
 28c:	ac 97       	sbiw	r28, 0x2c	; 44
 28e:	0f b6       	in	r0, 0x3f	; 63
 290:	f8 94       	cli
 292:	de bf       	out	0x3e, r29	; 62
 294:	0f be       	out	0x3f, r0	; 63
 296:	cd bf       	out	0x3d, r28	; 61
	 const unsigned char DA[]={"      DO AN VDK  SV: NGUYEN TUAN VU  13CDT1"};
 298:	8c e2       	ldi	r24, 0x2C	; 44
 29a:	e0 e7       	ldi	r30, 0x70	; 112
 29c:	f0 e0       	ldi	r31, 0x00	; 0
 29e:	de 01       	movw	r26, r28
 2a0:	11 96       	adiw	r26, 0x01	; 1
 2a2:	01 90       	ld	r0, Z+
 2a4:	0d 92       	st	X+, r0
 2a6:	8a 95       	dec	r24
 2a8:	e1 f7       	brne	.-8      	; 0x2a2 <Thongtin+0x2e>
 2aa:	0f 2e       	mov	r0, r31
 2ac:	fd e1       	ldi	r31, 0x1D	; 29
 2ae:	cf 2e       	mov	r12, r31
 2b0:	d1 2c       	mov	r13, r1
 2b2:	f0 2d       	mov	r31, r0
 2b4:	5e 01       	movw	r10, r28
 2b6:	8d e2       	ldi	r24, 0x2D	; 45
 2b8:	a8 0e       	add	r10, r24
 2ba:	b1 1c       	adc	r11, r1
 2bc:	7e 01       	movw	r14, r28
 2be:	ee e2       	ldi	r30, 0x2E	; 46
 2c0:	ee 0e       	add	r14, r30
 2c2:	f1 1c       	adc	r15, r1
 2c4:	03 c0       	rjmp	.+6      	; 0x2cc <Thongtin+0x58>
 2c6:	f1 e0       	ldi	r31, 0x01	; 1
 2c8:	cf 1a       	sub	r12, r31
 2ca:	d1 08       	sbc	r13, r1
 2cc:	80 ec       	ldi	r24, 0xC0	; 192
 2ce:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
	 unsigned int i,j;
	 for (i=30;i>=1;i--)
	 {
		 LCD_Vitri(2,1);
		 LCD_Puts("  ***START***");
 2d2:	82 e6       	ldi	r24, 0x62	; 98
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	0e 94 9e 00 	call	0x13c	; 0x13c <LCD_Puts>
 2da:	80 e8       	ldi	r24, 0x80	; 128
 2dc:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
		 LCD_Vitri(1,1);
		 for (j=0;j<i;j++)
 2e0:	8f ef       	ldi	r24, 0xFF	; 255
 2e2:	c8 16       	cp	r12, r24
 2e4:	d8 06       	cpc	r13, r24
 2e6:	79 f3       	breq	.-34     	; 0x2c6 <Thongtin+0x52>
 2e8:	85 01       	movw	r16, r10
 2ea:	0c 19       	sub	r16, r12
 2ec:	1d 09       	sbc	r17, r13
		 {
			 Truyendulieu(DA[45+j-i]);
 2ee:	f8 01       	movw	r30, r16
 2f0:	81 91       	ld	r24, Z+
 2f2:	8f 01       	movw	r16, r30
 2f4:	0e 94 64 00 	call	0xc8	; 0xc8 <Truyendulieu>
	 for (i=30;i>=1;i--)
	 {
		 LCD_Vitri(2,1);
		 LCD_Puts("  ***START***");
		 LCD_Vitri(1,1);
		 for (j=0;j<i;j++)
 2f8:	0e 15       	cp	r16, r14
 2fa:	1f 05       	cpc	r17, r15
 2fc:	c1 f7       	brne	.-16     	; 0x2ee <Thongtin+0x7a>
}
void Thongtin(void)
{
	 const unsigned char DA[]={"      DO AN VDK  SV: NGUYEN TUAN VU  13CDT1"};
	 unsigned int i,j;
	 for (i=30;i>=1;i--)
 2fe:	c1 14       	cp	r12, r1
 300:	d1 04       	cpc	r13, r1
 302:	09 f7       	brne	.-62     	; 0x2c6 <Thongtin+0x52>
		 {
			 Truyendulieu(DA[45+j-i]);
		 }
		 //_delay_ms(2500);
	 }
}
 304:	ac 96       	adiw	r28, 0x2c	; 44
 306:	0f b6       	in	r0, 0x3f	; 63
 308:	f8 94       	cli
 30a:	de bf       	out	0x3e, r29	; 62
 30c:	0f be       	out	0x3f, r0	; 63
 30e:	cd bf       	out	0x3d, r28	; 61
 310:	df 91       	pop	r29
 312:	cf 91       	pop	r28
 314:	1f 91       	pop	r17
 316:	0f 91       	pop	r16
 318:	ff 90       	pop	r15
 31a:	ef 90       	pop	r14
 31c:	df 90       	pop	r13
 31e:	cf 90       	pop	r12
 320:	bf 90       	pop	r11
 322:	af 90       	pop	r10
 324:	08 95       	ret

00000326 <chedo>:
void chedo()
{
 326:	cf 93       	push	r28
 328:	df 93       	push	r29
				if (inbit(PINB,0)==0)
 32a:	b0 99       	sbic	0x16, 0	; 22
 32c:	1d c0       	rjmp	.+58     	; 0x368 <chedo+0x42>
				{
					while(inbit(PINB,0)==0);
 32e:	b0 9b       	sbis	0x16, 0	; 22
 330:	fe cf       	rjmp	.-4      	; 0x32e <chedo+0x8>
					LCD_Clear();
 332:	0e 94 93 00 	call	0x126	; 0x126 <LCD_Clear>
 336:	80 e8       	ldi	r24, 0x80	; 128
 338:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
					LCD_Vitri(1,1);
					LCD_Puts(" Nhiet do: ");
 33c:	8c e9       	ldi	r24, 0x9C	; 156
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 9e 00 	call	0x13c	; 0x13c <LCD_Puts>
 344:	80 ec       	ldi	r24, 0xC0	; 192
 346:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
					LCD_Vitri(2,1);
					LCD_Puts(" T dat: ");
 34a:	88 ea       	ldi	r24, 0xA8	; 168
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 9e 00 	call	0x13c	; 0x13c <LCD_Puts>
					LCD_So(2,9,a);
 352:	c0 91 60 00 	lds	r28, 0x0060
 356:	d0 91 61 00 	lds	r29, 0x0061

void LCD_So(unsigned char line,unsigned char colum,char so)
{
		uint8_t Ad;
		Ad=64*(line-1)+(colum-1)+0x80;
		Truyenlenh(Ad);
 35a:	88 ec       	ldi	r24, 0xC8	; 200
 35c:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
		Viet_So(so);
 360:	ce 01       	movw	r24, r28
 362:	99 27       	eor	r25, r25
 364:	0e 94 ad 00 	call	0x15a	; 0x15a <Viet_So>
				}
			 if (inbit(PINB,1)==0)
 368:	b1 99       	sbic	0x16, 1	; 22
 36a:	12 c0       	rjmp	.+36     	; 0x390 <chedo+0x6a>
			 {
				 while(inbit(PINB,1)==0);
 36c:	b1 9b       	sbis	0x16, 1	; 22
 36e:	fe cf       	rjmp	.-4      	; 0x36c <chedo+0x46>
				 a++;
 370:	c0 91 60 00 	lds	r28, 0x0060
 374:	d0 91 61 00 	lds	r29, 0x0061
 378:	21 96       	adiw	r28, 0x01	; 1
 37a:	d0 93 61 00 	sts	0x0061, r29
 37e:	c0 93 60 00 	sts	0x0060, r28

void LCD_So(unsigned char line,unsigned char colum,char so)
{
		uint8_t Ad;
		Ad=64*(line-1)+(colum-1)+0x80;
		Truyenlenh(Ad);
 382:	88 ec       	ldi	r24, 0xC8	; 200
 384:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
		Viet_So(so);
 388:	ce 01       	movw	r24, r28
 38a:	99 27       	eor	r25, r25
 38c:	0e 94 ad 00 	call	0x15a	; 0x15a <Viet_So>
				LCD_So(2,9,a);
			 }
			 if (inbit(PINB,2)==0)
 390:	b2 99       	sbic	0x16, 2	; 22
 392:	1f c0       	rjmp	.+62     	; 0x3d2 <chedo+0xac>
			 {
				 while(inbit(PINB,2)==0);
 394:	b2 9b       	sbis	0x16, 2	; 22
 396:	fe cf       	rjmp	.-4      	; 0x394 <chedo+0x6e>
				 a--;
 398:	80 91 60 00 	lds	r24, 0x0060
 39c:	90 91 61 00 	lds	r25, 0x0061
 3a0:	01 97       	sbiw	r24, 0x01	; 1
				 if(a==0) a=35;
 3a2:	00 97       	sbiw	r24, 0x00	; 0
 3a4:	29 f0       	breq	.+10     	; 0x3b0 <chedo+0x8a>
				LCD_So(2,9,a);
			 }
			 if (inbit(PINB,2)==0)
			 {
				 while(inbit(PINB,2)==0);
				 a--;
 3a6:	90 93 61 00 	sts	0x0061, r25
 3aa:	80 93 60 00 	sts	0x0060, r24
 3ae:	06 c0       	rjmp	.+12     	; 0x3bc <chedo+0x96>
				 if(a==0) a=35;
 3b0:	83 e2       	ldi	r24, 0x23	; 35
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	90 93 61 00 	sts	0x0061, r25
 3b8:	80 93 60 00 	sts	0x0060, r24
				 LCD_So(2,9,a);
 3bc:	c0 91 60 00 	lds	r28, 0x0060
 3c0:	d0 91 61 00 	lds	r29, 0x0061

void LCD_So(unsigned char line,unsigned char colum,char so)
{
		uint8_t Ad;
		Ad=64*(line-1)+(colum-1)+0x80;
		Truyenlenh(Ad);
 3c4:	88 ec       	ldi	r24, 0xC8	; 200
 3c6:	0e 94 49 00 	call	0x92	; 0x92 <Truyenlenh>
		Viet_So(so);
 3ca:	ce 01       	movw	r24, r28
 3cc:	99 27       	eor	r25, r25
 3ce:	0e 94 ad 00 	call	0x15a	; 0x15a <Viet_So>
			 }
}
 3d2:	df 91       	pop	r29
 3d4:	cf 91       	pop	r28
 3d6:	08 95       	ret

000003d8 <main>:

int main(void)
{   
	DDRB=0xf8;
 3d8:	88 ef       	ldi	r24, 0xF8	; 248
 3da:	87 bb       	out	0x17, r24	; 23
	PORTB=0xff;
 3dc:	8f ef       	ldi	r24, 0xFF	; 255
 3de:	88 bb       	out	0x18, r24	; 24
	setb(ADMUX,REFS0);
 3e0:	3e 9a       	sbi	0x07, 6	; 7
	setb(ADMUX,MUX1);
 3e2:	39 9a       	sbi	0x07, 1	; 7
	setb(ADCSRA,ADEN);
 3e4:	37 9a       	sbi	0x06, 7	; 6
	setb(ADCSRA,ADPS1);
 3e6:	31 9a       	sbi	0x06, 1	; 6
	setb(ADCSRA,ADPS2);
 3e8:	32 9a       	sbi	0x06, 2	; 6
	LCD_Init(); 
 3ea:	0e 94 7f 00 	call	0xfe	; 0xfe <LCD_Init>
	Thongtin();
 3ee:	0e 94 3a 01 	call	0x274	; 0x274 <Thongtin>
	while(1)
	{		  
		       temp();
 3f2:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <temp>
			   chedo();
 3f6:	0e 94 93 01 	call	0x326	; 0x326 <chedo>
			    if (t> a)
 3fa:	20 91 b2 00 	lds	r18, 0x00B2
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	80 91 60 00 	lds	r24, 0x0060
 404:	90 91 61 00 	lds	r25, 0x0061
 408:	82 17       	cp	r24, r18
 40a:	93 07       	cpc	r25, r19
 40c:	24 f4       	brge	.+8      	; 0x416 <main+0x3e>
			    {
				    setb(PORTC,1);
 40e:	a9 9a       	sbi	0x15, 1	; 21
				    clb(PORTB,4);
 410:	c4 98       	cbi	0x18, 4	; 24
				    setb(PORTB,3);
 412:	c3 9a       	sbi	0x18, 3	; 24
 414:	ee cf       	rjmp	.-36     	; 0x3f2 <main+0x1a>
			    }
			    else
			    {
				    clb(PORTC,1);
 416:	a9 98       	cbi	0x15, 1	; 21
				    clb(PORTB,3);
 418:	c3 98       	cbi	0x18, 3	; 24
				    setb(PORTB,4);
 41a:	c4 9a       	sbi	0x18, 4	; 24
 41c:	ea cf       	rjmp	.-44     	; 0x3f2 <main+0x1a>

0000041e <__divsf3>:
 41e:	0c d0       	rcall	.+24     	; 0x438 <__divsf3x>
 420:	e6 c0       	rjmp	.+460    	; 0x5ee <__fp_round>
 422:	de d0       	rcall	.+444    	; 0x5e0 <__fp_pscB>
 424:	40 f0       	brcs	.+16     	; 0x436 <__divsf3+0x18>
 426:	d5 d0       	rcall	.+426    	; 0x5d2 <__fp_pscA>
 428:	30 f0       	brcs	.+12     	; 0x436 <__divsf3+0x18>
 42a:	21 f4       	brne	.+8      	; 0x434 <__divsf3+0x16>
 42c:	5f 3f       	cpi	r21, 0xFF	; 255
 42e:	19 f0       	breq	.+6      	; 0x436 <__divsf3+0x18>
 430:	c7 c0       	rjmp	.+398    	; 0x5c0 <__fp_inf>
 432:	51 11       	cpse	r21, r1
 434:	10 c1       	rjmp	.+544    	; 0x656 <__fp_szero>
 436:	ca c0       	rjmp	.+404    	; 0x5cc <__fp_nan>

00000438 <__divsf3x>:
 438:	eb d0       	rcall	.+470    	; 0x610 <__fp_split3>
 43a:	98 f3       	brcs	.-26     	; 0x422 <__divsf3+0x4>

0000043c <__divsf3_pse>:
 43c:	99 23       	and	r25, r25
 43e:	c9 f3       	breq	.-14     	; 0x432 <__divsf3+0x14>
 440:	55 23       	and	r21, r21
 442:	b1 f3       	breq	.-20     	; 0x430 <__divsf3+0x12>
 444:	95 1b       	sub	r25, r21
 446:	55 0b       	sbc	r21, r21
 448:	bb 27       	eor	r27, r27
 44a:	aa 27       	eor	r26, r26
 44c:	62 17       	cp	r22, r18
 44e:	73 07       	cpc	r23, r19
 450:	84 07       	cpc	r24, r20
 452:	38 f0       	brcs	.+14     	; 0x462 <__stack+0x3>
 454:	9f 5f       	subi	r25, 0xFF	; 255
 456:	5f 4f       	sbci	r21, 0xFF	; 255
 458:	22 0f       	add	r18, r18
 45a:	33 1f       	adc	r19, r19
 45c:	44 1f       	adc	r20, r20
 45e:	aa 1f       	adc	r26, r26
 460:	a9 f3       	breq	.-22     	; 0x44c <__divsf3_pse+0x10>
 462:	33 d0       	rcall	.+102    	; 0x4ca <__stack+0x6b>
 464:	0e 2e       	mov	r0, r30
 466:	3a f0       	brmi	.+14     	; 0x476 <__stack+0x17>
 468:	e0 e8       	ldi	r30, 0x80	; 128
 46a:	30 d0       	rcall	.+96     	; 0x4cc <__stack+0x6d>
 46c:	91 50       	subi	r25, 0x01	; 1
 46e:	50 40       	sbci	r21, 0x00	; 0
 470:	e6 95       	lsr	r30
 472:	00 1c       	adc	r0, r0
 474:	ca f7       	brpl	.-14     	; 0x468 <__stack+0x9>
 476:	29 d0       	rcall	.+82     	; 0x4ca <__stack+0x6b>
 478:	fe 2f       	mov	r31, r30
 47a:	27 d0       	rcall	.+78     	; 0x4ca <__stack+0x6b>
 47c:	66 0f       	add	r22, r22
 47e:	77 1f       	adc	r23, r23
 480:	88 1f       	adc	r24, r24
 482:	bb 1f       	adc	r27, r27
 484:	26 17       	cp	r18, r22
 486:	37 07       	cpc	r19, r23
 488:	48 07       	cpc	r20, r24
 48a:	ab 07       	cpc	r26, r27
 48c:	b0 e8       	ldi	r27, 0x80	; 128
 48e:	09 f0       	breq	.+2      	; 0x492 <__stack+0x33>
 490:	bb 0b       	sbc	r27, r27
 492:	80 2d       	mov	r24, r0
 494:	bf 01       	movw	r22, r30
 496:	ff 27       	eor	r31, r31
 498:	93 58       	subi	r25, 0x83	; 131
 49a:	5f 4f       	sbci	r21, 0xFF	; 255
 49c:	2a f0       	brmi	.+10     	; 0x4a8 <__stack+0x49>
 49e:	9e 3f       	cpi	r25, 0xFE	; 254
 4a0:	51 05       	cpc	r21, r1
 4a2:	68 f0       	brcs	.+26     	; 0x4be <__stack+0x5f>
 4a4:	8d c0       	rjmp	.+282    	; 0x5c0 <__fp_inf>
 4a6:	d7 c0       	rjmp	.+430    	; 0x656 <__fp_szero>
 4a8:	5f 3f       	cpi	r21, 0xFF	; 255
 4aa:	ec f3       	brlt	.-6      	; 0x4a6 <__stack+0x47>
 4ac:	98 3e       	cpi	r25, 0xE8	; 232
 4ae:	dc f3       	brlt	.-10     	; 0x4a6 <__stack+0x47>
 4b0:	86 95       	lsr	r24
 4b2:	77 95       	ror	r23
 4b4:	67 95       	ror	r22
 4b6:	b7 95       	ror	r27
 4b8:	f7 95       	ror	r31
 4ba:	9f 5f       	subi	r25, 0xFF	; 255
 4bc:	c9 f7       	brne	.-14     	; 0x4b0 <__stack+0x51>
 4be:	88 0f       	add	r24, r24
 4c0:	91 1d       	adc	r25, r1
 4c2:	96 95       	lsr	r25
 4c4:	87 95       	ror	r24
 4c6:	97 f9       	bld	r25, 7
 4c8:	08 95       	ret
 4ca:	e1 e0       	ldi	r30, 0x01	; 1
 4cc:	66 0f       	add	r22, r22
 4ce:	77 1f       	adc	r23, r23
 4d0:	88 1f       	adc	r24, r24
 4d2:	bb 1f       	adc	r27, r27
 4d4:	62 17       	cp	r22, r18
 4d6:	73 07       	cpc	r23, r19
 4d8:	84 07       	cpc	r24, r20
 4da:	ba 07       	cpc	r27, r26
 4dc:	20 f0       	brcs	.+8      	; 0x4e6 <__stack+0x87>
 4de:	62 1b       	sub	r22, r18
 4e0:	73 0b       	sbc	r23, r19
 4e2:	84 0b       	sbc	r24, r20
 4e4:	ba 0b       	sbc	r27, r26
 4e6:	ee 1f       	adc	r30, r30
 4e8:	88 f7       	brcc	.-30     	; 0x4cc <__stack+0x6d>
 4ea:	e0 95       	com	r30
 4ec:	08 95       	ret

000004ee <__fixunssfsi>:
 4ee:	98 d0       	rcall	.+304    	; 0x620 <__fp_splitA>
 4f0:	88 f0       	brcs	.+34     	; 0x514 <__fixunssfsi+0x26>
 4f2:	9f 57       	subi	r25, 0x7F	; 127
 4f4:	90 f0       	brcs	.+36     	; 0x51a <__fixunssfsi+0x2c>
 4f6:	b9 2f       	mov	r27, r25
 4f8:	99 27       	eor	r25, r25
 4fa:	b7 51       	subi	r27, 0x17	; 23
 4fc:	a0 f0       	brcs	.+40     	; 0x526 <__fixunssfsi+0x38>
 4fe:	d1 f0       	breq	.+52     	; 0x534 <__fixunssfsi+0x46>
 500:	66 0f       	add	r22, r22
 502:	77 1f       	adc	r23, r23
 504:	88 1f       	adc	r24, r24
 506:	99 1f       	adc	r25, r25
 508:	1a f0       	brmi	.+6      	; 0x510 <__fixunssfsi+0x22>
 50a:	ba 95       	dec	r27
 50c:	c9 f7       	brne	.-14     	; 0x500 <__fixunssfsi+0x12>
 50e:	12 c0       	rjmp	.+36     	; 0x534 <__fixunssfsi+0x46>
 510:	b1 30       	cpi	r27, 0x01	; 1
 512:	81 f0       	breq	.+32     	; 0x534 <__fixunssfsi+0x46>
 514:	9f d0       	rcall	.+318    	; 0x654 <__fp_zero>
 516:	b1 e0       	ldi	r27, 0x01	; 1
 518:	08 95       	ret
 51a:	9c c0       	rjmp	.+312    	; 0x654 <__fp_zero>
 51c:	67 2f       	mov	r22, r23
 51e:	78 2f       	mov	r23, r24
 520:	88 27       	eor	r24, r24
 522:	b8 5f       	subi	r27, 0xF8	; 248
 524:	39 f0       	breq	.+14     	; 0x534 <__fixunssfsi+0x46>
 526:	b9 3f       	cpi	r27, 0xF9	; 249
 528:	cc f3       	brlt	.-14     	; 0x51c <__fixunssfsi+0x2e>
 52a:	86 95       	lsr	r24
 52c:	77 95       	ror	r23
 52e:	67 95       	ror	r22
 530:	b3 95       	inc	r27
 532:	d9 f7       	brne	.-10     	; 0x52a <__fixunssfsi+0x3c>
 534:	3e f4       	brtc	.+14     	; 0x544 <__fixunssfsi+0x56>
 536:	90 95       	com	r25
 538:	80 95       	com	r24
 53a:	70 95       	com	r23
 53c:	61 95       	neg	r22
 53e:	7f 4f       	sbci	r23, 0xFF	; 255
 540:	8f 4f       	sbci	r24, 0xFF	; 255
 542:	9f 4f       	sbci	r25, 0xFF	; 255
 544:	08 95       	ret

00000546 <__floatunsisf>:
 546:	e8 94       	clt
 548:	09 c0       	rjmp	.+18     	; 0x55c <__floatsisf+0x12>

0000054a <__floatsisf>:
 54a:	97 fb       	bst	r25, 7
 54c:	3e f4       	brtc	.+14     	; 0x55c <__floatsisf+0x12>
 54e:	90 95       	com	r25
 550:	80 95       	com	r24
 552:	70 95       	com	r23
 554:	61 95       	neg	r22
 556:	7f 4f       	sbci	r23, 0xFF	; 255
 558:	8f 4f       	sbci	r24, 0xFF	; 255
 55a:	9f 4f       	sbci	r25, 0xFF	; 255
 55c:	99 23       	and	r25, r25
 55e:	a9 f0       	breq	.+42     	; 0x58a <__floatsisf+0x40>
 560:	f9 2f       	mov	r31, r25
 562:	96 e9       	ldi	r25, 0x96	; 150
 564:	bb 27       	eor	r27, r27
 566:	93 95       	inc	r25
 568:	f6 95       	lsr	r31
 56a:	87 95       	ror	r24
 56c:	77 95       	ror	r23
 56e:	67 95       	ror	r22
 570:	b7 95       	ror	r27
 572:	f1 11       	cpse	r31, r1
 574:	f8 cf       	rjmp	.-16     	; 0x566 <__floatsisf+0x1c>
 576:	fa f4       	brpl	.+62     	; 0x5b6 <__floatsisf+0x6c>
 578:	bb 0f       	add	r27, r27
 57a:	11 f4       	brne	.+4      	; 0x580 <__floatsisf+0x36>
 57c:	60 ff       	sbrs	r22, 0
 57e:	1b c0       	rjmp	.+54     	; 0x5b6 <__floatsisf+0x6c>
 580:	6f 5f       	subi	r22, 0xFF	; 255
 582:	7f 4f       	sbci	r23, 0xFF	; 255
 584:	8f 4f       	sbci	r24, 0xFF	; 255
 586:	9f 4f       	sbci	r25, 0xFF	; 255
 588:	16 c0       	rjmp	.+44     	; 0x5b6 <__floatsisf+0x6c>
 58a:	88 23       	and	r24, r24
 58c:	11 f0       	breq	.+4      	; 0x592 <__floatsisf+0x48>
 58e:	96 e9       	ldi	r25, 0x96	; 150
 590:	11 c0       	rjmp	.+34     	; 0x5b4 <__floatsisf+0x6a>
 592:	77 23       	and	r23, r23
 594:	21 f0       	breq	.+8      	; 0x59e <__floatsisf+0x54>
 596:	9e e8       	ldi	r25, 0x8E	; 142
 598:	87 2f       	mov	r24, r23
 59a:	76 2f       	mov	r23, r22
 59c:	05 c0       	rjmp	.+10     	; 0x5a8 <__floatsisf+0x5e>
 59e:	66 23       	and	r22, r22
 5a0:	71 f0       	breq	.+28     	; 0x5be <__floatsisf+0x74>
 5a2:	96 e8       	ldi	r25, 0x86	; 134
 5a4:	86 2f       	mov	r24, r22
 5a6:	70 e0       	ldi	r23, 0x00	; 0
 5a8:	60 e0       	ldi	r22, 0x00	; 0
 5aa:	2a f0       	brmi	.+10     	; 0x5b6 <__floatsisf+0x6c>
 5ac:	9a 95       	dec	r25
 5ae:	66 0f       	add	r22, r22
 5b0:	77 1f       	adc	r23, r23
 5b2:	88 1f       	adc	r24, r24
 5b4:	da f7       	brpl	.-10     	; 0x5ac <__floatsisf+0x62>
 5b6:	88 0f       	add	r24, r24
 5b8:	96 95       	lsr	r25
 5ba:	87 95       	ror	r24
 5bc:	97 f9       	bld	r25, 7
 5be:	08 95       	ret

000005c0 <__fp_inf>:
 5c0:	97 f9       	bld	r25, 7
 5c2:	9f 67       	ori	r25, 0x7F	; 127
 5c4:	80 e8       	ldi	r24, 0x80	; 128
 5c6:	70 e0       	ldi	r23, 0x00	; 0
 5c8:	60 e0       	ldi	r22, 0x00	; 0
 5ca:	08 95       	ret

000005cc <__fp_nan>:
 5cc:	9f ef       	ldi	r25, 0xFF	; 255
 5ce:	80 ec       	ldi	r24, 0xC0	; 192
 5d0:	08 95       	ret

000005d2 <__fp_pscA>:
 5d2:	00 24       	eor	r0, r0
 5d4:	0a 94       	dec	r0
 5d6:	16 16       	cp	r1, r22
 5d8:	17 06       	cpc	r1, r23
 5da:	18 06       	cpc	r1, r24
 5dc:	09 06       	cpc	r0, r25
 5de:	08 95       	ret

000005e0 <__fp_pscB>:
 5e0:	00 24       	eor	r0, r0
 5e2:	0a 94       	dec	r0
 5e4:	12 16       	cp	r1, r18
 5e6:	13 06       	cpc	r1, r19
 5e8:	14 06       	cpc	r1, r20
 5ea:	05 06       	cpc	r0, r21
 5ec:	08 95       	ret

000005ee <__fp_round>:
 5ee:	09 2e       	mov	r0, r25
 5f0:	03 94       	inc	r0
 5f2:	00 0c       	add	r0, r0
 5f4:	11 f4       	brne	.+4      	; 0x5fa <__fp_round+0xc>
 5f6:	88 23       	and	r24, r24
 5f8:	52 f0       	brmi	.+20     	; 0x60e <__fp_round+0x20>
 5fa:	bb 0f       	add	r27, r27
 5fc:	40 f4       	brcc	.+16     	; 0x60e <__fp_round+0x20>
 5fe:	bf 2b       	or	r27, r31
 600:	11 f4       	brne	.+4      	; 0x606 <__fp_round+0x18>
 602:	60 ff       	sbrs	r22, 0
 604:	04 c0       	rjmp	.+8      	; 0x60e <__fp_round+0x20>
 606:	6f 5f       	subi	r22, 0xFF	; 255
 608:	7f 4f       	sbci	r23, 0xFF	; 255
 60a:	8f 4f       	sbci	r24, 0xFF	; 255
 60c:	9f 4f       	sbci	r25, 0xFF	; 255
 60e:	08 95       	ret

00000610 <__fp_split3>:
 610:	57 fd       	sbrc	r21, 7
 612:	90 58       	subi	r25, 0x80	; 128
 614:	44 0f       	add	r20, r20
 616:	55 1f       	adc	r21, r21
 618:	59 f0       	breq	.+22     	; 0x630 <__fp_splitA+0x10>
 61a:	5f 3f       	cpi	r21, 0xFF	; 255
 61c:	71 f0       	breq	.+28     	; 0x63a <__fp_splitA+0x1a>
 61e:	47 95       	ror	r20

00000620 <__fp_splitA>:
 620:	88 0f       	add	r24, r24
 622:	97 fb       	bst	r25, 7
 624:	99 1f       	adc	r25, r25
 626:	61 f0       	breq	.+24     	; 0x640 <__fp_splitA+0x20>
 628:	9f 3f       	cpi	r25, 0xFF	; 255
 62a:	79 f0       	breq	.+30     	; 0x64a <__fp_splitA+0x2a>
 62c:	87 95       	ror	r24
 62e:	08 95       	ret
 630:	12 16       	cp	r1, r18
 632:	13 06       	cpc	r1, r19
 634:	14 06       	cpc	r1, r20
 636:	55 1f       	adc	r21, r21
 638:	f2 cf       	rjmp	.-28     	; 0x61e <__fp_split3+0xe>
 63a:	46 95       	lsr	r20
 63c:	f1 df       	rcall	.-30     	; 0x620 <__fp_splitA>
 63e:	08 c0       	rjmp	.+16     	; 0x650 <__fp_splitA+0x30>
 640:	16 16       	cp	r1, r22
 642:	17 06       	cpc	r1, r23
 644:	18 06       	cpc	r1, r24
 646:	99 1f       	adc	r25, r25
 648:	f1 cf       	rjmp	.-30     	; 0x62c <__fp_splitA+0xc>
 64a:	86 95       	lsr	r24
 64c:	71 05       	cpc	r23, r1
 64e:	61 05       	cpc	r22, r1
 650:	08 94       	sec
 652:	08 95       	ret

00000654 <__fp_zero>:
 654:	e8 94       	clt

00000656 <__fp_szero>:
 656:	bb 27       	eor	r27, r27
 658:	66 27       	eor	r22, r22
 65a:	77 27       	eor	r23, r23
 65c:	cb 01       	movw	r24, r22
 65e:	97 f9       	bld	r25, 7
 660:	08 95       	ret

00000662 <__divmodhi4>:
 662:	97 fb       	bst	r25, 7
 664:	07 2e       	mov	r0, r23
 666:	16 f4       	brtc	.+4      	; 0x66c <__divmodhi4+0xa>
 668:	00 94       	com	r0
 66a:	07 d0       	rcall	.+14     	; 0x67a <__divmodhi4_neg1>
 66c:	77 fd       	sbrc	r23, 7
 66e:	09 d0       	rcall	.+18     	; 0x682 <__divmodhi4_neg2>
 670:	0e 94 45 03 	call	0x68a	; 0x68a <__udivmodhi4>
 674:	07 fc       	sbrc	r0, 7
 676:	05 d0       	rcall	.+10     	; 0x682 <__divmodhi4_neg2>
 678:	3e f4       	brtc	.+14     	; 0x688 <__divmodhi4_exit>

0000067a <__divmodhi4_neg1>:
 67a:	90 95       	com	r25
 67c:	81 95       	neg	r24
 67e:	9f 4f       	sbci	r25, 0xFF	; 255
 680:	08 95       	ret

00000682 <__divmodhi4_neg2>:
 682:	70 95       	com	r23
 684:	61 95       	neg	r22
 686:	7f 4f       	sbci	r23, 0xFF	; 255

00000688 <__divmodhi4_exit>:
 688:	08 95       	ret

0000068a <__udivmodhi4>:
 68a:	aa 1b       	sub	r26, r26
 68c:	bb 1b       	sub	r27, r27
 68e:	51 e1       	ldi	r21, 0x11	; 17
 690:	07 c0       	rjmp	.+14     	; 0x6a0 <__udivmodhi4_ep>

00000692 <__udivmodhi4_loop>:
 692:	aa 1f       	adc	r26, r26
 694:	bb 1f       	adc	r27, r27
 696:	a6 17       	cp	r26, r22
 698:	b7 07       	cpc	r27, r23
 69a:	10 f0       	brcs	.+4      	; 0x6a0 <__udivmodhi4_ep>
 69c:	a6 1b       	sub	r26, r22
 69e:	b7 0b       	sbc	r27, r23

000006a0 <__udivmodhi4_ep>:
 6a0:	88 1f       	adc	r24, r24
 6a2:	99 1f       	adc	r25, r25
 6a4:	5a 95       	dec	r21
 6a6:	a9 f7       	brne	.-22     	; 0x692 <__udivmodhi4_loop>
 6a8:	80 95       	com	r24
 6aa:	90 95       	com	r25
 6ac:	bc 01       	movw	r22, r24
 6ae:	cd 01       	movw	r24, r26
 6b0:	08 95       	ret

000006b2 <_exit>:
 6b2:	f8 94       	cli

000006b4 <__stop_program>:
 6b4:	ff cf       	rjmp	.-2      	; 0x6b4 <__stop_program>
