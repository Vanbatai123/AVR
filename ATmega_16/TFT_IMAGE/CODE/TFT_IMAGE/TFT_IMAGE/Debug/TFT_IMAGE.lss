
TFT_IMAGE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002332  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000e0  00800060  00002332  000023c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800140  00800140  000024a6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000024a6  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  00002502  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001f8b  00000000  00000000  000025ea  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002f0  00000000  00000000  00004575  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000053d  00000000  00000000  00004865  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000468  00000000  00000000  00004da4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000351  00000000  00000000  0000520c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000018e4  00000000  00000000  0000555d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  00006e41  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 54 08 	jmp	0x10a8	; 0x10a8 <__ctors_end>
       4:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
       8:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
       c:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      10:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      14:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      18:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      1c:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      20:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      24:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      28:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      2c:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      30:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      34:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      38:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      3c:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      40:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      44:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      48:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      4c:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>
      50:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__bad_interrupt>

00000054 <BigFont>:
	...
      78:	07 00 0f 80 0f 80 0f 80 0f 80 0f 80 07 00 07 00     ................
      88:	00 00 00 00 07 00 07 00 07 00 00 00 00 00 0e 38     ...............8
      98:	0e 38 0e 38 0e 38 06 30 00 00 00 00 00 00 00 00     .8.8.8.0........
	...
      b4:	00 00 0c 30 0c 30 0c 30 7f fe 7f fe 0c 30 0c 30     ...0.0.0.....0.0
      c4:	0c 30 0c 30 7f fe 7f fe 0c 30 0c 30 0c 30 00 00     .0.0.....0.0.0..
      d4:	00 00 02 40 02 40 0f f8 1f f8 1a 40 1a 40 1f f0     ...@.@.....@.@..
      e4:	0f f8 02 58 02 58 1f f8 1f f0 02 40 02 40 00 00     ...X.X.....@.@..
      f4:	00 00 00 00 00 00 0e 10 0e 30 0e 70 00 e0 01 c0     .........0.p....
     104:	03 80 07 00 0e 70 0c 70 08 70 00 00 00 00 00 00     .....p.p.p......
     114:	00 00 00 00 0f 00 19 80 19 80 19 80 0f 00 0f 08     ................
     124:	0f 98 19 f8 18 f0 18 e0 19 f0 0f 98 00 00 00 00     ................
     134:	00 00 00 00 07 00 07 00 07 00 0e 00 00 00 00 00     ................
	...
     158:	00 f0 01 c0 03 80 07 00 0e 00 0e 00 0e 00 0e 00     ................
     168:	07 00 03 80 01 c0 00 f0 00 00 00 00 00 00 00 00     ................
     178:	0f 00 03 80 01 c0 00 e0 00 70 00 70 00 70 00 70     .........p.p.p.p
     188:	00 e0 01 c0 03 80 0f 00 00 00 00 00 00 00 00 00     ................
     198:	01 80 11 88 09 90 07 e0 07 e0 3f fc 3f fc 07 e0     ..........?.?...
     1a8:	07 e0 09 90 11 88 01 80 00 00 00 00 00 00 00 00     ................
     1b8:	00 00 00 00 01 80 01 80 01 80 0f f0 0f f0 01 80     ................
     1c8:	01 80 01 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1e8:	00 00 07 00 07 00 07 00 0e 00 00 00 00 00 00 00     ................
	...
     200:	00 00 1f f8 1f f8 00 00 00 00 00 00 00 00 00 00     ................
	...
     228:	00 00 07 00 07 00 07 00 00 00 00 00 00 00 00 00     ................
     238:	00 02 00 06 00 0e 00 1c 00 38 00 70 00 e0 01 c0     .........8.p....
     248:	03 80 07 00 0e 00 1c 00 00 00 00 00 00 00 00 00     ................
     258:	0f f0 1c 38 1c 78 1c f8 1c f8 1d b8 1d b8 1f 38     ...8.x.........8
     268:	1f 38 1e 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     278:	01 80 01 80 03 80 1f 80 1f 80 03 80 03 80 03 80     ................
     288:	03 80 03 80 03 80 1f f0 00 00 00 00 00 00 00 00     ................
     298:	0f e0 1c 70 1c 38 00 38 00 70 00 e0 01 c0 03 80     ...p.8.8.p......
     2a8:	07 00 0e 38 1c 38 1f f8 00 00 00 00 00 00 00 00     ...8.8..........
     2b8:	0f e0 1c 70 1c 38 00 38 00 70 03 c0 03 c0 00 70     ...p.8.8.p.....p
     2c8:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     2d8:	00 e0 01 e0 03 e0 06 e0 0c e0 18 e0 1f f8 1f f8     ................
     2e8:	00 e0 00 e0 00 e0 03 f8 00 00 00 00 00 00 00 00     ................
     2f8:	1f f8 1c 00 1c 00 1c 00 1c 00 1f e0 1f f0 00 78     ...............x
     308:	00 38 1c 38 1c 70 0f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     318:	03 e0 07 00 0e 00 1c 00 1c 00 1f f0 1f f8 1c 38     ...............8
     328:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     338:	1f fc 1c 1c 1c 1c 1c 1c 00 1c 00 38 00 70 00 e0     ...........8.p..
     348:	01 c0 03 80 03 80 03 80 00 00 00 00 00 00 00 00     ................
     358:	0f f0 1c 38 1c 38 1c 38 1f 38 07 e0 07 e0 1c f8     ...8.8.8.8......
     368:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     378:	0f f0 1c 38 1c 38 1c 38 1c 38 1f f8 0f f8 00 38     ...8.8.8.8.....8
     388:	00 38 00 70 00 e0 07 c0 00 00 00 00 00 00 00 00     .8.p............
     398:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3a8:	03 80 03 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     3b8:	00 00 00 00 03 80 03 80 03 80 00 00 00 00 03 80     ................
     3c8:	03 80 03 80 07 00 00 00 00 00 00 00 00 00 00 70     ...............p
     3d8:	00 e0 01 c0 03 80 07 00 0e 00 1c 00 1c 00 0e 00     ................
     3e8:	07 00 03 80 01 c0 00 e0 00 70 00 00 00 00 00 00     .........p......
     3f8:	00 00 00 00 00 00 3f fc 3f fc 00 00 00 00 3f fc     ......?.?.....?.
     408:	3f fc 00 00 00 00 00 00 00 00 00 00 00 00 1c 00     ?...............
     418:	0e 00 07 00 03 80 01 c0 00 e0 00 70 00 70 00 e0     ...........p.p..
     428:	01 c0 03 80 07 00 0e 00 1c 00 00 00 00 00 03 c0     ................
     438:	0f f0 1e 78 18 38 00 38 00 70 00 e0 01 c0 01 c0     ...x.8.8.p......
     448:	00 00 00 00 01 c0 01 c0 01 c0 00 00 00 00 0f f8     ................
     458:	1c 1c 1c 1c 1c 1c 1c 1c 1c fc 1c fc 1c fc 1c fc     ................
     468:	1c 00 1c 00 1c 00 1f f0 07 f8 00 00 00 00 00 00     ................
     478:	03 c0 07 e0 0e 70 1c 38 1c 38 1c 38 1c 38 1f f8     .....p.8.8.8.8..
     488:	1c 38 1c 38 1c 38 1c 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     498:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 38     ...8.8.8.8.....8
     4a8:	0e 38 0e 38 0e 38 1f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     4b8:	07 f0 0e 38 1c 38 1c 00 1c 00 1c 00 1c 00 1c 00     ...8.8..........
     4c8:	1c 00 1c 38 0e 38 07 f0 00 00 00 00 00 00 00 00     ...8.8..........
     4d8:	1f e0 0e 70 0e 38 0e 38 0e 38 0e 38 0e 38 0e 38     ...p.8.8.8.8.8.8
     4e8:	0e 38 0e 38 0e 70 1f e0 00 00 00 00 00 00 00 00     .8.8.p..........
     4f8:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     508:	0e 00 0e 08 0e 18 1f f8 00 00 00 00 00 00 00 00     ................
     518:	1f f8 0e 18 0e 08 0e 00 0e 30 0f f0 0f f0 0e 30     .........0.....0
     528:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     538:	07 f0 0e 38 1c 38 1c 38 1c 00 1c 00 1c 00 1c f8     ...8.8.8........
     548:	1c 38 1c 38 0e 38 07 f8 00 00 00 00 00 00 00 00     .8.8.8..........
     558:	1c 70 1c 70 1c 70 1c 70 1c 70 1f f0 1f f0 1c 70     .p.p.p.p.p.....p
     568:	1c 70 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     .p.p.p.p........
     578:	0f e0 03 80 03 80 03 80 03 80 03 80 03 80 03 80     ................
     588:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     598:	01 fc 00 70 00 70 00 70 00 70 00 70 00 70 38 70     ...p.p.p.p.p.p8p
     5a8:	38 70 38 70 38 70 0f e0 00 00 00 00 00 00 00 00     8p8p8p..........
     5b8:	1e 38 0e 38 0e 70 0e e0 0f c0 0f 80 0f 80 0f c0     .8.8.p..........
     5c8:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     5d8:	1f 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00 0e 00     ................
     5e8:	0e 08 0e 18 0e 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     5f8:	1c 1c 1e 3c 1f 7c 1f fc 1f fc 1d dc 1c 9c 1c 1c     ...<.|..........
     608:	1c 1c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     ................
     618:	1c 1c 1c 1c 1e 1c 1f 1c 1f 9c 1d dc 1c fc 1c 7c     ...............|
     628:	1c 3c 1c 1c 1c 1c 1c 1c 00 00 00 00 00 00 00 00     .<..............
     638:	03 e0 07 f0 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c     .....8..........
     648:	1c 1c 0e 38 07 f0 03 e0 00 00 00 00 00 00 00 00     ...8............
     658:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 00     ...8.8.8.8......
     668:	0e 00 0e 00 0e 00 1f 00 00 00 00 00 00 00 00 00     ................
     678:	03 e0 0f 78 0e 38 1c 1c 1c 1c 1c 1c 1c 1c 1c 7c     ...x.8.........|
     688:	1c fc 0f f8 0f f8 00 38 00 fc 00 00 00 00 00 00     .......8........
     698:	1f f0 0e 38 0e 38 0e 38 0e 38 0f f0 0f f0 0e 70     ...8.8.8.8.....p
     6a8:	0e 38 0e 38 0e 38 1e 38 00 00 00 00 00 00 00 00     .8.8.8.8........
     6b8:	0f f0 1c 38 1c 38 1c 38 1c 00 0f e0 07 f0 00 38     ...8.8.8.......8
     6c8:	1c 38 1c 38 1c 38 0f f0 00 00 00 00 00 00 00 00     .8.8.8..........
     6d8:	1f fc 19 cc 11 c4 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     6e8:	01 c0 01 c0 01 c0 07 f0 00 00 00 00 00 00 00 00     ................
     6f8:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     708:	1c 70 1c 70 1c 70 0f e0 00 00 00 00 00 00 00 00     .p.p.p..........
     718:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     .p.p.p.p.p.p.p.p
     728:	1c 70 0e e0 07 c0 03 80 00 00 00 00 00 00 00 00     .p..............
     738:	1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 1c 9c     ................
     748:	0f f8 0f f8 07 70 07 70 00 00 00 00 00 00 00 00     .....p.p........
     758:	1c 70 1c 70 1c 70 0e e0 07 c0 03 80 03 80 07 c0     .p.p.p..........
     768:	0e e0 1c 70 1c 70 1c 70 00 00 00 00 00 00 00 00     ...p.p.p........
     778:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
     788:	03 80 03 80 03 80 0f e0 00 00 00 00 00 00 00 00     ................
     798:	1f f8 1c 38 18 38 10 70 00 e0 01 c0 03 80 07 00     ...8.8.p........
     7a8:	0e 08 1c 18 1c 38 1f f8 00 00 00 00 00 00 00 00     .....8..........
     7b8:	07 f0 07 00 07 00 07 00 07 00 07 00 07 00 07 00     ................
     7c8:	07 00 07 00 07 00 07 f0 00 00 00 00 00 00 00 00     ................
     7d8:	10 00 18 00 1c 00 0e 00 07 00 03 80 01 c0 00 e0     ................
     7e8:	00 70 00 38 00 1c 00 07 00 00 00 00 00 00 00 00     .p.8............
     7f8:	07 f0 00 70 00 70 00 70 00 70 00 70 00 70 00 70     ...p.p.p.p.p.p.p
     808:	00 70 00 70 00 70 07 f0 00 00 00 00 00 00 01 80     .p.p.p..........
     818:	03 c0 07 e0 0e 70 1c 38 00 00 00 00 00 00 00 00     .....p.8........
	...
     850:	7f ff 7f ff 00 00 00 00 1c 00 1c 00 07 00 07 00     ................
	...
     880:	0f e0 00 70 00 70 0f f0 1c 70 1c 70 1c 70 0f d8     ...p.p...p.p.p..
	...
     898:	1e 00 0e 00 0e 00 0e 00 0f f0 0e 38 0e 38 0e 38     ...........8.8.8
     8a8:	0e 38 0e 38 0e 38 1b f0 00 00 00 00 00 00 00 00     .8.8.8..........
	...
     8c0:	0f e0 1c 70 1c 70 1c 00 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     8d8:	00 f8 00 70 00 70 00 70 0f f0 1c 70 1c 70 1c 70     ...p.p.p...p.p.p
     8e8:	1c 70 1c 70 1c 70 0f d8 00 00 00 00 00 00 00 00     .p.p.p..........
	...
     900:	0f e0 1c 70 1c 70 1f f0 1c 00 1c 70 1c 70 0f e0     ...p.p.....p.p..
	...
     918:	03 e0 07 70 07 70 07 00 07 00 1f e0 1f e0 07 00     ...p.p..........
     928:	07 00 07 00 07 00 1f c0 00 00 00 00 00 00 00 00     ................
	...
     940:	0f d8 1c 70 1c 70 1c 70 1c 70 0f f0 07 f0 00 70     ...p.p.p.p.....p
     950:	1c 70 0f e0 00 00 00 00 1e 00 0e 00 0e 00 0e 00     .p..............
     960:	0e f0 0f 38 0f 38 0e 38 0e 38 0e 38 0e 38 1e 38     ...8.8.8.8.8.8.8
	...
     978:	01 c0 01 c0 01 c0 00 00 0f c0 01 c0 01 c0 01 c0     ................
     988:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
     998:	00 70 00 70 00 70 00 00 03 f0 00 70 00 70 00 70     .p.p.p.....p.p.p
     9a8:	00 70 00 70 00 70 1c 70 0c f0 07 e0 00 00 00 00     .p.p.p.p........
     9b8:	1e 00 0e 00 0e 00 0e 00 0e 38 0e 70 0e e0 0f c0     .........8.p....
     9c8:	0e e0 0e 70 0e 38 1e 38 00 00 00 00 00 00 00 00     ...p.8.8........
     9d8:	0f c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     9e8:	01 c0 01 c0 01 c0 0f f8 00 00 00 00 00 00 00 00     ................
	...
     a00:	1f f8 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c 1c 9c     ................
	...
     a20:	1f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70     ...p.p.p.p.p.p.p
	...
     a40:	0f e0 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f e0     ...p.p.p.p.p.p..
	...
     a60:	1b f0 0e 38 0e 38 0e 38 0e 38 0e 38 0f f0 0e 00     ...8.8.8.8.8....
     a70:	0e 00 1f 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     a80:	1f b0 38 e0 38 e0 38 e0 38 e0 38 e0 1f e0 00 e0     ..8.8.8.8.8.....
     a90:	00 e0 01 f0 00 00 00 00 00 00 00 00 00 00 00 00     ................
     aa0:	1e f0 0f f8 0f 38 0e 00 0e 00 0e 00 0e 00 1f 00     .....8..........
	...
     ac0:	0f e0 1c 30 1c 30 0f 80 03 e0 18 70 18 70 0f e0     ...0.0.....p.p..
	...
     ad8:	00 00 01 00 03 00 07 00 1f f0 07 00 07 00 07 00     ................
     ae8:	07 00 07 70 07 70 03 e0 00 00 00 00 00 00 00 00     ...p.p..........
	...
     b00:	1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 1c 70 0f d8     .p.p.p.p.p.p.p..
	...
     b20:	1c 70 1c 70 1c 70 1c 70 1c 70 0e e0 07 c0 03 80     .p.p.p.p.p......
	...
     b40:	1c 1c 1c 1c 1c 1c 1c 9c 1c 9c 0f f8 07 70 07 70     .............p.p
	...
     b60:	1c e0 1c e0 0f c0 07 80 07 80 0f c0 1c e0 1c e0     ................
	...
     b80:	0e 38 0e 38 0e 38 0e 38 0e 38 07 f0 03 e0 00 e0     .8.8.8.8.8......
     b90:	01 c0 1f 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
     ba0:	1f e0 18 e0 11 c0 03 80 07 00 0e 20 1c 60 1f e0     ........... .`..
	...
     bb8:	01 f8 03 80 03 80 03 80 07 00 1c 00 1c 00 07 00     ................
     bc8:	03 80 03 80 03 80 01 f8 00 00 00 00 00 00 01 c0     ................
     bd8:	01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0 01 c0     ................
     be8:	01 c0 01 c0 01 c0 01 c0 01 c0 00 00 00 00 00 00     ................
     bf8:	1f 80 01 c0 01 c0 01 c0 00 e0 00 38 00 38 00 e0     ...........8.8..
     c08:	01 c0 01 c0 01 c0 1f 80 00 00 00 00 00 00 00 00     ................
     c18:	1f 1c 3b 9c 39 dc 38 f8 00 00 00 00 00 00 00 00     ..;.9.8.........
	...

00000c34 <SmallFont>:
	...
     c40:	00 00 20 20 30 50 50 78 48 cc 00 00 00 28 50 50     ..  0PPxH....(PP
	...
     c58:	00 00 28 28 fc 28 50 fc 50 50 00 00 00 20 78 a8     ..((.(P.PP... x.
     c68:	a0 60 30 28 a8 f0 20 00 00 00 48 a8 b0 50 28 34     .`0(.. ...H..P(4
     c78:	54 48 00 00 00 00 20 50 50 78 a8 a8 90 6c 00 00     TH.... PPx...l..
     c88:	00 40 40 80 00 00 00 00 00 00 00 00 00 04 08 10     .@@.............
     c98:	10 10 10 10 10 08 04 00 00 40 20 10 10 10 10 10     .........@ .....
     ca8:	10 20 40 00 00 00 00 20 a8 70 70 a8 20 00 00 00     . @.... .pp. ...
     cb8:	00 00 20 20 20 f8 20 20 20 00 00 00 00 00 00 00     ..   .   .......
     cc8:	00 00 00 00 00 40 40 80 00 00 00 00 00 f8 00 00     .....@@.........
	...
     ce4:	00 40 00 00 00 08 10 10 10 20 20 40 40 40 80 00     .@.......  @@@..
     cf4:	00 00 70 88 88 88 88 88 88 70 00 00 00 00 20 60     ..p......p.... `
     d04:	20 20 20 20 20 70 00 00 00 00 70 88 88 10 20 40          p....p... @
     d14:	80 f8 00 00 00 00 70 88 08 30 08 08 88 70 00 00     ......p..0...p..
     d24:	00 00 10 30 50 50 90 78 10 18 00 00 00 00 f8 80     ...0PP.x........
     d34:	80 f0 08 08 88 70 00 00 00 00 70 90 80 f0 88 88     .....p....p.....
     d44:	88 70 00 00 00 00 f8 90 10 20 20 20 20 20 00 00     .p.......     ..
     d54:	00 00 70 88 88 70 88 88 88 70 00 00 00 00 70 88     ..p..p...p....p.
     d64:	88 88 78 08 48 70 00 00 00 00 00 00 20 00 00 00     ..x.Hp...... ...
     d74:	00 20 00 00 00 00 00 00 00 20 00 00 00 20 20 00     . ....... ...  .
     d84:	00 04 08 10 20 40 20 10 08 04 00 00 00 00 00 00     .... @ .........
     d94:	f8 00 00 f8 00 00 00 00 00 40 20 10 08 04 08 10     .........@ .....
     da4:	20 40 00 00 00 00 70 88 88 10 20 20 00 20 00 00      @....p...  . ..
     db4:	00 00 70 88 98 a8 a8 b8 80 78 00 00 00 00 20 20     ..p......x....  
     dc4:	30 50 50 78 48 cc 00 00 00 00 f0 48 48 70 48 48     0PPxH......HHpHH
     dd4:	48 f0 00 00 00 00 78 88 80 80 80 80 88 70 00 00     H.....x......p..
     de4:	00 00 f0 48 48 48 48 48 48 f0 00 00 00 00 f8 48     ...HHHHHH......H
     df4:	50 70 50 40 48 f8 00 00 00 00 f8 48 50 70 50 40     PpP@H......HPpP@
     e04:	40 e0 00 00 00 00 38 48 80 80 9c 88 48 30 00 00     @.....8H....H0..
     e14:	00 00 cc 48 48 78 48 48 48 cc 00 00 00 00 f8 20     ...HHxHHH...... 
     e24:	20 20 20 20 20 f8 00 00 00 00 7c 10 10 10 10 10          .....|.....
     e34:	10 90 e0 00 00 00 ec 48 50 60 50 50 48 ec 00 00     .......HP`PPH...
     e44:	00 00 e0 40 40 40 40 40 44 fc 00 00 00 00 d8 d8     ...@@@@@D.......
     e54:	d8 d8 a8 a8 a8 a8 00 00 00 00 dc 48 68 68 58 58     ...........HhhXX
     e64:	48 e8 00 00 00 00 70 88 88 88 88 88 88 70 00 00     H.....p......p..
     e74:	00 00 f0 48 48 70 40 40 40 e0 00 00 00 00 70 88     ...HHp@@@.....p.
     e84:	88 88 88 e8 98 70 18 00 00 00 f0 48 48 70 50 48     .....p.....HHpPH
     e94:	48 ec 00 00 00 00 78 88 80 60 10 08 88 f0 00 00     H.....x..`......
     ea4:	00 00 f8 a8 20 20 20 20 20 70 00 00 00 00 cc 48     ....     p.....H
     eb4:	48 48 48 48 48 30 00 00 00 00 cc 48 48 50 50 30     HHHHH0.....HHPP0
     ec4:	20 20 00 00 00 00 a8 a8 a8 70 50 50 50 50 00 00       .......pPPPP..
     ed4:	00 00 d8 50 50 20 20 50 50 d8 00 00 00 00 d8 50     ...PP  PP......P
     ee4:	50 20 20 20 20 70 00 00 00 00 f8 90 10 20 20 40     P    p.......  @
     ef4:	48 f8 00 00 00 38 20 20 20 20 20 20 20 20 38 00     H....8        8.
     f04:	00 40 40 40 20 20 10 10 10 08 00 00 00 70 10 10     .@@@  .......p..
     f14:	10 10 10 10 10 10 70 00 00 20 50 00 00 00 00 00     ......p.. P.....
	...
     f30:	00 00 00 fc 00 20 00 00 00 00 00 00 00 00 00 00     ..... ..........
     f40:	00 00 00 00 00 30 48 38 48 3c 00 00 00 00 c0 40     .....0H8H<.....@
     f50:	40 70 48 48 48 70 00 00 00 00 00 00 00 38 48 40     @pHHHp.......8H@
     f60:	40 38 00 00 00 00 18 08 08 38 48 48 48 3c 00 00     @8.......8HHH<..
     f70:	00 00 00 00 00 30 48 78 40 38 00 00 00 00 1c 20     .....0Hx@8..... 
     f80:	20 78 20 20 20 78 00 00 00 00 00 00 00 3c 48 30      x   x.......<H0
     f90:	40 78 44 38 00 00 c0 40 40 70 48 48 48 ec 00 00     @xD8...@@pHHH...
     fa0:	00 00 20 00 00 60 20 20 20 70 00 00 00 00 10 00     .. ..`   p......
     fb0:	00 30 10 10 10 10 10 e0 00 00 c0 40 40 5c 50 70     .0.........@@\Pp
     fc0:	48 ec 00 00 00 00 e0 20 20 20 20 20 20 f8 00 00     H......      ...
     fd0:	00 00 00 00 00 f0 a8 a8 a8 a8 00 00 00 00 00 00     ................
     fe0:	00 f0 48 48 48 ec 00 00 00 00 00 00 00 30 48 48     ..HHH........0HH
     ff0:	48 30 00 00 00 00 00 00 00 f0 48 48 48 70 40 e0     H0........HHHp@.
    1000:	00 00 00 00 00 38 48 48 48 38 08 1c 00 00 00 00     .....8HHH8......
    1010:	00 d8 60 40 40 e0 00 00 00 00 00 00 00 78 40 30     ..`@@........x@0
    1020:	08 78 00 00 00 00 00 20 20 70 20 20 20 18 00 00     .x.....  p   ...
    1030:	00 00 00 00 00 d8 48 48 48 3c 00 00 00 00 00 00     ......HHH<......
    1040:	00 ec 48 50 30 20 00 00 00 00 00 00 00 a8 a8 70     ..HP0 .........p
    1050:	50 50 00 00 00 00 00 00 00 d8 50 20 50 d8 00 00     PP........P P...
    1060:	00 00 00 00 00 ec 48 50 30 20 20 c0 00 00 00 00     ......HP0  .....
    1070:	00 78 10 20 20 78 00 00 00 18 10 10 10 20 10 10     .x.  x....... ..
    1080:	10 10 18 00 10 10 10 10 10 10 10 10 10 10 10 10     ................
    1090:	00 60 20 20 20 10 20 20 20 20 60 00 40 a4 18 00     .`   .    `.@...
	...

000010a8 <__ctors_end>:
    10a8:	11 24       	eor	r1, r1
    10aa:	1f be       	out	0x3f, r1	; 63
    10ac:	cf e5       	ldi	r28, 0x5F	; 95
    10ae:	d4 e0       	ldi	r29, 0x04	; 4
    10b0:	de bf       	out	0x3e, r29	; 62
    10b2:	cd bf       	out	0x3d, r28	; 61

000010b4 <__do_copy_data>:
    10b4:	11 e0       	ldi	r17, 0x01	; 1
    10b6:	a0 e6       	ldi	r26, 0x60	; 96
    10b8:	b0 e0       	ldi	r27, 0x00	; 0
    10ba:	e2 e3       	ldi	r30, 0x32	; 50
    10bc:	f3 e2       	ldi	r31, 0x23	; 35
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <__do_copy_data+0x10>
    10c0:	05 90       	lpm	r0, Z+
    10c2:	0d 92       	st	X+, r0
    10c4:	a0 34       	cpi	r26, 0x40	; 64
    10c6:	b1 07       	cpc	r27, r17
    10c8:	d9 f7       	brne	.-10     	; 0x10c0 <__do_copy_data+0xc>

000010ca <__do_clear_bss>:
    10ca:	21 e0       	ldi	r18, 0x01	; 1
    10cc:	a0 e4       	ldi	r26, 0x40	; 64
    10ce:	b1 e0       	ldi	r27, 0x01	; 1
    10d0:	01 c0       	rjmp	.+2      	; 0x10d4 <.do_clear_bss_start>

000010d2 <.do_clear_bss_loop>:
    10d2:	1d 92       	st	X+, r1

000010d4 <.do_clear_bss_start>:
    10d4:	a4 34       	cpi	r26, 0x44	; 68
    10d6:	b2 07       	cpc	r27, r18
    10d8:	e1 f7       	brne	.-8      	; 0x10d2 <.do_clear_bss_loop>
    10da:	0e 94 a7 0d 	call	0x1b4e	; 0x1b4e <main>
    10de:	0c 94 97 11 	jmp	0x232e	; 0x232e <_exit>

000010e2 <__bad_interrupt>:
    10e2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000010e6 <Init_595>:
#define DS 5			//DATA
#define SH_CP 7			//SRC
#define ST_CP 6			//RCL
void Init_595()
{
	PORT_595|=(0<<DS)|(0<<ST_CP)|(0<<SH_CP);
    10e6:	85 b3       	in	r24, 0x15	; 21
    10e8:	85 bb       	out	0x15, r24	; 21
	DDR_595|=(1<<DS)|(1<<ST_CP)|(1<<SH_CP);
    10ea:	84 b3       	in	r24, 0x14	; 20
    10ec:	80 6e       	ori	r24, 0xE0	; 224
    10ee:	84 bb       	out	0x14, r24	; 20
    10f0:	08 95       	ret

000010f2 <Ship_595>:
}
void Ship_595(unsigned int data)
{
    10f2:	28 e0       	ldi	r18, 0x08	; 8
    10f4:	30 e0       	ldi	r19, 0x00	; 0
	for (int i=8;i>0;i--)
	{
		if((data&0x80)==0x80)
    10f6:	87 ff       	sbrs	r24, 7
    10f8:	02 c0       	rjmp	.+4      	; 0x10fe <Ship_595+0xc>
			setb(PORT_595,DS);
    10fa:	ad 9a       	sbi	0x15, 5	; 21
    10fc:	01 c0       	rjmp	.+2      	; 0x1100 <Ship_595+0xe>
		else
			clrb(PORT_595,DS);
    10fe:	ad 98       	cbi	0x15, 5	; 21
		data=data<<1;
    1100:	88 0f       	add	r24, r24
    1102:	99 1f       	adc	r25, r25
		clrb(PORT_595,SH_CP);//xung clk cua thanh ghi dich
    1104:	af 98       	cbi	0x15, 7	; 21
		setb(PORT_595,SH_CP);
    1106:	af 9a       	sbi	0x15, 7	; 21
    1108:	21 50       	subi	r18, 0x01	; 1
    110a:	31 09       	sbc	r19, r1
	PORT_595|=(0<<DS)|(0<<ST_CP)|(0<<SH_CP);
	DDR_595|=(1<<DS)|(1<<ST_CP)|(1<<SH_CP);
}
void Ship_595(unsigned int data)
{
	for (int i=8;i>0;i--)
    110c:	21 15       	cp	r18, r1
    110e:	31 05       	cpc	r19, r1
    1110:	91 f7       	brne	.-28     	; 0x10f6 <Ship_595+0x4>
			clrb(PORT_595,DS);
		data=data<<1;
		clrb(PORT_595,SH_CP);//xung clk cua thanh ghi dich
		setb(PORT_595,SH_CP);
	}
	clrb(PORT_595,ST_CP);//xung clk cua thanh ghi dich
    1112:	ae 98       	cbi	0x15, 6	; 21
	setb(PORT_595,ST_CP);
    1114:	ae 9a       	sbi	0x15, 6	; 21
    1116:	08 95       	ret

00001118 <Port_Init>:
unsigned int X_SIZE = 0,Y_SIZE = 0;

//-----------------------------------------------------------------------------------------------------------
void Port_Init()
{
	Ship_595(0x00);
    1118:	80 e0       	ldi	r24, 0x00	; 0
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	0e 94 79 08 	call	0x10f2	; 0x10f2 <Ship_595>
	DDR_DATA=0xFF;
    1120:	8f ef       	ldi	r24, 0xFF	; 255
    1122:	87 bb       	out	0x17, r24	; 23
	DDR_CMD|=(1<<LCD_RESET)|(1<<LCD_CS)|(1<<LCD_CD)|(1<<LCD_WR)|(1<<LCD_RD);
    1124:	84 b3       	in	r24, 0x14	; 20
    1126:	8f 61       	ori	r24, 0x1F	; 31
    1128:	84 bb       	out	0x14, r24	; 20
    112a:	08 95       	ret

0000112c <TFT_SendCommand>:
}
//-----------------------------------------------------------------------------------------------------------
void TFT_SendCommand(unsigned char cmd)
{
	CD_COMMAND;
    112c:	aa 98       	cbi	0x15, 2	; 21
	RD_IDLE;
    112e:	ac 9a       	sbi	0x15, 4	; 21
	CS_ACTIVE;
    1130:	a9 98       	cbi	0x15, 1	; 21
	Ship_595(cmd);
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	0e 94 79 08 	call	0x10f2	; 0x10f2 <Ship_595>
	WR_STROBE;
    1138:	ab 98       	cbi	0x15, 3	; 21
    113a:	ab 9a       	sbi	0x15, 3	; 21
	CS_IDLE;
    113c:	a9 9a       	sbi	0x15, 1	; 21
    113e:	08 95       	ret

00001140 <TFT_SendData>:
}
//-----------------------------------------------------------------------------------------------------------
void TFT_SendData(unsigned char dt)
{
	CD_DATA;
    1140:	aa 9a       	sbi	0x15, 2	; 21
	RD_IDLE;
    1142:	ac 9a       	sbi	0x15, 4	; 21
	CS_ACTIVE;
    1144:	a9 98       	cbi	0x15, 1	; 21
	Ship_595(dt);
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	0e 94 79 08 	call	0x10f2	; 0x10f2 <Ship_595>
	WR_STROBE;
    114c:	ab 98       	cbi	0x15, 3	; 21
    114e:	ab 9a       	sbi	0x15, 3	; 21
	CS_IDLE;		
    1150:	a9 9a       	sbi	0x15, 1	; 21
    1152:	08 95       	ret

00001154 <TFT_Write8>:
}
//-----------------------------------------------------------------------------------------------------------
void TFT_Write8(unsigned char dt)
{
	Ship_595(dt);
    1154:	90 e0       	ldi	r25, 0x00	; 0
    1156:	0e 94 79 08 	call	0x10f2	; 0x10f2 <Ship_595>
	WR_STROBE;
    115a:	ab 98       	cbi	0x15, 3	; 21
    115c:	ab 9a       	sbi	0x15, 3	; 21
    115e:	08 95       	ret

00001160 <TFT_SetRotation>:
// 	_delay_us(150);//stabilization time
	return id;
}
//-----------------------------------------------------------------------------------------------------------
void TFT_SetRotation(unsigned char r)
{
    1160:	cf 93       	push	r28
    1162:	c8 2f       	mov	r28, r24
	TFT_SendCommand(0x36);
    1164:	86 e3       	ldi	r24, 0x36	; 54
    1166:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	switch(r)
    116a:	c1 30       	cpi	r28, 0x01	; 1
    116c:	b1 f0       	breq	.+44     	; 0x119a <TFT_SetRotation+0x3a>
    116e:	28 f0       	brcs	.+10     	; 0x117a <TFT_SetRotation+0x1a>
    1170:	c2 30       	cpi	r28, 0x02	; 2
    1172:	19 f1       	breq	.+70     	; 0x11ba <TFT_SetRotation+0x5a>
    1174:	c3 30       	cpi	r28, 0x03	; 3
    1176:	89 f1       	breq	.+98     	; 0x11da <TFT_SetRotation+0x7a>
    1178:	3f c0       	rjmp	.+126    	; 0x11f8 <TFT_SetRotation+0x98>
	{
		case 0:
		TFT_SendData(0x48);
    117a:	88 e4       	ldi	r24, 0x48	; 72
    117c:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
		X_SIZE = 240;
    1180:	80 ef       	ldi	r24, 0xF0	; 240
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	90 93 43 01 	sts	0x0143, r25
    1188:	80 93 42 01 	sts	0x0142, r24
		Y_SIZE = 320;
    118c:	80 e4       	ldi	r24, 0x40	; 64
    118e:	91 e0       	ldi	r25, 0x01	; 1
    1190:	90 93 41 01 	sts	0x0141, r25
    1194:	80 93 40 01 	sts	0x0140, r24
		break;
    1198:	2f c0       	rjmp	.+94     	; 0x11f8 <TFT_SetRotation+0x98>
		case 1:
		TFT_SendData(0x28);
    119a:	88 e2       	ldi	r24, 0x28	; 40
    119c:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
		X_SIZE = 320;
    11a0:	80 e4       	ldi	r24, 0x40	; 64
    11a2:	91 e0       	ldi	r25, 0x01	; 1
    11a4:	90 93 43 01 	sts	0x0143, r25
    11a8:	80 93 42 01 	sts	0x0142, r24
		Y_SIZE = 240;
    11ac:	80 ef       	ldi	r24, 0xF0	; 240
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	90 93 41 01 	sts	0x0141, r25
    11b4:	80 93 40 01 	sts	0x0140, r24
		break;
    11b8:	1f c0       	rjmp	.+62     	; 0x11f8 <TFT_SetRotation+0x98>
		case 2:
		TFT_SendData(0x88);
    11ba:	88 e8       	ldi	r24, 0x88	; 136
    11bc:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
		X_SIZE = 240;
    11c0:	80 ef       	ldi	r24, 0xF0	; 240
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	90 93 43 01 	sts	0x0143, r25
    11c8:	80 93 42 01 	sts	0x0142, r24
		Y_SIZE = 320;
    11cc:	80 e4       	ldi	r24, 0x40	; 64
    11ce:	91 e0       	ldi	r25, 0x01	; 1
    11d0:	90 93 41 01 	sts	0x0141, r25
    11d4:	80 93 40 01 	sts	0x0140, r24
		break;
    11d8:	0f c0       	rjmp	.+30     	; 0x11f8 <TFT_SetRotation+0x98>
		case 3:
		TFT_SendData(0xE8);
    11da:	88 ee       	ldi	r24, 0xE8	; 232
    11dc:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
		X_SIZE = 320;
    11e0:	80 e4       	ldi	r24, 0x40	; 64
    11e2:	91 e0       	ldi	r25, 0x01	; 1
    11e4:	90 93 43 01 	sts	0x0143, r25
    11e8:	80 93 42 01 	sts	0x0142, r24
		Y_SIZE = 240;
    11ec:	80 ef       	ldi	r24, 0xF0	; 240
    11ee:	90 e0       	ldi	r25, 0x00	; 0
    11f0:	90 93 41 01 	sts	0x0141, r25
    11f4:	80 93 40 01 	sts	0x0140, r24
		break;
	}
}
    11f8:	cf 91       	pop	r28
    11fa:	08 95       	ret

000011fc <TFT_Flood>:
//-----------------------------------------------------------------------------------------------------------
void TFT_Flood(unsigned short color,unsigned long len)
{
    11fc:	af 92       	push	r10
    11fe:	bf 92       	push	r11
    1200:	cf 92       	push	r12
    1202:	df 92       	push	r13
    1204:	ef 92       	push	r14
    1206:	ff 92       	push	r15
    1208:	0f 93       	push	r16
    120a:	1f 93       	push	r17
    120c:	cf 93       	push	r28
    120e:	df 93       	push	r29
    1210:	c8 2f       	mov	r28, r24
    1212:	d9 2f       	mov	r29, r25
    1214:	6a 01       	movw	r12, r20
    1216:	7b 01       	movw	r14, r22
	unsigned short blocks;
	unsigned char i,hi = color>>8,lo=color;
    1218:	19 2f       	mov	r17, r25
    121a:	08 2f       	mov	r16, r24
	CS_ACTIVE;
    121c:	a9 98       	cbi	0x15, 1	; 21
	CD_COMMAND;
    121e:	aa 98       	cbi	0x15, 2	; 21
	TFT_Write8(0x2C);
    1220:	8c e2       	ldi	r24, 0x2C	; 44
    1222:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
	CD_DATA;
    1226:	aa 9a       	sbi	0x15, 2	; 21
	TFT_Write8(hi);
    1228:	8d 2f       	mov	r24, r29
    122a:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
	TFT_Write8(lo);
    122e:	8c 2f       	mov	r24, r28
    1230:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
	len--;
    1234:	81 e0       	ldi	r24, 0x01	; 1
    1236:	c8 1a       	sub	r12, r24
    1238:	d1 08       	sbc	r13, r1
    123a:	e1 08       	sbc	r14, r1
    123c:	f1 08       	sbc	r15, r1
	blocks=(unsigned short)(len/64);//64pitxel/block
    123e:	b7 01       	movw	r22, r14
    1240:	a6 01       	movw	r20, r12
    1242:	68 94       	set
    1244:	15 f8       	bld	r1, 5
    1246:	76 95       	lsr	r23
    1248:	67 95       	ror	r22
    124a:	57 95       	ror	r21
    124c:	47 95       	ror	r20
    124e:	16 94       	lsr	r1
    1250:	d1 f7       	brne	.-12     	; 0x1246 <TFT_Flood+0x4a>
    1252:	9a 01       	movw	r18, r20
	if (hi==lo)
    1254:	dc 17       	cp	r29, r28
    1256:	29 f0       	breq	.+10     	; 0x1262 <TFT_Flood+0x66>
    1258:	ea 01       	movw	r28, r20
			WR_STROBE;
		}
	}//end if
	else
	{
		while(blocks--)
    125a:	68 94       	set
    125c:	aa 24       	eor	r10, r10
    125e:	a4 f8       	bld	r10, 4
    1260:	41 c0       	rjmp	.+130    	; 0x12e4 <TFT_Flood+0xe8>
	TFT_Write8(lo);
	len--;
	blocks=(unsigned short)(len/64);//64pitxel/block
	if (hi==lo)
	{
		while(blocks--)
    1262:	90 e1       	ldi	r25, 0x10	; 16
    1264:	12 c0       	rjmp	.+36     	; 0x128a <TFT_Flood+0x8e>
		{
			i=16;
			do 
			{
				WR_STROBE;WR_STROBE;WR_STROBE;WR_STROBE;//2byte/pitxel
    1266:	ab 98       	cbi	0x15, 3	; 21
    1268:	ab 9a       	sbi	0x15, 3	; 21
    126a:	ab 98       	cbi	0x15, 3	; 21
    126c:	ab 9a       	sbi	0x15, 3	; 21
    126e:	ab 98       	cbi	0x15, 3	; 21
    1270:	ab 9a       	sbi	0x15, 3	; 21
    1272:	ab 98       	cbi	0x15, 3	; 21
    1274:	ab 9a       	sbi	0x15, 3	; 21
				WR_STROBE;WR_STROBE;WR_STROBE;WR_STROBE;//x4pitxel
    1276:	ab 98       	cbi	0x15, 3	; 21
    1278:	ab 9a       	sbi	0x15, 3	; 21
    127a:	ab 98       	cbi	0x15, 3	; 21
    127c:	ab 9a       	sbi	0x15, 3	; 21
    127e:	ab 98       	cbi	0x15, 3	; 21
    1280:	ab 9a       	sbi	0x15, 3	; 21
    1282:	ab 98       	cbi	0x15, 3	; 21
    1284:	ab 9a       	sbi	0x15, 3	; 21
    1286:	81 50       	subi	r24, 0x01	; 1
			} 
			while (--i);
    1288:	71 f7       	brne	.-36     	; 0x1266 <TFT_Flood+0x6a>
	TFT_Write8(lo);
	len--;
	blocks=(unsigned short)(len/64);//64pitxel/block
	if (hi==lo)
	{
		while(blocks--)
    128a:	21 50       	subi	r18, 0x01	; 1
    128c:	31 09       	sbc	r19, r1
    128e:	10 f0       	brcs	.+4      	; 0x1294 <TFT_Flood+0x98>
    1290:	89 2f       	mov	r24, r25
    1292:	e9 cf       	rjmp	.-46     	; 0x1266 <TFT_Flood+0x6a>
				WR_STROBE;WR_STROBE;WR_STROBE;WR_STROBE;//x4pitxel
			} 
			while (--i);
		}
		//Fill any remaining pixel(1 to 64)
		for (i=(unsigned char)len&63;i--;)
    1294:	9c 2d       	mov	r25, r12
    1296:	9f 73       	andi	r25, 0x3F	; 63
    1298:	8f ef       	ldi	r24, 0xFF	; 255
    129a:	89 0f       	add	r24, r25
    129c:	99 23       	and	r25, r25
    129e:	91 f1       	breq	.+100    	; 0x1304 <TFT_Flood+0x108>
		{
			WR_STROBE;
    12a0:	ab 98       	cbi	0x15, 3	; 21
    12a2:	ab 9a       	sbi	0x15, 3	; 21
			WR_STROBE;
    12a4:	ab 98       	cbi	0x15, 3	; 21
    12a6:	ab 9a       	sbi	0x15, 3	; 21
				WR_STROBE;WR_STROBE;WR_STROBE;WR_STROBE;//x4pitxel
			} 
			while (--i);
		}
		//Fill any remaining pixel(1 to 64)
		for (i=(unsigned char)len&63;i--;)
    12a8:	81 50       	subi	r24, 0x01	; 1
    12aa:	d0 f7       	brcc	.-12     	; 0x12a0 <TFT_Flood+0xa4>
    12ac:	2b c0       	rjmp	.+86     	; 0x1304 <TFT_Flood+0x108>
		while(blocks--)
		{
			i=16;
			do
			{
				TFT_Write8(hi);	TFT_Write8(lo);	TFT_Write8(hi);	TFT_Write8(lo);//2byte/pitxel
    12ae:	81 2f       	mov	r24, r17
    12b0:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
    12b4:	80 2f       	mov	r24, r16
    12b6:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
    12ba:	81 2f       	mov	r24, r17
    12bc:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
    12c0:	80 2f       	mov	r24, r16
    12c2:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
				TFT_Write8(hi);	TFT_Write8(lo);	TFT_Write8(hi);	TFT_Write8(lo);//x4pitxel
    12c6:	81 2f       	mov	r24, r17
    12c8:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
    12cc:	80 2f       	mov	r24, r16
    12ce:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
    12d2:	81 2f       	mov	r24, r17
    12d4:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
    12d8:	80 2f       	mov	r24, r16
    12da:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
    12de:	ba 94       	dec	r11
			}
			while (--i);
    12e0:	31 f7       	brne	.-52     	; 0x12ae <TFT_Flood+0xb2>
    12e2:	21 97       	sbiw	r28, 0x01	; 1
			WR_STROBE;
		}
	}//end if
	else
	{
		while(blocks--)
    12e4:	20 97       	sbiw	r28, 0x00	; 0
    12e6:	11 f0       	breq	.+4      	; 0x12ec <TFT_Flood+0xf0>
    12e8:	ba 2c       	mov	r11, r10
    12ea:	e1 cf       	rjmp	.-62     	; 0x12ae <TFT_Flood+0xb2>
				TFT_Write8(hi);	TFT_Write8(lo);	TFT_Write8(hi);	TFT_Write8(lo);//x4pitxel
			}
			while (--i);
		}
		//Fill any remaining pixel(1 to 64)
		for (i=(unsigned char)len&63;i--;)
    12ec:	8c 2d       	mov	r24, r12
    12ee:	8f 73       	andi	r24, 0x3F	; 63
    12f0:	49 f0       	breq	.+18     	; 0x1304 <TFT_Flood+0x108>
    12f2:	c8 2e       	mov	r12, r24
		{
			TFT_Write8(hi);
    12f4:	81 2f       	mov	r24, r17
    12f6:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
			TFT_Write8(lo);
    12fa:	80 2f       	mov	r24, r16
    12fc:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
    1300:	ca 94       	dec	r12
				TFT_Write8(hi);	TFT_Write8(lo);	TFT_Write8(hi);	TFT_Write8(lo);//x4pitxel
			}
			while (--i);
		}
		//Fill any remaining pixel(1 to 64)
		for (i=(unsigned char)len&63;i--;)
    1302:	c1 f7       	brne	.-16     	; 0x12f4 <TFT_Flood+0xf8>
		{
			TFT_Write8(hi);
			TFT_Write8(lo);
		}
	}
	CS_IDLE;
    1304:	a9 9a       	sbi	0x15, 1	; 21
	
}
    1306:	df 91       	pop	r29
    1308:	cf 91       	pop	r28
    130a:	1f 91       	pop	r17
    130c:	0f 91       	pop	r16
    130e:	ff 90       	pop	r15
    1310:	ef 90       	pop	r14
    1312:	df 90       	pop	r13
    1314:	cf 90       	pop	r12
    1316:	bf 90       	pop	r11
    1318:	af 90       	pop	r10
    131a:	08 95       	ret

0000131c <TFT_Reset>:
//-----------------------------------------------------------------------------------------------------------
void TFT_Reset(void)
{
	CS_IDLE;
    131c:	a9 9a       	sbi	0x15, 1	; 21
	WR_IDLE;
    131e:	ab 9a       	sbi	0x15, 3	; 21
	RD_IDLE;
    1320:	ac 9a       	sbi	0x15, 4	; 21
	RESET_ACTIVE;
    1322:	a8 98       	cbi	0x15, 0	; 21
// 	_delay_ms(2);
	RESET_IDLE;
    1324:	a8 9a       	sbi	0x15, 0	; 21
	CS_ACTIVE;
    1326:	a9 98       	cbi	0x15, 1	; 21
	TFT_SendCommand(0x01);//Softwear Reset
    1328:	81 e0       	ldi	r24, 0x01	; 1
    132a:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
    132e:	83 e0       	ldi	r24, 0x03	; 3
	for (uint8_t i=0;i<3;i++)
		WR_STROBE;
    1330:	ab 98       	cbi	0x15, 3	; 21
    1332:	ab 9a       	sbi	0x15, 3	; 21
    1334:	81 50       	subi	r24, 0x01	; 1
	RESET_ACTIVE;
// 	_delay_ms(2);
	RESET_IDLE;
	CS_ACTIVE;
	TFT_SendCommand(0x01);//Softwear Reset
	for (uint8_t i=0;i<3;i++)
    1336:	e1 f7       	brne	.-8      	; 0x1330 <TFT_Reset+0x14>
		WR_STROBE;
	CS_IDLE;
    1338:	a9 9a       	sbi	0x15, 1	; 21
    133a:	08 95       	ret

0000133c <TFT_WriteReg32>:
	
}
//-----------------------------------------------------------------------------------------------------------
void TFT_WriteReg32(unsigned char r,unsigned long d)
{
    133c:	0f 93       	push	r16
    133e:	1f 93       	push	r17
    1340:	cf 93       	push	r28
    1342:	df 93       	push	r29
    1344:	c4 2f       	mov	r28, r20
    1346:	d5 2f       	mov	r29, r21
    1348:	16 2f       	mov	r17, r22
    134a:	07 2f       	mov	r16, r23
	CS_ACTIVE;
    134c:	a9 98       	cbi	0x15, 1	; 21
	CD_COMMAND;
    134e:	aa 98       	cbi	0x15, 2	; 21
	TFT_Write8(r);
    1350:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
	CD_DATA;
    1354:	aa 9a       	sbi	0x15, 2	; 21
// 	_delay_us(10);
	TFT_Write8(d>>24);
    1356:	80 2f       	mov	r24, r16
    1358:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
// 	_delay_us(10);
	TFT_Write8(d>>16);
    135c:	81 2f       	mov	r24, r17
    135e:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
// 	_delay_us(10);
	TFT_Write8(d>>8);
    1362:	8d 2f       	mov	r24, r29
    1364:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
// 	_delay_us(10);
	TFT_Write8(d);
    1368:	8c 2f       	mov	r24, r28
    136a:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
	CS_IDLE;
    136e:	a9 9a       	sbi	0x15, 1	; 21
}
    1370:	df 91       	pop	r29
    1372:	cf 91       	pop	r28
    1374:	1f 91       	pop	r17
    1376:	0f 91       	pop	r16
    1378:	08 95       	ret

0000137a <TFT_SetAddrWindow>:
//-----------------------------------------------------------------------------------------------------------
void TFT_SetAddrWindow(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2)
{
    137a:	0f 93       	push	r16
    137c:	1f 93       	push	r17
    137e:	cf 93       	push	r28
    1380:	df 93       	push	r29
    1382:	fc 01       	movw	r30, r24
    1384:	8b 01       	movw	r16, r22
    1386:	ca 01       	movw	r24, r20
    1388:	e9 01       	movw	r28, r18
	unsigned long t;
	CS_ACTIVE;
    138a:	a9 98       	cbi	0x15, 1	; 21
	t=x1;
    138c:	af 01       	movw	r20, r30
    138e:	60 e0       	ldi	r22, 0x00	; 0
    1390:	70 e0       	ldi	r23, 0x00	; 0
	t<<=16;
    1392:	ba 01       	movw	r22, r20
    1394:	55 27       	eor	r21, r21
    1396:	44 27       	eor	r20, r20
	t|=x2;
    1398:	a0 e0       	ldi	r26, 0x00	; 0
    139a:	b0 e0       	ldi	r27, 0x00	; 0
    139c:	48 2b       	or	r20, r24
    139e:	59 2b       	or	r21, r25
    13a0:	6a 2b       	or	r22, r26
    13a2:	7b 2b       	or	r23, r27
	TFT_WriteReg32(0x2A,t);//Set Column
    13a4:	8a e2       	ldi	r24, 0x2A	; 42
    13a6:	0e 94 9e 09 	call	0x133c	; 0x133c <TFT_WriteReg32>
	t=y1;
    13aa:	a8 01       	movw	r20, r16
    13ac:	60 e0       	ldi	r22, 0x00	; 0
    13ae:	70 e0       	ldi	r23, 0x00	; 0
	t<<=16;
    13b0:	ba 01       	movw	r22, r20
    13b2:	55 27       	eor	r21, r21
    13b4:	44 27       	eor	r20, r20
	t|=y2;
    13b6:	ce 01       	movw	r24, r28
    13b8:	a0 e0       	ldi	r26, 0x00	; 0
    13ba:	b0 e0       	ldi	r27, 0x00	; 0
    13bc:	48 2b       	or	r20, r24
    13be:	59 2b       	or	r21, r25
    13c0:	6a 2b       	or	r22, r26
    13c2:	7b 2b       	or	r23, r27
	TFT_WriteReg32(0x2B,t);//Set Page
    13c4:	8b e2       	ldi	r24, 0x2B	; 43
    13c6:	0e 94 9e 09 	call	0x133c	; 0x133c <TFT_WriteReg32>
	CS_IDLE;
    13ca:	a9 9a       	sbi	0x15, 1	; 21
}
    13cc:	df 91       	pop	r29
    13ce:	cf 91       	pop	r28
    13d0:	1f 91       	pop	r17
    13d2:	0f 91       	pop	r16
    13d4:	08 95       	ret

000013d6 <TFT_DrawPixel>:
//-----------------------------------------------------------------------------------------------------------
void TFT_DrawPixel(int x,int y,unsigned int color)
{
    13d6:	cf 93       	push	r28
    13d8:	df 93       	push	r29
    13da:	c4 2f       	mov	r28, r20
    13dc:	d5 2f       	mov	r29, r21
	if ((x<0)||(y<0)||(x>=X_SIZE)||(y>=Y_SIZE))
    13de:	99 23       	and	r25, r25
    13e0:	6c f1       	brlt	.+90     	; 0x143c <TFT_DrawPixel+0x66>
    13e2:	77 23       	and	r23, r23
    13e4:	5c f1       	brlt	.+86     	; 0x143c <TFT_DrawPixel+0x66>
    13e6:	20 91 42 01 	lds	r18, 0x0142
    13ea:	30 91 43 01 	lds	r19, 0x0143
    13ee:	82 17       	cp	r24, r18
    13f0:	93 07       	cpc	r25, r19
    13f2:	20 f5       	brcc	.+72     	; 0x143c <TFT_DrawPixel+0x66>
    13f4:	20 91 40 01 	lds	r18, 0x0140
    13f8:	30 91 41 01 	lds	r19, 0x0141
    13fc:	62 17       	cp	r22, r18
    13fe:	73 07       	cpc	r23, r19
    1400:	e8 f4       	brcc	.+58     	; 0x143c <TFT_DrawPixel+0x66>
	return;
	CS_ACTIVE;
    1402:	a9 98       	cbi	0x15, 1	; 21
	TFT_SetAddrWindow(x,y,X_SIZE-1,Y_SIZE-1);
    1404:	20 91 40 01 	lds	r18, 0x0140
    1408:	30 91 41 01 	lds	r19, 0x0141
    140c:	21 50       	subi	r18, 0x01	; 1
    140e:	31 09       	sbc	r19, r1
    1410:	e0 91 42 01 	lds	r30, 0x0142
    1414:	f0 91 43 01 	lds	r31, 0x0143
    1418:	af 01       	movw	r20, r30
    141a:	41 50       	subi	r20, 0x01	; 1
    141c:	51 09       	sbc	r21, r1
    141e:	0e 94 bd 09 	call	0x137a	; 0x137a <TFT_SetAddrWindow>
	CS_ACTIVE;
    1422:	a9 98       	cbi	0x15, 1	; 21
	CD_COMMAND;
    1424:	aa 98       	cbi	0x15, 2	; 21
	TFT_Write8(0x2C);
    1426:	8c e2       	ldi	r24, 0x2C	; 44
    1428:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
	CD_DATA;
    142c:	aa 9a       	sbi	0x15, 2	; 21
	TFT_Write8(color>>8);
    142e:	8d 2f       	mov	r24, r29
    1430:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
	TFT_Write8(color);
    1434:	8c 2f       	mov	r24, r28
    1436:	0e 94 aa 08 	call	0x1154	; 0x1154 <TFT_Write8>
	CS_IDLE;
    143a:	a9 9a       	sbi	0x15, 1	; 21
}
    143c:	df 91       	pop	r29
    143e:	cf 91       	pop	r28
    1440:	08 95       	ret

00001442 <TFT_FillScreen>:
//-----------------------------------------------------------------------------------------------------------
void TFT_FillScreen(unsigned int color)
{
    1442:	cf 93       	push	r28
    1444:	df 93       	push	r29
    1446:	ec 01       	movw	r28, r24
	TFT_SetAddrWindow(0,0,X_SIZE-1,Y_SIZE-1);
    1448:	20 91 40 01 	lds	r18, 0x0140
    144c:	30 91 41 01 	lds	r19, 0x0141
    1450:	21 50       	subi	r18, 0x01	; 1
    1452:	31 09       	sbc	r19, r1
    1454:	40 91 42 01 	lds	r20, 0x0142
    1458:	50 91 43 01 	lds	r21, 0x0143
    145c:	41 50       	subi	r20, 0x01	; 1
    145e:	51 09       	sbc	r21, r1
    1460:	60 e0       	ldi	r22, 0x00	; 0
    1462:	70 e0       	ldi	r23, 0x00	; 0
    1464:	80 e0       	ldi	r24, 0x00	; 0
    1466:	90 e0       	ldi	r25, 0x00	; 0
    1468:	0e 94 bd 09 	call	0x137a	; 0x137a <TFT_SetAddrWindow>
	TFT_Flood(color,(long)X_SIZE*(long)Y_SIZE);
    146c:	20 91 42 01 	lds	r18, 0x0142
    1470:	30 91 43 01 	lds	r19, 0x0143
    1474:	a0 91 40 01 	lds	r26, 0x0140
    1478:	b0 91 41 01 	lds	r27, 0x0141
    147c:	0e 94 a3 0e 	call	0x1d46	; 0x1d46 <__umulhisi3>
    1480:	ab 01       	movw	r20, r22
    1482:	bc 01       	movw	r22, r24
    1484:	ce 01       	movw	r24, r28
    1486:	0e 94 fe 08 	call	0x11fc	; 0x11fc <TFT_Flood>
}
    148a:	df 91       	pop	r29
    148c:	cf 91       	pop	r28
    148e:	08 95       	ret

00001490 <TFT_DrawLineY>:
	TFT_SetAddrWindow(x1,y1,x2,y2);
	TFT_Flood(color,(long)(x2-x1+1)*(long)(y2-y1+1));
}
//-----------------------------------------------------------------------------------------------------------
void TFT_DrawLineY(unsigned int x,unsigned int y1,unsigned int y2,unsigned int color)
{
    1490:	ef 92       	push	r14
    1492:	ff 92       	push	r15
    1494:	0f 93       	push	r16
    1496:	1f 93       	push	r17
    1498:	cf 93       	push	r28
    149a:	df 93       	push	r29
    149c:	eb 01       	movw	r28, r22
    149e:	8a 01       	movw	r16, r20
    14a0:	79 01       	movw	r14, r18
	/*if ((x>=X_SIZE)|(y1>=Y_SIZE)|(y2>=Y_SIZE))
		return;
	if (y1>y2)
		swap(y1,y2);*/
	TFT_SetAddrWindow(x,y1,x,y2);
    14a2:	9a 01       	movw	r18, r20
    14a4:	ac 01       	movw	r20, r24
    14a6:	0e 94 bd 09 	call	0x137a	; 0x137a <TFT_SetAddrWindow>
	TFT_Flood(color,(long)(y2-y1+1));
    14aa:	a8 01       	movw	r20, r16
    14ac:	4f 5f       	subi	r20, 0xFF	; 255
    14ae:	5f 4f       	sbci	r21, 0xFF	; 255
    14b0:	4c 1b       	sub	r20, r28
    14b2:	5d 0b       	sbc	r21, r29
    14b4:	60 e0       	ldi	r22, 0x00	; 0
    14b6:	70 e0       	ldi	r23, 0x00	; 0
    14b8:	c7 01       	movw	r24, r14
    14ba:	0e 94 fe 08 	call	0x11fc	; 0x11fc <TFT_Flood>
}
    14be:	df 91       	pop	r29
    14c0:	cf 91       	pop	r28
    14c2:	1f 91       	pop	r17
    14c4:	0f 91       	pop	r16
    14c6:	ff 90       	pop	r15
    14c8:	ef 90       	pop	r14
    14ca:	08 95       	ret

000014cc <TFT_DrawLineX>:
//-----------------------------------------------------------------------------------------------------------
void TFT_DrawLineX(unsigned int x1,unsigned int x2,unsigned int y,unsigned int color)
{
    14cc:	ef 92       	push	r14
    14ce:	ff 92       	push	r15
    14d0:	0f 93       	push	r16
    14d2:	1f 93       	push	r17
    14d4:	cf 93       	push	r28
    14d6:	df 93       	push	r29
    14d8:	8c 01       	movw	r16, r24
    14da:	eb 01       	movw	r28, r22
    14dc:	ba 01       	movw	r22, r20
    14de:	79 01       	movw	r14, r18
	if ((x1>=X_SIZE)|(x2>=X_SIZE)|(y>=Y_SIZE))
    14e0:	80 91 42 01 	lds	r24, 0x0142
    14e4:	90 91 43 01 	lds	r25, 0x0143
    14e8:	51 e0       	ldi	r21, 0x01	; 1
    14ea:	c8 17       	cp	r28, r24
    14ec:	d9 07       	cpc	r29, r25
    14ee:	08 f4       	brcc	.+2      	; 0x14f2 <TFT_DrawLineX+0x26>
    14f0:	50 e0       	ldi	r21, 0x00	; 0
    14f2:	41 e0       	ldi	r20, 0x01	; 1
    14f4:	20 91 40 01 	lds	r18, 0x0140
    14f8:	30 91 41 01 	lds	r19, 0x0141
    14fc:	62 17       	cp	r22, r18
    14fe:	73 07       	cpc	r23, r19
    1500:	08 f4       	brcc	.+2      	; 0x1504 <TFT_DrawLineX+0x38>
    1502:	40 e0       	ldi	r20, 0x00	; 0
    1504:	45 2b       	or	r20, r21
    1506:	f1 f4       	brne	.+60     	; 0x1544 <TFT_DrawLineX+0x78>
    1508:	21 e0       	ldi	r18, 0x01	; 1
    150a:	08 17       	cp	r16, r24
    150c:	19 07       	cpc	r17, r25
    150e:	08 f4       	brcc	.+2      	; 0x1512 <TFT_DrawLineX+0x46>
    1510:	20 e0       	ldi	r18, 0x00	; 0
    1512:	21 11       	cpse	r18, r1
    1514:	17 c0       	rjmp	.+46     	; 0x1544 <TFT_DrawLineX+0x78>
		return;
	if (x1>x2)
    1516:	c0 17       	cp	r28, r16
    1518:	d1 07       	cpc	r29, r17
    151a:	28 f4       	brcc	.+10     	; 0x1526 <TFT_DrawLineX+0x5a>
    151c:	90 2f       	mov	r25, r16
    151e:	81 2f       	mov	r24, r17
		swap(x1,x2);
    1520:	8e 01       	movw	r16, r28
    1522:	c9 2f       	mov	r28, r25
    1524:	d8 2f       	mov	r29, r24
	TFT_SetAddrWindow(x1,y,x2,y);
    1526:	9b 01       	movw	r18, r22
    1528:	ae 01       	movw	r20, r28
    152a:	c8 01       	movw	r24, r16
    152c:	0e 94 bd 09 	call	0x137a	; 0x137a <TFT_SetAddrWindow>
	TFT_Flood(color,(long)(x2-x1+1));
    1530:	ae 01       	movw	r20, r28
    1532:	4f 5f       	subi	r20, 0xFF	; 255
    1534:	5f 4f       	sbci	r21, 0xFF	; 255
    1536:	40 1b       	sub	r20, r16
    1538:	51 0b       	sbc	r21, r17
    153a:	60 e0       	ldi	r22, 0x00	; 0
    153c:	70 e0       	ldi	r23, 0x00	; 0
    153e:	c7 01       	movw	r24, r14
    1540:	0e 94 fe 08 	call	0x11fc	; 0x11fc <TFT_Flood>
}
    1544:	df 91       	pop	r29
    1546:	cf 91       	pop	r28
    1548:	1f 91       	pop	r17
    154a:	0f 91       	pop	r16
    154c:	ff 90       	pop	r15
    154e:	ef 90       	pop	r14
    1550:	08 95       	ret

00001552 <TFT_DrawRectangle>:
		TFT_DrawPixel(x - b1, y - a1, color);
	}
}
//-----------------------------------------------------------------------------------------------------------
void TFT_DrawRectangle(unsigned int x1,unsigned int y1,unsigned int x2,unsigned int y2,unsigned int color)
{
    1552:	af 92       	push	r10
    1554:	bf 92       	push	r11
    1556:	cf 92       	push	r12
    1558:	df 92       	push	r13
    155a:	ef 92       	push	r14
    155c:	ff 92       	push	r15
    155e:	0f 93       	push	r16
    1560:	1f 93       	push	r17
    1562:	cf 93       	push	r28
    1564:	df 93       	push	r29
    1566:	5c 01       	movw	r10, r24
    1568:	eb 01       	movw	r28, r22
    156a:	6a 01       	movw	r12, r20
    156c:	79 01       	movw	r14, r18
	if ((x1>=X_SIZE)|(x2>=X_SIZE)|(y1>=Y_SIZE)|(y2>=Y_SIZE))
    156e:	80 91 42 01 	lds	r24, 0x0142
    1572:	90 91 43 01 	lds	r25, 0x0143
    1576:	40 91 40 01 	lds	r20, 0x0140
    157a:	50 91 41 01 	lds	r21, 0x0141
    157e:	31 e0       	ldi	r19, 0x01	; 1
    1580:	64 17       	cp	r22, r20
    1582:	75 07       	cpc	r23, r21
    1584:	08 f4       	brcc	.+2      	; 0x1588 <TFT_DrawRectangle+0x36>
    1586:	30 e0       	ldi	r19, 0x00	; 0
    1588:	21 e0       	ldi	r18, 0x01	; 1
    158a:	e4 16       	cp	r14, r20
    158c:	f5 06       	cpc	r15, r21
    158e:	08 f4       	brcc	.+2      	; 0x1592 <TFT_DrawRectangle+0x40>
    1590:	20 e0       	ldi	r18, 0x00	; 0
    1592:	32 2b       	or	r19, r18
    1594:	21 e0       	ldi	r18, 0x01	; 1
    1596:	c8 16       	cp	r12, r24
    1598:	d9 06       	cpc	r13, r25
    159a:	08 f4       	brcc	.+2      	; 0x159e <TFT_DrawRectangle+0x4c>
    159c:	20 e0       	ldi	r18, 0x00	; 0
    159e:	23 2b       	or	r18, r19
    15a0:	f9 f4       	brne	.+62     	; 0x15e0 <TFT_DrawRectangle+0x8e>
    15a2:	21 e0       	ldi	r18, 0x01	; 1
    15a4:	a8 16       	cp	r10, r24
    15a6:	b9 06       	cpc	r11, r25
    15a8:	08 f4       	brcc	.+2      	; 0x15ac <TFT_DrawRectangle+0x5a>
    15aa:	20 e0       	ldi	r18, 0x00	; 0
    15ac:	21 11       	cpse	r18, r1
    15ae:	18 c0       	rjmp	.+48     	; 0x15e0 <TFT_DrawRectangle+0x8e>
		return;
	TFT_DrawLineX(x1,x2,y1,color);
    15b0:	98 01       	movw	r18, r16
    15b2:	ae 01       	movw	r20, r28
    15b4:	b6 01       	movw	r22, r12
    15b6:	c5 01       	movw	r24, r10
    15b8:	0e 94 66 0a 	call	0x14cc	; 0x14cc <TFT_DrawLineX>
	TFT_DrawLineY(x2,y1,y2,color);
    15bc:	98 01       	movw	r18, r16
    15be:	a7 01       	movw	r20, r14
    15c0:	be 01       	movw	r22, r28
    15c2:	c6 01       	movw	r24, r12
    15c4:	0e 94 48 0a 	call	0x1490	; 0x1490 <TFT_DrawLineY>
	TFT_DrawLineX(x1,x2,y2,color);
    15c8:	98 01       	movw	r18, r16
    15ca:	a7 01       	movw	r20, r14
    15cc:	b6 01       	movw	r22, r12
    15ce:	c5 01       	movw	r24, r10
    15d0:	0e 94 66 0a 	call	0x14cc	; 0x14cc <TFT_DrawLineX>
	TFT_DrawLineY(x1,y1,y2,color);
    15d4:	98 01       	movw	r18, r16
    15d6:	a7 01       	movw	r20, r14
    15d8:	be 01       	movw	r22, r28
    15da:	c5 01       	movw	r24, r10
    15dc:	0e 94 48 0a 	call	0x1490	; 0x1490 <TFT_DrawLineY>
}
    15e0:	df 91       	pop	r29
    15e2:	cf 91       	pop	r28
    15e4:	1f 91       	pop	r17
    15e6:	0f 91       	pop	r16
    15e8:	ff 90       	pop	r15
    15ea:	ef 90       	pop	r14
    15ec:	df 90       	pop	r13
    15ee:	cf 90       	pop	r12
    15f0:	bf 90       	pop	r11
    15f2:	af 90       	pop	r10
    15f4:	08 95       	ret

000015f6 <TFT_PutChar>:
	}
	return BLACK;
}
//-----------------------------------------------------------------------------------------------------------
void TFT_PutChar(unsigned int x, unsigned int y,unsigned char charr,unsigned char size, unsigned int color)
{
    15f6:	2f 92       	push	r2
    15f8:	3f 92       	push	r3
    15fa:	4f 92       	push	r4
    15fc:	5f 92       	push	r5
    15fe:	6f 92       	push	r6
    1600:	7f 92       	push	r7
    1602:	8f 92       	push	r8
    1604:	9f 92       	push	r9
    1606:	af 92       	push	r10
    1608:	bf 92       	push	r11
    160a:	cf 92       	push	r12
    160c:	df 92       	push	r13
    160e:	ef 92       	push	r14
    1610:	ff 92       	push	r15
    1612:	0f 93       	push	r16
    1614:	1f 93       	push	r17
    1616:	cf 93       	push	r28
    1618:	df 93       	push	r29
    161a:	00 d0       	rcall	.+0      	; 0x161c <TFT_PutChar+0x26>
    161c:	00 d0       	rcall	.+0      	; 0x161e <TFT_PutChar+0x28>
    161e:	00 d0       	rcall	.+0      	; 0x1620 <TFT_PutChar+0x2a>
    1620:	cd b7       	in	r28, 0x3d	; 61
    1622:	de b7       	in	r29, 0x3e	; 62
    1624:	1b 01       	movw	r2, r22
	//Small Font
	switch(size)
    1626:	22 23       	and	r18, r18
    1628:	21 f0       	breq	.+8      	; 0x1632 <TFT_PutChar+0x3c>
    162a:	21 30       	cpi	r18, 0x01	; 1
    162c:	09 f4       	brne	.+2      	; 0x1630 <TFT_PutChar+0x3a>
    162e:	55 c0       	rjmp	.+170    	; 0x16da <TFT_PutChar+0xe4>
    1630:	e1 c0       	rjmp	.+450    	; 0x17f4 <TFT_PutChar+0x1fe>
    1632:	24 2f       	mov	r18, r20
    1634:	30 e0       	ldi	r19, 0x00	; 0
    1636:	a9 01       	movw	r20, r18
    1638:	40 52       	subi	r20, 0x20	; 32
    163a:	51 09       	sbc	r21, r1
    163c:	ba 01       	movw	r22, r20
    163e:	66 0f       	add	r22, r22
    1640:	77 1f       	adc	r23, r23
    1642:	46 0f       	add	r20, r22
    1644:	57 1f       	adc	r21, r23
    1646:	44 0f       	add	r20, r20
    1648:	55 1f       	adc	r21, r21
    164a:	44 0f       	add	r20, r20
    164c:	55 1f       	adc	r21, r21
    164e:	ba 01       	movw	r22, r20
    1650:	61 5c       	subi	r22, 0xC1	; 193
    1652:	73 4f       	sbci	r23, 0xF3	; 243
    1654:	6b 01       	movw	r12, r22
    1656:	a9 01       	movw	r20, r18
    1658:	44 0f       	add	r20, r20
    165a:	55 1f       	adc	r21, r21
    165c:	24 0f       	add	r18, r20
    165e:	35 1f       	adc	r19, r21
    1660:	22 0f       	add	r18, r18
    1662:	33 1f       	adc	r19, r19
    1664:	22 0f       	add	r18, r18
    1666:	33 1f       	adc	r19, r19
    1668:	f9 01       	movw	r30, r18
    166a:	ed 54       	subi	r30, 0x4D	; 77
    166c:	f5 4f       	sbci	r31, 0xF5	; 245
    166e:	5f 01       	movw	r10, r30
	}
	return BLACK;
}
//-----------------------------------------------------------------------------------------------------------
void TFT_PutChar(unsigned int x, unsigned int y,unsigned char charr,unsigned char size, unsigned int color)
{
    1670:	68 2e       	mov	r6, r24
    1672:	79 2e       	mov	r7, r25
    1674:	81 2c       	mov	r8, r1
    1676:	91 2c       	mov	r9, r1
    1678:	2b c0       	rjmp	.+86     	; 0x16d0 <TFT_PutChar+0xda>
		case SMALL:
		for(int cot=0;cot<12;cot++)
		{
			for (int hang=0;hang<8;hang++)
			{
				if((pgm_read_byte(&SmallFont[charr-32][11-cot])<<hang)&0x80)
    167a:	f6 01       	movw	r30, r12
    167c:	84 91       	lpm	r24, Z
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	04 2c       	mov	r0, r4
    1682:	02 c0       	rjmp	.+4      	; 0x1688 <TFT_PutChar+0x92>
    1684:	88 0f       	add	r24, r24
    1686:	99 1f       	adc	r25, r25
    1688:	0a 94       	dec	r0
    168a:	e2 f7       	brpl	.-8      	; 0x1684 <TFT_PutChar+0x8e>
    168c:	87 ff       	sbrs	r24, 7
    168e:	06 c0       	rjmp	.+12     	; 0x169c <TFT_PutChar+0xa6>
					TFT_DrawPixel(x+hang,y+cot,color);
    1690:	a8 01       	movw	r20, r16
    1692:	b1 01       	movw	r22, r2
    1694:	c7 01       	movw	r24, r14
    1696:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <TFT_DrawPixel>
    169a:	06 c0       	rjmp	.+12     	; 0x16a8 <TFT_PutChar+0xb2>
				else
					TFT_DrawPixel(x+hang,y+cot,SCREEN_COLOR);
    169c:	48 2d       	mov	r20, r8
    169e:	59 2d       	mov	r21, r9
    16a0:	b1 01       	movw	r22, r2
    16a2:	c7 01       	movw	r24, r14
    16a4:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <TFT_DrawPixel>
	switch(size)
	{	
		case SMALL:
		for(int cot=0;cot<12;cot++)
		{
			for (int hang=0;hang<8;hang++)
    16a8:	ff ef       	ldi	r31, 0xFF	; 255
    16aa:	4f 1a       	sub	r4, r31
    16ac:	5f 0a       	sbc	r5, r31
    16ae:	2f ef       	ldi	r18, 0xFF	; 255
    16b0:	e2 1a       	sub	r14, r18
    16b2:	f2 0a       	sbc	r15, r18
    16b4:	38 e0       	ldi	r19, 0x08	; 8
    16b6:	43 16       	cp	r4, r19
    16b8:	51 04       	cpc	r5, r1
    16ba:	f9 f6       	brne	.-66     	; 0x167a <TFT_PutChar+0x84>
    16bc:	4f ef       	ldi	r20, 0xFF	; 255
    16be:	24 1a       	sub	r2, r20
    16c0:	34 0a       	sbc	r3, r20
    16c2:	51 e0       	ldi	r21, 0x01	; 1
    16c4:	c5 1a       	sub	r12, r21
    16c6:	d1 08       	sbc	r13, r1
{
	//Small Font
	switch(size)
	{	
		case SMALL:
		for(int cot=0;cot<12;cot++)
    16c8:	ca 14       	cp	r12, r10
    16ca:	db 04       	cpc	r13, r11
    16cc:	09 f4       	brne	.+2      	; 0x16d0 <TFT_PutChar+0xda>
    16ce:	92 c0       	rjmp	.+292    	; 0x17f4 <TFT_PutChar+0x1fe>
	}
	return BLACK;
}
//-----------------------------------------------------------------------------------------------------------
void TFT_PutChar(unsigned int x, unsigned int y,unsigned char charr,unsigned char size, unsigned int color)
{
    16d0:	e6 2c       	mov	r14, r6
    16d2:	f7 2c       	mov	r15, r7
    16d4:	48 2c       	mov	r4, r8
    16d6:	59 2c       	mov	r5, r9
    16d8:	d0 cf       	rjmp	.-96     	; 0x167a <TFT_PutChar+0x84>
    16da:	60 e2       	ldi	r22, 0x20	; 32
    16dc:	46 9f       	mul	r20, r22
    16de:	90 01       	movw	r18, r0
    16e0:	11 24       	eor	r1, r1
    16e2:	f9 01       	movw	r30, r18
    16e4:	ed 58       	subi	r30, 0x8D	; 141
    16e6:	f3 40       	sbci	r31, 0x03	; 3
    16e8:	6f 01       	movw	r12, r30
	//Small Font
	switch(size)
    16ea:	66 24       	eor	r6, r6
    16ec:	6a 94       	dec	r6
    16ee:	76 2c       	mov	r7, r6
    16f0:	a1 2c       	mov	r10, r1
    16f2:	b1 2c       	mov	r11, r1
			}
			else
			for (int cot=0;cot<8;cot++)
			{
				if((pgm_read_byte(&BigFont[charr-32][31-hang]))<<cot&0x80)
					TFT_DrawPixel(x+cot,y+(hang-1)/2,color);
    16f4:	8b 83       	std	Y+3, r24	; 0x03
    16f6:	9c 83       	std	Y+4, r25	; 0x04
    16f8:	51 2c       	mov	r5, r1
    16fa:	41 2c       	mov	r4, r1
    16fc:	9c 01       	movw	r18, r24
    16fe:	28 5f       	subi	r18, 0xF8	; 248
    1700:	3f 4f       	sbci	r19, 0xFF	; 255
    1702:	3a 83       	std	Y+2, r19	; 0x02
    1704:	29 83       	std	Y+1, r18	; 0x01
		break;
		//Big Font
		case BIG:
		for(int hang=0;hang<32;hang++)
		{
			if (hang%2==0)
    1706:	a0 fc       	sbrc	r10, 0
    1708:	34 c0       	rjmp	.+104    	; 0x1772 <TFT_PutChar+0x17c>
			for (int cot=0;cot<8;cot++)
			{
				if((pgm_read_byte(&BigFont[charr-32][31-hang]))<<cot&0x80)
					TFT_DrawPixel(x+8+cot,y+hang/2,color);
    170a:	45 01       	movw	r8, r10
    170c:	bb 20       	and	r11, r11
    170e:	1c f4       	brge	.+6      	; 0x1716 <TFT_PutChar+0x120>
    1710:	3f ef       	ldi	r19, 0xFF	; 255
    1712:	83 1a       	sub	r8, r19
    1714:	93 0a       	sbc	r9, r19
    1716:	95 94       	asr	r9
    1718:	87 94       	ror	r8
    171a:	82 0c       	add	r8, r2
    171c:	93 1c       	adc	r9, r3
    171e:	e9 80       	ldd	r14, Y+1	; 0x01
    1720:	fa 80       	ldd	r15, Y+2	; 0x02
    1722:	5d 82       	std	Y+5, r5	; 0x05
    1724:	4e 82       	std	Y+6, r4	; 0x06
		for(int hang=0;hang<32;hang++)
		{
			if (hang%2==0)
			for (int cot=0;cot<8;cot++)
			{
				if((pgm_read_byte(&BigFont[charr-32][31-hang]))<<cot&0x80)
    1726:	f6 01       	movw	r30, r12
    1728:	84 91       	lpm	r24, Z
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	0d 80       	ldd	r0, Y+5	; 0x05
    172e:	02 c0       	rjmp	.+4      	; 0x1734 <TFT_PutChar+0x13e>
    1730:	88 0f       	add	r24, r24
    1732:	99 1f       	adc	r25, r25
    1734:	0a 94       	dec	r0
    1736:	e2 f7       	brpl	.-8      	; 0x1730 <TFT_PutChar+0x13a>
    1738:	87 ff       	sbrs	r24, 7
    173a:	06 c0       	rjmp	.+12     	; 0x1748 <TFT_PutChar+0x152>
					TFT_DrawPixel(x+8+cot,y+hang/2,color);
    173c:	a8 01       	movw	r20, r16
    173e:	b4 01       	movw	r22, r8
    1740:	c7 01       	movw	r24, r14
    1742:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <TFT_DrawPixel>
    1746:	06 c0       	rjmp	.+12     	; 0x1754 <TFT_PutChar+0x15e>
				else
					TFT_DrawPixel(x+8+cot,y+hang/2,SCREEN_COLOR);
    1748:	45 2d       	mov	r20, r5
    174a:	54 2d       	mov	r21, r4
    174c:	b4 01       	movw	r22, r8
    174e:	c7 01       	movw	r24, r14
    1750:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <TFT_DrawPixel>
		//Big Font
		case BIG:
		for(int hang=0;hang<32;hang++)
		{
			if (hang%2==0)
			for (int cot=0;cot<8;cot++)
    1754:	2d 81       	ldd	r18, Y+5	; 0x05
    1756:	3e 81       	ldd	r19, Y+6	; 0x06
    1758:	2f 5f       	subi	r18, 0xFF	; 255
    175a:	3f 4f       	sbci	r19, 0xFF	; 255
    175c:	3e 83       	std	Y+6, r19	; 0x06
    175e:	2d 83       	std	Y+5, r18	; 0x05
    1760:	3f ef       	ldi	r19, 0xFF	; 255
    1762:	e3 1a       	sub	r14, r19
    1764:	f3 0a       	sbc	r15, r19
    1766:	4d 81       	ldd	r20, Y+5	; 0x05
    1768:	5e 81       	ldd	r21, Y+6	; 0x06
    176a:	48 30       	cpi	r20, 0x08	; 8
    176c:	51 05       	cpc	r21, r1
    176e:	d9 f6       	brne	.-74     	; 0x1726 <TFT_PutChar+0x130>
    1770:	33 c0       	rjmp	.+102    	; 0x17d8 <TFT_PutChar+0x1e2>
			}
			else
			for (int cot=0;cot<8;cot++)
			{
				if((pgm_read_byte(&BigFont[charr-32][31-hang]))<<cot&0x80)
					TFT_DrawPixel(x+cot,y+(hang-1)/2,color);
    1772:	43 01       	movw	r8, r6
    1774:	77 20       	and	r7, r7
    1776:	1c f4       	brge	.+6      	; 0x177e <TFT_PutChar+0x188>
    1778:	5f ef       	ldi	r21, 0xFF	; 255
    177a:	85 1a       	sub	r8, r21
    177c:	95 0a       	sbc	r9, r21
    177e:	95 94       	asr	r9
    1780:	87 94       	ror	r8
    1782:	82 0c       	add	r8, r2
    1784:	93 1c       	adc	r9, r3
    1786:	eb 80       	ldd	r14, Y+3	; 0x03
    1788:	fc 80       	ldd	r15, Y+4	; 0x04
    178a:	5d 82       	std	Y+5, r5	; 0x05
    178c:	4e 82       	std	Y+6, r4	; 0x06
					TFT_DrawPixel(x+8+cot,y+hang/2,SCREEN_COLOR);
			}
			else
			for (int cot=0;cot<8;cot++)
			{
				if((pgm_read_byte(&BigFont[charr-32][31-hang]))<<cot&0x80)
    178e:	f6 01       	movw	r30, r12
    1790:	84 91       	lpm	r24, Z
    1792:	90 e0       	ldi	r25, 0x00	; 0
    1794:	0d 80       	ldd	r0, Y+5	; 0x05
    1796:	02 c0       	rjmp	.+4      	; 0x179c <TFT_PutChar+0x1a6>
    1798:	88 0f       	add	r24, r24
    179a:	99 1f       	adc	r25, r25
    179c:	0a 94       	dec	r0
    179e:	e2 f7       	brpl	.-8      	; 0x1798 <TFT_PutChar+0x1a2>
    17a0:	87 ff       	sbrs	r24, 7
    17a2:	06 c0       	rjmp	.+12     	; 0x17b0 <TFT_PutChar+0x1ba>
					TFT_DrawPixel(x+cot,y+(hang-1)/2,color);
    17a4:	a8 01       	movw	r20, r16
    17a6:	b4 01       	movw	r22, r8
    17a8:	c7 01       	movw	r24, r14
    17aa:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <TFT_DrawPixel>
    17ae:	06 c0       	rjmp	.+12     	; 0x17bc <TFT_PutChar+0x1c6>
				else
					TFT_DrawPixel(x+cot,y+(hang-1)/2,SCREEN_COLOR);
    17b0:	45 2d       	mov	r20, r5
    17b2:	54 2d       	mov	r21, r4
    17b4:	b4 01       	movw	r22, r8
    17b6:	c7 01       	movw	r24, r14
    17b8:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <TFT_DrawPixel>
					TFT_DrawPixel(x+8+cot,y+hang/2,color);
				else
					TFT_DrawPixel(x+8+cot,y+hang/2,SCREEN_COLOR);
			}
			else
			for (int cot=0;cot<8;cot++)
    17bc:	2d 81       	ldd	r18, Y+5	; 0x05
    17be:	3e 81       	ldd	r19, Y+6	; 0x06
    17c0:	2f 5f       	subi	r18, 0xFF	; 255
    17c2:	3f 4f       	sbci	r19, 0xFF	; 255
    17c4:	3e 83       	std	Y+6, r19	; 0x06
    17c6:	2d 83       	std	Y+5, r18	; 0x05
    17c8:	3f ef       	ldi	r19, 0xFF	; 255
    17ca:	e3 1a       	sub	r14, r19
    17cc:	f3 0a       	sbc	r15, r19
    17ce:	4d 81       	ldd	r20, Y+5	; 0x05
    17d0:	5e 81       	ldd	r21, Y+6	; 0x06
    17d2:	48 30       	cpi	r20, 0x08	; 8
    17d4:	51 05       	cpc	r21, r1
    17d6:	d9 f6       	brne	.-74     	; 0x178e <TFT_PutChar+0x198>
			}
		}
		break;
		//Big Font
		case BIG:
		for(int hang=0;hang<32;hang++)
    17d8:	5f ef       	ldi	r21, 0xFF	; 255
    17da:	a5 1a       	sub	r10, r21
    17dc:	b5 0a       	sbc	r11, r21
    17de:	61 e0       	ldi	r22, 0x01	; 1
    17e0:	c6 1a       	sub	r12, r22
    17e2:	d1 08       	sbc	r13, r1
    17e4:	7f ef       	ldi	r23, 0xFF	; 255
    17e6:	67 1a       	sub	r6, r23
    17e8:	77 0a       	sbc	r7, r23
    17ea:	80 e2       	ldi	r24, 0x20	; 32
    17ec:	a8 16       	cp	r10, r24
    17ee:	b1 04       	cpc	r11, r1
    17f0:	09 f0       	breq	.+2      	; 0x17f4 <TFT_PutChar+0x1fe>
    17f2:	89 cf       	rjmp	.-238    	; 0x1706 <TFT_PutChar+0x110>
					TFT_DrawPixel(x+cot,y+(hang-1)/2,SCREEN_COLOR);
			}
		}
		break;
	}
}
    17f4:	26 96       	adiw	r28, 0x06	; 6
    17f6:	0f b6       	in	r0, 0x3f	; 63
    17f8:	f8 94       	cli
    17fa:	de bf       	out	0x3e, r29	; 62
    17fc:	0f be       	out	0x3f, r0	; 63
    17fe:	cd bf       	out	0x3d, r28	; 61
    1800:	df 91       	pop	r29
    1802:	cf 91       	pop	r28
    1804:	1f 91       	pop	r17
    1806:	0f 91       	pop	r16
    1808:	ff 90       	pop	r15
    180a:	ef 90       	pop	r14
    180c:	df 90       	pop	r13
    180e:	cf 90       	pop	r12
    1810:	bf 90       	pop	r11
    1812:	af 90       	pop	r10
    1814:	9f 90       	pop	r9
    1816:	8f 90       	pop	r8
    1818:	7f 90       	pop	r7
    181a:	6f 90       	pop	r6
    181c:	5f 90       	pop	r5
    181e:	4f 90       	pop	r4
    1820:	3f 90       	pop	r3
    1822:	2f 90       	pop	r2
    1824:	08 95       	ret

00001826 <TFT_Print>:
//-----------------------------------------------------------------------------------------------------------
void TFT_Print(unsigned int x, unsigned int y,char *text,unsigned char size, unsigned int color)
{
    1826:	9f 92       	push	r9
    1828:	af 92       	push	r10
    182a:	bf 92       	push	r11
    182c:	cf 92       	push	r12
    182e:	df 92       	push	r13
    1830:	ef 92       	push	r14
    1832:	ff 92       	push	r15
    1834:	0f 93       	push	r16
    1836:	1f 93       	push	r17
    1838:	cf 93       	push	r28
    183a:	df 93       	push	r29
    183c:	7c 01       	movw	r14, r24
    183e:	5b 01       	movw	r10, r22
    1840:	92 2e       	mov	r9, r18
    1842:	68 01       	movw	r12, r16
    1844:	c4 2f       	mov	r28, r20
    1846:	d5 2f       	mov	r29, r21
	while(*text)
    1848:	12 c0       	rjmp	.+36     	; 0x186e <TFT_Print+0x48>
	{
		TFT_PutChar(x,y,*text++,size,color);
    184a:	86 01       	movw	r16, r12
    184c:	29 2d       	mov	r18, r9
    184e:	b5 01       	movw	r22, r10
    1850:	c7 01       	movw	r24, r14
    1852:	0e 94 fb 0a 	call	0x15f6	; 0x15f6 <TFT_PutChar>
		switch(size)
    1856:	99 20       	and	r9, r9
    1858:	39 f0       	breq	.+14     	; 0x1868 <TFT_Print+0x42>
    185a:	81 e0       	ldi	r24, 0x01	; 1
    185c:	98 12       	cpse	r9, r24
    185e:	07 c0       	rjmp	.+14     	; 0x186e <TFT_Print+0x48>
		{
			case BIG:
			x+=13;
    1860:	8d e0       	ldi	r24, 0x0D	; 13
    1862:	e8 0e       	add	r14, r24
    1864:	f1 1c       	adc	r15, r1
			break;
    1866:	03 c0       	rjmp	.+6      	; 0x186e <TFT_Print+0x48>
			case SMALL:
			x+=7;
    1868:	87 e0       	ldi	r24, 0x07	; 7
    186a:	e8 0e       	add	r14, r24
    186c:	f1 1c       	adc	r15, r1
	}
}
//-----------------------------------------------------------------------------------------------------------
void TFT_Print(unsigned int x, unsigned int y,char *text,unsigned char size, unsigned int color)
{
	while(*text)
    186e:	49 91       	ld	r20, Y+
    1870:	41 11       	cpse	r20, r1
    1872:	eb cf       	rjmp	.-42     	; 0x184a <TFT_Print+0x24>
			case SMALL:
			x+=7;
			break;
		}
	}
}
    1874:	df 91       	pop	r29
    1876:	cf 91       	pop	r28
    1878:	1f 91       	pop	r17
    187a:	0f 91       	pop	r16
    187c:	ff 90       	pop	r15
    187e:	ef 90       	pop	r14
    1880:	df 90       	pop	r13
    1882:	cf 90       	pop	r12
    1884:	bf 90       	pop	r11
    1886:	af 90       	pop	r10
    1888:	9f 90       	pop	r9
    188a:	08 95       	ret

0000188c <TFT_Number_Dec>:
	sprintf(dis, "0x%lx", number);
	TFT_Print(x, y,dis,size,color);
}
//-----------------------------------------------------------------------------------------------------------
void TFT_Number_Dec(unsigned int x, unsigned int y,long number,unsigned char size, unsigned int color)
{
    188c:	7f 92       	push	r7
    188e:	8f 92       	push	r8
    1890:	9f 92       	push	r9
    1892:	af 92       	push	r10
    1894:	bf 92       	push	r11
    1896:	cf 92       	push	r12
    1898:	df 92       	push	r13
    189a:	ef 92       	push	r14
    189c:	ff 92       	push	r15
    189e:	0f 93       	push	r16
    18a0:	1f 93       	push	r17
    18a2:	cf 93       	push	r28
    18a4:	df 93       	push	r29
    18a6:	cd b7       	in	r28, 0x3d	; 61
    18a8:	de b7       	in	r29, 0x3e	; 62
    18aa:	2a 97       	sbiw	r28, 0x0a	; 10
    18ac:	0f b6       	in	r0, 0x3f	; 63
    18ae:	f8 94       	cli
    18b0:	de bf       	out	0x3e, r29	; 62
    18b2:	0f be       	out	0x3f, r0	; 63
    18b4:	cd bf       	out	0x3d, r28	; 61
    18b6:	5c 01       	movw	r10, r24
    18b8:	4b 01       	movw	r8, r22
    18ba:	70 2e       	mov	r7, r16
	char dis[10];
	sprintf(dis, "%li", number);
    18bc:	5f 93       	push	r21
    18be:	4f 93       	push	r20
    18c0:	3f 93       	push	r19
    18c2:	2f 93       	push	r18
    18c4:	46 e6       	ldi	r20, 0x66	; 102
    18c6:	50 e0       	ldi	r21, 0x00	; 0
    18c8:	5f 93       	push	r21
    18ca:	4f 93       	push	r20
    18cc:	ce 01       	movw	r24, r28
    18ce:	01 96       	adiw	r24, 0x01	; 1
    18d0:	6c 01       	movw	r12, r24
    18d2:	df 92       	push	r13
    18d4:	8f 93       	push	r24
    18d6:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <sprintf>
	TFT_Print(x, y,dis,size,color);
    18da:	87 01       	movw	r16, r14
    18dc:	27 2d       	mov	r18, r7
    18de:	a6 01       	movw	r20, r12
    18e0:	b4 01       	movw	r22, r8
    18e2:	c5 01       	movw	r24, r10
    18e4:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
    18e8:	0f b6       	in	r0, 0x3f	; 63
    18ea:	f8 94       	cli
    18ec:	de bf       	out	0x3e, r29	; 62
    18ee:	0f be       	out	0x3f, r0	; 63
    18f0:	cd bf       	out	0x3d, r28	; 61
}
    18f2:	2a 96       	adiw	r28, 0x0a	; 10
    18f4:	0f b6       	in	r0, 0x3f	; 63
    18f6:	f8 94       	cli
    18f8:	de bf       	out	0x3e, r29	; 62
    18fa:	0f be       	out	0x3f, r0	; 63
    18fc:	cd bf       	out	0x3d, r28	; 61
    18fe:	df 91       	pop	r29
    1900:	cf 91       	pop	r28
    1902:	1f 91       	pop	r17
    1904:	0f 91       	pop	r16
    1906:	ff 90       	pop	r15
    1908:	ef 90       	pop	r14
    190a:	df 90       	pop	r13
    190c:	cf 90       	pop	r12
    190e:	bf 90       	pop	r11
    1910:	af 90       	pop	r10
    1912:	9f 90       	pop	r9
    1914:	8f 90       	pop	r8
    1916:	7f 90       	pop	r7
    1918:	08 95       	ret

0000191a <TFT_Init>:
//-----------------------------------------------------------------------------------------------------------
void TFT_Init(void)
{
	//char str[10];
	Port_Init();
    191a:	0e 94 8c 08 	call	0x1118	; 0x1118 <Port_Init>
	TFT_Reset();
    191e:	0e 94 8e 09 	call	0x131c	; 0x131c <TFT_Reset>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1922:	2f ef       	ldi	r18, 0xFF	; 255
    1924:	81 ee       	ldi	r24, 0xE1	; 225
    1926:	94 e0       	ldi	r25, 0x04	; 4
    1928:	21 50       	subi	r18, 0x01	; 1
    192a:	80 40       	sbci	r24, 0x00	; 0
    192c:	90 40       	sbci	r25, 0x00	; 0
    192e:	e1 f7       	brne	.-8      	; 0x1928 <TFT_Init+0xe>
    1930:	00 c0       	rjmp	.+0      	; 0x1932 <TFT_Init+0x18>
    1932:	00 00       	nop
	_delay_ms(100);
	//dtt=TFT_ReadReg(0xD3);
	CS_ACTIVE;
    1934:	a9 98       	cbi	0x15, 1	; 21
	/*move_LCD(1,1);
	sprintf(str,"0x%08lX",dtt);
	print_LCD(str);
	move_LCD(2,1);
	vietso_dec_LCD(dtt);*/
	TFT_SendCommand(0x01);//software reset
    1936:	81 e0       	ldi	r24, 0x01	; 1
    1938:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendCommand(0xCB);//power ctrl A
    193c:	8b ec       	ldi	r24, 0xCB	; 203
    193e:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x39);
    1942:	89 e3       	ldi	r24, 0x39	; 57
    1944:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x2C);
    1948:	8c e2       	ldi	r24, 0x2C	; 44
    194a:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x00);
    194e:	80 e0       	ldi	r24, 0x00	; 0
    1950:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x34);
    1954:	84 e3       	ldi	r24, 0x34	; 52
    1956:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x02);
    195a:	82 e0       	ldi	r24, 0x02	; 2
    195c:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xCF);// power ctrl B
    1960:	8f ec       	ldi	r24, 0xCF	; 207
    1962:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x00);
    1966:	80 e0       	ldi	r24, 0x00	; 0
    1968:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0xC1);
    196c:	81 ec       	ldi	r24, 0xC1	; 193
    196e:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x30);
    1972:	80 e3       	ldi	r24, 0x30	; 48
    1974:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xE8);//driver timing A
    1978:	88 ee       	ldi	r24, 0xE8	; 232
    197a:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x85);
    197e:	85 e8       	ldi	r24, 0x85	; 133
    1980:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x00);
    1984:	80 e0       	ldi	r24, 0x00	; 0
    1986:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x78);
    198a:	88 e7       	ldi	r24, 0x78	; 120
    198c:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xEA);//driver B
    1990:	8a ee       	ldi	r24, 0xEA	; 234
    1992:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x00);
    1996:	80 e0       	ldi	r24, 0x00	; 0
    1998:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x00);
    199c:	80 e0       	ldi	r24, 0x00	; 0
    199e:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xED);//power on
    19a2:	8d ee       	ldi	r24, 0xED	; 237
    19a4:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	
	TFT_SendData(0x64);
    19a8:	84 e6       	ldi	r24, 0x64	; 100
    19aa:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x03);
    19ae:	83 e0       	ldi	r24, 0x03	; 3
    19b0:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x12);
    19b4:	82 e1       	ldi	r24, 0x12	; 18
    19b6:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x81);
    19ba:	81 e8       	ldi	r24, 0x81	; 129
    19bc:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xF7);//pump ratio ctrl
    19c0:	87 ef       	ldi	r24, 0xF7	; 247
    19c2:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x20);
    19c6:	80 e2       	ldi	r24, 0x20	; 32
    19c8:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xC0);//power ctr1
    19cc:	80 ec       	ldi	r24, 0xC0	; 192
    19ce:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x10);
    19d2:	80 e1       	ldi	r24, 0x10	; 16
    19d4:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xC1);//power ctr2
    19d8:	81 ec       	ldi	r24, 0xC1	; 193
    19da:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x10);
    19de:	80 e1       	ldi	r24, 0x10	; 16
    19e0:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xC5);//VCOM ctrl1
    19e4:	85 ec       	ldi	r24, 0xC5	; 197
    19e6:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x3E);
    19ea:	8e e3       	ldi	r24, 0x3E	; 62
    19ec:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x28);
    19f0:	88 e2       	ldi	r24, 0x28	; 40
    19f2:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xC7);//VCOM ctrl2
    19f6:	87 ec       	ldi	r24, 0xC7	; 199
    19f8:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x86);
    19fc:	86 e8       	ldi	r24, 0x86	; 134
    19fe:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SetRotation(1);
    1a02:	81 e0       	ldi	r24, 0x01	; 1
    1a04:	0e 94 b0 08 	call	0x1160	; 0x1160 <TFT_SetRotation>
	TFT_SendCommand(0x3A);//Pixel Format
    1a08:	8a e3       	ldi	r24, 0x3A	; 58
    1a0a:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x55);//16bit
    1a0e:	85 e5       	ldi	r24, 0x55	; 85
    1a10:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xB1);
    1a14:	81 eb       	ldi	r24, 0xB1	; 177
    1a16:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x00);
    1a1a:	80 e0       	ldi	r24, 0x00	; 0
    1a1c:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x18);//
    1a20:	88 e1       	ldi	r24, 0x18	; 24
    1a22:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xB6);//Display Function ctrl
    1a26:	86 eb       	ldi	r24, 0xB6	; 182
    1a28:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x08);
    1a2c:	88 e0       	ldi	r24, 0x08	; 8
    1a2e:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x82);//
    1a32:	82 e8       	ldi	r24, 0x82	; 130
    1a34:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x27);//320
    1a38:	87 e2       	ldi	r24, 0x27	; 39
    1a3a:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xF2);//Enable 3G
    1a3e:	82 ef       	ldi	r24, 0xF2	; 242
    1a40:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x00);
    1a44:	80 e0       	ldi	r24, 0x00	; 0
    1a46:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0x26);//Gamma Curve
    1a4a:	86 e2       	ldi	r24, 0x26	; 38
    1a4c:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x01);
    1a50:	81 e0       	ldi	r24, 0x01	; 1
    1a52:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xE0);//Position Gamma  Curve
    1a56:	80 ee       	ldi	r24, 0xE0	; 224
    1a58:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x0F);
    1a5c:	8f e0       	ldi	r24, 0x0F	; 15
    1a5e:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x31);
    1a62:	81 e3       	ldi	r24, 0x31	; 49
    1a64:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x2B);
    1a68:	8b e2       	ldi	r24, 0x2B	; 43
    1a6a:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x0C);
    1a6e:	8c e0       	ldi	r24, 0x0C	; 12
    1a70:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x0E);
    1a74:	8e e0       	ldi	r24, 0x0E	; 14
    1a76:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x08);
    1a7a:	88 e0       	ldi	r24, 0x08	; 8
    1a7c:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x4E);
    1a80:	8e e4       	ldi	r24, 0x4E	; 78
    1a82:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0xF1);
    1a86:	81 ef       	ldi	r24, 0xF1	; 241
    1a88:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x37);
    1a8c:	87 e3       	ldi	r24, 0x37	; 55
    1a8e:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x07);
    1a92:	87 e0       	ldi	r24, 0x07	; 7
    1a94:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x10);
    1a98:	80 e1       	ldi	r24, 0x10	; 16
    1a9a:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x03);
    1a9e:	83 e0       	ldi	r24, 0x03	; 3
    1aa0:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0X0E);
    1aa4:	8e e0       	ldi	r24, 0x0E	; 14
    1aa6:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0X09);
    1aaa:	89 e0       	ldi	r24, 0x09	; 9
    1aac:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x00);
    1ab0:	80 e0       	ldi	r24, 0x00	; 0
    1ab2:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0xE1);//Negative Gamma  Correct
    1ab6:	81 ee       	ldi	r24, 0xE1	; 225
    1ab8:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x00);
    1abc:	80 e0       	ldi	r24, 0x00	; 0
    1abe:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x0E);
    1ac2:	8e e0       	ldi	r24, 0x0E	; 14
    1ac4:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x14);
    1ac8:	84 e1       	ldi	r24, 0x14	; 20
    1aca:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x03);
    1ace:	83 e0       	ldi	r24, 0x03	; 3
    1ad0:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x11);
    1ad4:	81 e1       	ldi	r24, 0x11	; 17
    1ad6:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x07);
    1ada:	87 e0       	ldi	r24, 0x07	; 7
    1adc:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x31);
    1ae0:	81 e3       	ldi	r24, 0x31	; 49
    1ae2:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0xC1);
    1ae6:	81 ec       	ldi	r24, 0xC1	; 193
    1ae8:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x48);
    1aec:	88 e4       	ldi	r24, 0x48	; 72
    1aee:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x08);
    1af2:	88 e0       	ldi	r24, 0x08	; 8
    1af4:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x0F);
    1af8:	8f e0       	ldi	r24, 0x0F	; 15
    1afa:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x0C);
    1afe:	8c e0       	ldi	r24, 0x0C	; 12
    1b00:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x31);
    1b04:	81 e3       	ldi	r24, 0x31	; 49
    1b06:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x36);
    1b0a:	86 e3       	ldi	r24, 0x36	; 54
    1b0c:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendData(0x0F);
    1b10:	8f e0       	ldi	r24, 0x0F	; 15
    1b12:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
	TFT_SendCommand(0X11);
    1b16:	81 e1       	ldi	r24, 0x11	; 17
    1b18:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
    1b1c:	2f ef       	ldi	r18, 0xFF	; 255
    1b1e:	82 e5       	ldi	r24, 0x52	; 82
    1b20:	97 e0       	ldi	r25, 0x07	; 7
    1b22:	21 50       	subi	r18, 0x01	; 1
    1b24:	80 40       	sbci	r24, 0x00	; 0
    1b26:	90 40       	sbci	r25, 0x00	; 0
    1b28:	e1 f7       	brne	.-8      	; 0x1b22 <TFT_Init+0x208>
    1b2a:	00 c0       	rjmp	.+0      	; 0x1b2c <TFT_Init+0x212>
    1b2c:	00 00       	nop
	_delay_ms(150);
	TFT_SendCommand(0X29);
    1b2e:	89 e2       	ldi	r24, 0x29	; 41
    1b30:	0e 94 96 08 	call	0x112c	; 0x112c <TFT_SendCommand>
	TFT_SendData(0x2C);
    1b34:	8c e2       	ldi	r24, 0x2C	; 44
    1b36:	0e 94 a0 08 	call	0x1140	; 0x1140 <TFT_SendData>
    1b3a:	2f ef       	ldi	r18, 0xFF	; 255
    1b3c:	82 e5       	ldi	r24, 0x52	; 82
    1b3e:	97 e0       	ldi	r25, 0x07	; 7
    1b40:	21 50       	subi	r18, 0x01	; 1
    1b42:	80 40       	sbci	r24, 0x00	; 0
    1b44:	90 40       	sbci	r25, 0x00	; 0
    1b46:	e1 f7       	brne	.-8      	; 0x1b40 <TFT_Init+0x226>
    1b48:	00 c0       	rjmp	.+0      	; 0x1b4a <TFT_Init+0x230>
    1b4a:	00 00       	nop
    1b4c:	08 95       	ret

00001b4e <main>:
#define COLOR_TEXT GREEN


int main(void)
{
	Init_595();
    1b4e:	0e 94 73 08 	call	0x10e6	; 0x10e6 <Init_595>
	TFT_Init();
    1b52:	0e 94 8d 0c 	call	0x191a	; 0x191a <TFT_Init>
	TFT_SetRotation(LEFT);
    1b56:	81 e0       	ldi	r24, 0x01	; 1
    1b58:	0e 94 b0 08 	call	0x1160	; 0x1160 <TFT_SetRotation>
	TFT_FillScreen(SCREEN_COLOR);
    1b5c:	80 e0       	ldi	r24, 0x00	; 0
    1b5e:	90 e0       	ldi	r25, 0x00	; 0
    1b60:	0e 94 21 0a 	call	0x1442	; 0x1442 <TFT_FillScreen>
	TFT_Print(0, 215, "/*", BIG, COLOR_TEXT);
    1b64:	00 ee       	ldi	r16, 0xE0	; 224
    1b66:	17 e0       	ldi	r17, 0x07	; 7
    1b68:	21 e0       	ldi	r18, 0x01	; 1
    1b6a:	4a e6       	ldi	r20, 0x6A	; 106
    1b6c:	50 e0       	ldi	r21, 0x00	; 0
    1b6e:	67 ed       	ldi	r22, 0xD7	; 215
    1b70:	70 e0       	ldi	r23, 0x00	; 0
    1b72:	80 e0       	ldi	r24, 0x00	; 0
    1b74:	90 e0       	ldi	r25, 0x00	; 0
    1b76:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
	TFT_Print(0, 190, " * DO AN VI DIEU KHIEN", BIG, COLOR_TEXT);
    1b7a:	21 e0       	ldi	r18, 0x01	; 1
    1b7c:	4d e6       	ldi	r20, 0x6D	; 109
    1b7e:	50 e0       	ldi	r21, 0x00	; 0
    1b80:	6e eb       	ldi	r22, 0xBE	; 190
    1b82:	70 e0       	ldi	r23, 0x00	; 0
    1b84:	80 e0       	ldi	r24, 0x00	; 0
    1b86:	90 e0       	ldi	r25, 0x00	; 0
    1b88:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
	TFT_Print(0, 165, " * DE TAI: MAY DO XUNG", BIG, COLOR_TEXT);
    1b8c:	21 e0       	ldi	r18, 0x01	; 1
    1b8e:	44 e8       	ldi	r20, 0x84	; 132
    1b90:	50 e0       	ldi	r21, 0x00	; 0
    1b92:	65 ea       	ldi	r22, 0xA5	; 165
    1b94:	70 e0       	ldi	r23, 0x00	; 0
    1b96:	80 e0       	ldi	r24, 0x00	; 0
    1b98:	90 e0       	ldi	r25, 0x00	; 0
    1b9a:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
	TFT_Print(0, 140, " * SVTH: VAN BA TAI", BIG, COLOR_TEXT);
    1b9e:	21 e0       	ldi	r18, 0x01	; 1
    1ba0:	4b e9       	ldi	r20, 0x9B	; 155
    1ba2:	50 e0       	ldi	r21, 0x00	; 0
    1ba4:	6c e8       	ldi	r22, 0x8C	; 140
    1ba6:	70 e0       	ldi	r23, 0x00	; 0
    1ba8:	80 e0       	ldi	r24, 0x00	; 0
    1baa:	90 e0       	ldi	r25, 0x00	; 0
    1bac:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
	TFT_Print(0, 115, " * GVHD: DANG PHUOC VINH", BIG, COLOR_TEXT);
    1bb0:	21 e0       	ldi	r18, 0x01	; 1
    1bb2:	4f ea       	ldi	r20, 0xAF	; 175
    1bb4:	50 e0       	ldi	r21, 0x00	; 0
    1bb6:	63 e7       	ldi	r22, 0x73	; 115
    1bb8:	70 e0       	ldi	r23, 0x00	; 0
    1bba:	80 e0       	ldi	r24, 0x00	; 0
    1bbc:	90 e0       	ldi	r25, 0x00	; 0
    1bbe:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
	TFT_Print(0, 90, " * LOP : 13CDT1", BIG, COLOR_TEXT);
    1bc2:	21 e0       	ldi	r18, 0x01	; 1
    1bc4:	48 ec       	ldi	r20, 0xC8	; 200
    1bc6:	50 e0       	ldi	r21, 0x00	; 0
    1bc8:	6a e5       	ldi	r22, 0x5A	; 90
    1bca:	70 e0       	ldi	r23, 0x00	; 0
    1bcc:	80 e0       	ldi	r24, 0x00	; 0
    1bce:	90 e0       	ldi	r25, 0x00	; 0
    1bd0:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
	TFT_Print(0, 65, " * NHOM: 13.05B", BIG, COLOR_TEXT);
    1bd4:	21 e0       	ldi	r18, 0x01	; 1
    1bd6:	48 ed       	ldi	r20, 0xD8	; 216
    1bd8:	50 e0       	ldi	r21, 0x00	; 0
    1bda:	61 e4       	ldi	r22, 0x41	; 65
    1bdc:	70 e0       	ldi	r23, 0x00	; 0
    1bde:	80 e0       	ldi	r24, 0x00	; 0
    1be0:	90 e0       	ldi	r25, 0x00	; 0
    1be2:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
	TFT_Print(0, 40, " * MSSV: 101130174", BIG, COLOR_TEXT);
    1be6:	21 e0       	ldi	r18, 0x01	; 1
    1be8:	48 ee       	ldi	r20, 0xE8	; 232
    1bea:	50 e0       	ldi	r21, 0x00	; 0
    1bec:	68 e2       	ldi	r22, 0x28	; 40
    1bee:	70 e0       	ldi	r23, 0x00	; 0
    1bf0:	80 e0       	ldi	r24, 0x00	; 0
    1bf2:	90 e0       	ldi	r25, 0x00	; 0
    1bf4:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
	TFT_Print(0, 15, " */", BIG, COLOR_TEXT);
    1bf8:	21 e0       	ldi	r18, 0x01	; 1
    1bfa:	4b ef       	ldi	r20, 0xFB	; 251
    1bfc:	50 e0       	ldi	r21, 0x00	; 0
    1bfe:	6f e0       	ldi	r22, 0x0F	; 15
    1c00:	70 e0       	ldi	r23, 0x00	; 0
    1c02:	80 e0       	ldi	r24, 0x00	; 0
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
    1c0a:	2f ef       	ldi	r18, 0xFF	; 255
    1c0c:	83 e2       	ldi	r24, 0x23	; 35
    1c0e:	94 ef       	ldi	r25, 0xF4	; 244
    1c10:	21 50       	subi	r18, 0x01	; 1
    1c12:	80 40       	sbci	r24, 0x00	; 0
    1c14:	90 40       	sbci	r25, 0x00	; 0
    1c16:	e1 f7       	brne	.-8      	; 0x1c10 <main+0xc2>
    1c18:	00 c0       	rjmp	.+0      	; 0x1c1a <main+0xcc>
    1c1a:	00 00       	nop
	_delay_ms(5000);
	TFT_FillScreen(SCREEN_COLOR);
    1c1c:	80 e0       	ldi	r24, 0x00	; 0
    1c1e:	90 e0       	ldi	r25, 0x00	; 0
    1c20:	0e 94 21 0a 	call	0x1442	; 0x1442 <TFT_FillScreen>
	TFT_Print(65, 180, "R-OSCILLOSCOPE", BIG, COLOR_TEXT);
    1c24:	21 e0       	ldi	r18, 0x01	; 1
    1c26:	4f ef       	ldi	r20, 0xFF	; 255
    1c28:	50 e0       	ldi	r21, 0x00	; 0
    1c2a:	64 eb       	ldi	r22, 0xB4	; 180
    1c2c:	70 e0       	ldi	r23, 0x00	; 0
    1c2e:	81 e4       	ldi	r24, 0x41	; 65
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
	TFT_Print(75, 145, "LOADING:   %", BIG, COLOR_TEXT);
    1c36:	21 e0       	ldi	r18, 0x01	; 1
    1c38:	4e e0       	ldi	r20, 0x0E	; 14
    1c3a:	51 e0       	ldi	r21, 0x01	; 1
    1c3c:	61 e9       	ldi	r22, 0x91	; 145
    1c3e:	70 e0       	ldi	r23, 0x00	; 0
    1c40:	8b e4       	ldi	r24, 0x4B	; 75
    1c42:	90 e0       	ldi	r25, 0x00	; 0
    1c44:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
	TFT_DrawRectangle(9, 109, 310, 127, MAGENTA );
    1c48:	0f e1       	ldi	r16, 0x1F	; 31
    1c4a:	18 ef       	ldi	r17, 0xF8	; 248
    1c4c:	2f e7       	ldi	r18, 0x7F	; 127
    1c4e:	30 e0       	ldi	r19, 0x00	; 0
    1c50:	46 e3       	ldi	r20, 0x36	; 54
    1c52:	51 e0       	ldi	r21, 0x01	; 1
    1c54:	6d e6       	ldi	r22, 0x6D	; 109
    1c56:	70 e0       	ldi	r23, 0x00	; 0
    1c58:	89 e0       	ldi	r24, 0x09	; 9
    1c5a:	90 e0       	ldi	r25, 0x00	; 0
    1c5c:	0e 94 a9 0a 	call	0x1552	; 0x1552 <TFT_DrawRectangle>
	TFT_DrawRectangle(7, 107, 312, 129, MAGENTA );
    1c60:	21 e8       	ldi	r18, 0x81	; 129
    1c62:	30 e0       	ldi	r19, 0x00	; 0
    1c64:	48 e3       	ldi	r20, 0x38	; 56
    1c66:	51 e0       	ldi	r21, 0x01	; 1
    1c68:	6b e6       	ldi	r22, 0x6B	; 107
    1c6a:	70 e0       	ldi	r23, 0x00	; 0
    1c6c:	87 e0       	ldi	r24, 0x07	; 7
    1c6e:	90 e0       	ldi	r25, 0x00	; 0
    1c70:	0e 94 a9 0a 	call	0x1552	; 0x1552 <TFT_DrawRectangle>
	for (int count = 10; count < 310; count++)
    1c74:	ca e0       	ldi	r28, 0x0A	; 10
    1c76:	d0 e0       	ldi	r29, 0x00	; 0
	{
		TFT_Number_Dec(175, 145, (count - 10)/3 + 1, BIG, COLOR_TEXT);
    1c78:	0f 2e       	mov	r0, r31
    1c7a:	f3 e0       	ldi	r31, 0x03	; 3
    1c7c:	cf 2e       	mov	r12, r31
    1c7e:	d1 2c       	mov	r13, r1
    1c80:	f0 2d       	mov	r31, r0
    1c82:	ce 01       	movw	r24, r28
    1c84:	0a 97       	sbiw	r24, 0x0a	; 10
    1c86:	b6 01       	movw	r22, r12
    1c88:	0e 94 8f 0e 	call	0x1d1e	; 0x1d1e <__divmodhi4>
    1c8c:	9b 01       	movw	r18, r22
    1c8e:	2f 5f       	subi	r18, 0xFF	; 255
    1c90:	3f 4f       	sbci	r19, 0xFF	; 255
    1c92:	44 27       	eor	r20, r20
    1c94:	37 fd       	sbrc	r19, 7
    1c96:	40 95       	com	r20
    1c98:	54 2f       	mov	r21, r20
    1c9a:	0f 2e       	mov	r0, r31
    1c9c:	f0 ee       	ldi	r31, 0xE0	; 224
    1c9e:	ef 2e       	mov	r14, r31
    1ca0:	f7 e0       	ldi	r31, 0x07	; 7
    1ca2:	ff 2e       	mov	r15, r31
    1ca4:	f0 2d       	mov	r31, r0
    1ca6:	01 e0       	ldi	r16, 0x01	; 1
    1ca8:	61 e9       	ldi	r22, 0x91	; 145
    1caa:	70 e0       	ldi	r23, 0x00	; 0
    1cac:	8f ea       	ldi	r24, 0xAF	; 175
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	0e 94 46 0c 	call	0x188c	; 0x188c <TFT_Number_Dec>
		TFT_DrawLineY(count, 110, 126, YELLOW);
    1cb4:	20 ee       	ldi	r18, 0xE0	; 224
    1cb6:	3f ef       	ldi	r19, 0xFF	; 255
    1cb8:	4e e7       	ldi	r20, 0x7E	; 126
    1cba:	50 e0       	ldi	r21, 0x00	; 0
    1cbc:	6e e6       	ldi	r22, 0x6E	; 110
    1cbe:	70 e0       	ldi	r23, 0x00	; 0
    1cc0:	ce 01       	movw	r24, r28
    1cc2:	0e 94 48 0a 	call	0x1490	; 0x1490 <TFT_DrawLineY>
	TFT_FillScreen(SCREEN_COLOR);
	TFT_Print(65, 180, "R-OSCILLOSCOPE", BIG, COLOR_TEXT);
	TFT_Print(75, 145, "LOADING:   %", BIG, COLOR_TEXT);
	TFT_DrawRectangle(9, 109, 310, 127, MAGENTA );
	TFT_DrawRectangle(7, 107, 312, 129, MAGENTA );
	for (int count = 10; count < 310; count++)
    1cc6:	21 96       	adiw	r28, 0x01	; 1
    1cc8:	c6 33       	cpi	r28, 0x36	; 54
    1cca:	21 e0       	ldi	r18, 0x01	; 1
    1ccc:	d2 07       	cpc	r29, r18
    1cce:	c9 f6       	brne	.-78     	; 0x1c82 <main+0x134>
	{
		TFT_Number_Dec(175, 145, (count - 10)/3 + 1, BIG, COLOR_TEXT);
		TFT_DrawLineY(count, 110, 126, YELLOW);
	}
	TFT_Print(75, 75, "   DONE!!!   ", BIG, COLOR_TEXT);
    1cd0:	00 ee       	ldi	r16, 0xE0	; 224
    1cd2:	17 e0       	ldi	r17, 0x07	; 7
    1cd4:	21 e0       	ldi	r18, 0x01	; 1
    1cd6:	4b e1       	ldi	r20, 0x1B	; 27
    1cd8:	51 e0       	ldi	r21, 0x01	; 1
    1cda:	6b e4       	ldi	r22, 0x4B	; 75
    1cdc:	70 e0       	ldi	r23, 0x00	; 0
    1cde:	8b e4       	ldi	r24, 0x4B	; 75
    1ce0:	90 e0       	ldi	r25, 0x00	; 0
    1ce2:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
    1ce6:	8f ef       	ldi	r24, 0xFF	; 255
    1ce8:	97 ea       	ldi	r25, 0xA7	; 167
    1cea:	21 e6       	ldi	r18, 0x61	; 97
    1cec:	81 50       	subi	r24, 0x01	; 1
    1cee:	90 40       	sbci	r25, 0x00	; 0
    1cf0:	20 40       	sbci	r18, 0x00	; 0
    1cf2:	e1 f7       	brne	.-8      	; 0x1cec <main+0x19e>
    1cf4:	00 c0       	rjmp	.+0      	; 0x1cf6 <main+0x1a8>
    1cf6:	00 00       	nop
	_delay_ms(2000);
	TFT_Print(20, 40, "''LET THE GAME BEGIN''", BIG, COLOR_TEXT);
    1cf8:	21 e0       	ldi	r18, 0x01	; 1
    1cfa:	49 e2       	ldi	r20, 0x29	; 41
    1cfc:	51 e0       	ldi	r21, 0x01	; 1
    1cfe:	68 e2       	ldi	r22, 0x28	; 40
    1d00:	70 e0       	ldi	r23, 0x00	; 0
    1d02:	84 e1       	ldi	r24, 0x14	; 20
    1d04:	90 e0       	ldi	r25, 0x00	; 0
    1d06:	0e 94 13 0c 	call	0x1826	; 0x1826 <TFT_Print>
    1d0a:	8f ef       	ldi	r24, 0xFF	; 255
    1d0c:	97 ea       	ldi	r25, 0xA7	; 167
    1d0e:	21 e6       	ldi	r18, 0x61	; 97
    1d10:	81 50       	subi	r24, 0x01	; 1
    1d12:	90 40       	sbci	r25, 0x00	; 0
    1d14:	20 40       	sbci	r18, 0x00	; 0
    1d16:	e1 f7       	brne	.-8      	; 0x1d10 <main+0x1c2>
    1d18:	00 c0       	rjmp	.+0      	; 0x1d1a <main+0x1cc>
    1d1a:	00 00       	nop
    1d1c:	ff cf       	rjmp	.-2      	; 0x1d1c <main+0x1ce>

00001d1e <__divmodhi4>:
    1d1e:	97 fb       	bst	r25, 7
    1d20:	07 2e       	mov	r0, r23
    1d22:	16 f4       	brtc	.+4      	; 0x1d28 <__divmodhi4+0xa>
    1d24:	00 94       	com	r0
    1d26:	07 d0       	rcall	.+14     	; 0x1d36 <__divmodhi4_neg1>
    1d28:	77 fd       	sbrc	r23, 7
    1d2a:	09 d0       	rcall	.+18     	; 0x1d3e <__divmodhi4_neg2>
    1d2c:	0e 94 b2 0e 	call	0x1d64	; 0x1d64 <__udivmodhi4>
    1d30:	07 fc       	sbrc	r0, 7
    1d32:	05 d0       	rcall	.+10     	; 0x1d3e <__divmodhi4_neg2>
    1d34:	3e f4       	brtc	.+14     	; 0x1d44 <__divmodhi4_exit>

00001d36 <__divmodhi4_neg1>:
    1d36:	90 95       	com	r25
    1d38:	81 95       	neg	r24
    1d3a:	9f 4f       	sbci	r25, 0xFF	; 255
    1d3c:	08 95       	ret

00001d3e <__divmodhi4_neg2>:
    1d3e:	70 95       	com	r23
    1d40:	61 95       	neg	r22
    1d42:	7f 4f       	sbci	r23, 0xFF	; 255

00001d44 <__divmodhi4_exit>:
    1d44:	08 95       	ret

00001d46 <__umulhisi3>:
    1d46:	a2 9f       	mul	r26, r18
    1d48:	b0 01       	movw	r22, r0
    1d4a:	b3 9f       	mul	r27, r19
    1d4c:	c0 01       	movw	r24, r0
    1d4e:	a3 9f       	mul	r26, r19
    1d50:	70 0d       	add	r23, r0
    1d52:	81 1d       	adc	r24, r1
    1d54:	11 24       	eor	r1, r1
    1d56:	91 1d       	adc	r25, r1
    1d58:	b2 9f       	mul	r27, r18
    1d5a:	70 0d       	add	r23, r0
    1d5c:	81 1d       	adc	r24, r1
    1d5e:	11 24       	eor	r1, r1
    1d60:	91 1d       	adc	r25, r1
    1d62:	08 95       	ret

00001d64 <__udivmodhi4>:
    1d64:	aa 1b       	sub	r26, r26
    1d66:	bb 1b       	sub	r27, r27
    1d68:	51 e1       	ldi	r21, 0x11	; 17
    1d6a:	07 c0       	rjmp	.+14     	; 0x1d7a <__udivmodhi4_ep>

00001d6c <__udivmodhi4_loop>:
    1d6c:	aa 1f       	adc	r26, r26
    1d6e:	bb 1f       	adc	r27, r27
    1d70:	a6 17       	cp	r26, r22
    1d72:	b7 07       	cpc	r27, r23
    1d74:	10 f0       	brcs	.+4      	; 0x1d7a <__udivmodhi4_ep>
    1d76:	a6 1b       	sub	r26, r22
    1d78:	b7 0b       	sbc	r27, r23

00001d7a <__udivmodhi4_ep>:
    1d7a:	88 1f       	adc	r24, r24
    1d7c:	99 1f       	adc	r25, r25
    1d7e:	5a 95       	dec	r21
    1d80:	a9 f7       	brne	.-22     	; 0x1d6c <__udivmodhi4_loop>
    1d82:	80 95       	com	r24
    1d84:	90 95       	com	r25
    1d86:	bc 01       	movw	r22, r24
    1d88:	cd 01       	movw	r24, r26
    1d8a:	08 95       	ret

00001d8c <sprintf>:
    1d8c:	ae e0       	ldi	r26, 0x0E	; 14
    1d8e:	b0 e0       	ldi	r27, 0x00	; 0
    1d90:	ec ec       	ldi	r30, 0xCC	; 204
    1d92:	fe e0       	ldi	r31, 0x0E	; 14
    1d94:	0c 94 6e 11 	jmp	0x22dc	; 0x22dc <__prologue_saves__+0x1c>
    1d98:	0d 89       	ldd	r16, Y+21	; 0x15
    1d9a:	1e 89       	ldd	r17, Y+22	; 0x16
    1d9c:	86 e0       	ldi	r24, 0x06	; 6
    1d9e:	8c 83       	std	Y+4, r24	; 0x04
    1da0:	1a 83       	std	Y+2, r17	; 0x02
    1da2:	09 83       	std	Y+1, r16	; 0x01
    1da4:	8f ef       	ldi	r24, 0xFF	; 255
    1da6:	9f e7       	ldi	r25, 0x7F	; 127
    1da8:	9e 83       	std	Y+6, r25	; 0x06
    1daa:	8d 83       	std	Y+5, r24	; 0x05
    1dac:	ae 01       	movw	r20, r28
    1dae:	47 5e       	subi	r20, 0xE7	; 231
    1db0:	5f 4f       	sbci	r21, 0xFF	; 255
    1db2:	6f 89       	ldd	r22, Y+23	; 0x17
    1db4:	78 8d       	ldd	r23, Y+24	; 0x18
    1db6:	ce 01       	movw	r24, r28
    1db8:	01 96       	adiw	r24, 0x01	; 1
    1dba:	0e 94 e8 0e 	call	0x1dd0	; 0x1dd0 <vfprintf>
    1dbe:	ef 81       	ldd	r30, Y+7	; 0x07
    1dc0:	f8 85       	ldd	r31, Y+8	; 0x08
    1dc2:	e0 0f       	add	r30, r16
    1dc4:	f1 1f       	adc	r31, r17
    1dc6:	10 82       	st	Z, r1
    1dc8:	2e 96       	adiw	r28, 0x0e	; 14
    1dca:	e4 e0       	ldi	r30, 0x04	; 4
    1dcc:	0c 94 8a 11 	jmp	0x2314	; 0x2314 <__epilogue_restores__+0x1c>

00001dd0 <vfprintf>:
    1dd0:	ac e0       	ldi	r26, 0x0C	; 12
    1dd2:	b0 e0       	ldi	r27, 0x00	; 0
    1dd4:	ee ee       	ldi	r30, 0xEE	; 238
    1dd6:	fe e0       	ldi	r31, 0x0E	; 14
    1dd8:	0c 94 60 11 	jmp	0x22c0	; 0x22c0 <__prologue_saves__>
    1ddc:	7c 01       	movw	r14, r24
    1dde:	6b 01       	movw	r12, r22
    1de0:	8a 01       	movw	r16, r20
    1de2:	fc 01       	movw	r30, r24
    1de4:	17 82       	std	Z+7, r1	; 0x07
    1de6:	16 82       	std	Z+6, r1	; 0x06
    1de8:	83 81       	ldd	r24, Z+3	; 0x03
    1dea:	81 ff       	sbrs	r24, 1
    1dec:	bd c1       	rjmp	.+890    	; 0x2168 <vfprintf+0x398>
    1dee:	ce 01       	movw	r24, r28
    1df0:	01 96       	adiw	r24, 0x01	; 1
    1df2:	4c 01       	movw	r8, r24
    1df4:	f7 01       	movw	r30, r14
    1df6:	93 81       	ldd	r25, Z+3	; 0x03
    1df8:	f6 01       	movw	r30, r12
    1dfa:	93 fd       	sbrc	r25, 3
    1dfc:	85 91       	lpm	r24, Z+
    1dfe:	93 ff       	sbrs	r25, 3
    1e00:	81 91       	ld	r24, Z+
    1e02:	6f 01       	movw	r12, r30
    1e04:	88 23       	and	r24, r24
    1e06:	09 f4       	brne	.+2      	; 0x1e0a <vfprintf+0x3a>
    1e08:	ab c1       	rjmp	.+854    	; 0x2160 <vfprintf+0x390>
    1e0a:	85 32       	cpi	r24, 0x25	; 37
    1e0c:	39 f4       	brne	.+14     	; 0x1e1c <vfprintf+0x4c>
    1e0e:	93 fd       	sbrc	r25, 3
    1e10:	85 91       	lpm	r24, Z+
    1e12:	93 ff       	sbrs	r25, 3
    1e14:	81 91       	ld	r24, Z+
    1e16:	6f 01       	movw	r12, r30
    1e18:	85 32       	cpi	r24, 0x25	; 37
    1e1a:	29 f4       	brne	.+10     	; 0x1e26 <vfprintf+0x56>
    1e1c:	b7 01       	movw	r22, r14
    1e1e:	90 e0       	ldi	r25, 0x00	; 0
    1e20:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <fputc>
    1e24:	e7 cf       	rjmp	.-50     	; 0x1df4 <vfprintf+0x24>
    1e26:	51 2c       	mov	r5, r1
    1e28:	31 2c       	mov	r3, r1
    1e2a:	20 e0       	ldi	r18, 0x00	; 0
    1e2c:	20 32       	cpi	r18, 0x20	; 32
    1e2e:	a0 f4       	brcc	.+40     	; 0x1e58 <vfprintf+0x88>
    1e30:	8b 32       	cpi	r24, 0x2B	; 43
    1e32:	69 f0       	breq	.+26     	; 0x1e4e <vfprintf+0x7e>
    1e34:	30 f4       	brcc	.+12     	; 0x1e42 <vfprintf+0x72>
    1e36:	80 32       	cpi	r24, 0x20	; 32
    1e38:	59 f0       	breq	.+22     	; 0x1e50 <vfprintf+0x80>
    1e3a:	83 32       	cpi	r24, 0x23	; 35
    1e3c:	69 f4       	brne	.+26     	; 0x1e58 <vfprintf+0x88>
    1e3e:	20 61       	ori	r18, 0x10	; 16
    1e40:	2c c0       	rjmp	.+88     	; 0x1e9a <vfprintf+0xca>
    1e42:	8d 32       	cpi	r24, 0x2D	; 45
    1e44:	39 f0       	breq	.+14     	; 0x1e54 <vfprintf+0x84>
    1e46:	80 33       	cpi	r24, 0x30	; 48
    1e48:	39 f4       	brne	.+14     	; 0x1e58 <vfprintf+0x88>
    1e4a:	21 60       	ori	r18, 0x01	; 1
    1e4c:	26 c0       	rjmp	.+76     	; 0x1e9a <vfprintf+0xca>
    1e4e:	22 60       	ori	r18, 0x02	; 2
    1e50:	24 60       	ori	r18, 0x04	; 4
    1e52:	23 c0       	rjmp	.+70     	; 0x1e9a <vfprintf+0xca>
    1e54:	28 60       	ori	r18, 0x08	; 8
    1e56:	21 c0       	rjmp	.+66     	; 0x1e9a <vfprintf+0xca>
    1e58:	27 fd       	sbrc	r18, 7
    1e5a:	27 c0       	rjmp	.+78     	; 0x1eaa <vfprintf+0xda>
    1e5c:	30 ed       	ldi	r19, 0xD0	; 208
    1e5e:	38 0f       	add	r19, r24
    1e60:	3a 30       	cpi	r19, 0x0A	; 10
    1e62:	78 f4       	brcc	.+30     	; 0x1e82 <vfprintf+0xb2>
    1e64:	26 ff       	sbrs	r18, 6
    1e66:	06 c0       	rjmp	.+12     	; 0x1e74 <vfprintf+0xa4>
    1e68:	fa e0       	ldi	r31, 0x0A	; 10
    1e6a:	5f 9e       	mul	r5, r31
    1e6c:	30 0d       	add	r19, r0
    1e6e:	11 24       	eor	r1, r1
    1e70:	53 2e       	mov	r5, r19
    1e72:	13 c0       	rjmp	.+38     	; 0x1e9a <vfprintf+0xca>
    1e74:	8a e0       	ldi	r24, 0x0A	; 10
    1e76:	38 9e       	mul	r3, r24
    1e78:	30 0d       	add	r19, r0
    1e7a:	11 24       	eor	r1, r1
    1e7c:	33 2e       	mov	r3, r19
    1e7e:	20 62       	ori	r18, 0x20	; 32
    1e80:	0c c0       	rjmp	.+24     	; 0x1e9a <vfprintf+0xca>
    1e82:	8e 32       	cpi	r24, 0x2E	; 46
    1e84:	21 f4       	brne	.+8      	; 0x1e8e <vfprintf+0xbe>
    1e86:	26 fd       	sbrc	r18, 6
    1e88:	6b c1       	rjmp	.+726    	; 0x2160 <vfprintf+0x390>
    1e8a:	20 64       	ori	r18, 0x40	; 64
    1e8c:	06 c0       	rjmp	.+12     	; 0x1e9a <vfprintf+0xca>
    1e8e:	8c 36       	cpi	r24, 0x6C	; 108
    1e90:	11 f4       	brne	.+4      	; 0x1e96 <vfprintf+0xc6>
    1e92:	20 68       	ori	r18, 0x80	; 128
    1e94:	02 c0       	rjmp	.+4      	; 0x1e9a <vfprintf+0xca>
    1e96:	88 36       	cpi	r24, 0x68	; 104
    1e98:	41 f4       	brne	.+16     	; 0x1eaa <vfprintf+0xda>
    1e9a:	f6 01       	movw	r30, r12
    1e9c:	93 fd       	sbrc	r25, 3
    1e9e:	85 91       	lpm	r24, Z+
    1ea0:	93 ff       	sbrs	r25, 3
    1ea2:	81 91       	ld	r24, Z+
    1ea4:	6f 01       	movw	r12, r30
    1ea6:	81 11       	cpse	r24, r1
    1ea8:	c1 cf       	rjmp	.-126    	; 0x1e2c <vfprintf+0x5c>
    1eaa:	98 2f       	mov	r25, r24
    1eac:	9f 7d       	andi	r25, 0xDF	; 223
    1eae:	95 54       	subi	r25, 0x45	; 69
    1eb0:	93 30       	cpi	r25, 0x03	; 3
    1eb2:	28 f4       	brcc	.+10     	; 0x1ebe <vfprintf+0xee>
    1eb4:	0c 5f       	subi	r16, 0xFC	; 252
    1eb6:	1f 4f       	sbci	r17, 0xFF	; 255
    1eb8:	ff e3       	ldi	r31, 0x3F	; 63
    1eba:	f9 83       	std	Y+1, r31	; 0x01
    1ebc:	0d c0       	rjmp	.+26     	; 0x1ed8 <vfprintf+0x108>
    1ebe:	83 36       	cpi	r24, 0x63	; 99
    1ec0:	31 f0       	breq	.+12     	; 0x1ece <vfprintf+0xfe>
    1ec2:	83 37       	cpi	r24, 0x73	; 115
    1ec4:	71 f0       	breq	.+28     	; 0x1ee2 <vfprintf+0x112>
    1ec6:	83 35       	cpi	r24, 0x53	; 83
    1ec8:	09 f0       	breq	.+2      	; 0x1ecc <vfprintf+0xfc>
    1eca:	5b c0       	rjmp	.+182    	; 0x1f82 <vfprintf+0x1b2>
    1ecc:	22 c0       	rjmp	.+68     	; 0x1f12 <vfprintf+0x142>
    1ece:	f8 01       	movw	r30, r16
    1ed0:	80 81       	ld	r24, Z
    1ed2:	89 83       	std	Y+1, r24	; 0x01
    1ed4:	0e 5f       	subi	r16, 0xFE	; 254
    1ed6:	1f 4f       	sbci	r17, 0xFF	; 255
    1ed8:	44 24       	eor	r4, r4
    1eda:	43 94       	inc	r4
    1edc:	51 2c       	mov	r5, r1
    1ede:	54 01       	movw	r10, r8
    1ee0:	15 c0       	rjmp	.+42     	; 0x1f0c <vfprintf+0x13c>
    1ee2:	38 01       	movw	r6, r16
    1ee4:	f2 e0       	ldi	r31, 0x02	; 2
    1ee6:	6f 0e       	add	r6, r31
    1ee8:	71 1c       	adc	r7, r1
    1eea:	f8 01       	movw	r30, r16
    1eec:	a0 80       	ld	r10, Z
    1eee:	b1 80       	ldd	r11, Z+1	; 0x01
    1ef0:	26 ff       	sbrs	r18, 6
    1ef2:	03 c0       	rjmp	.+6      	; 0x1efa <vfprintf+0x12a>
    1ef4:	65 2d       	mov	r22, r5
    1ef6:	70 e0       	ldi	r23, 0x00	; 0
    1ef8:	02 c0       	rjmp	.+4      	; 0x1efe <vfprintf+0x12e>
    1efa:	6f ef       	ldi	r22, 0xFF	; 255
    1efc:	7f ef       	ldi	r23, 0xFF	; 255
    1efe:	c5 01       	movw	r24, r10
    1f00:	2c 87       	std	Y+12, r18	; 0x0c
    1f02:	0e 94 c5 10 	call	0x218a	; 0x218a <strnlen>
    1f06:	2c 01       	movw	r4, r24
    1f08:	83 01       	movw	r16, r6
    1f0a:	2c 85       	ldd	r18, Y+12	; 0x0c
    1f0c:	2f 77       	andi	r18, 0x7F	; 127
    1f0e:	22 2e       	mov	r2, r18
    1f10:	17 c0       	rjmp	.+46     	; 0x1f40 <vfprintf+0x170>
    1f12:	38 01       	movw	r6, r16
    1f14:	f2 e0       	ldi	r31, 0x02	; 2
    1f16:	6f 0e       	add	r6, r31
    1f18:	71 1c       	adc	r7, r1
    1f1a:	f8 01       	movw	r30, r16
    1f1c:	a0 80       	ld	r10, Z
    1f1e:	b1 80       	ldd	r11, Z+1	; 0x01
    1f20:	26 ff       	sbrs	r18, 6
    1f22:	03 c0       	rjmp	.+6      	; 0x1f2a <vfprintf+0x15a>
    1f24:	65 2d       	mov	r22, r5
    1f26:	70 e0       	ldi	r23, 0x00	; 0
    1f28:	02 c0       	rjmp	.+4      	; 0x1f2e <vfprintf+0x15e>
    1f2a:	6f ef       	ldi	r22, 0xFF	; 255
    1f2c:	7f ef       	ldi	r23, 0xFF	; 255
    1f2e:	c5 01       	movw	r24, r10
    1f30:	2c 87       	std	Y+12, r18	; 0x0c
    1f32:	0e 94 ba 10 	call	0x2174	; 0x2174 <strnlen_P>
    1f36:	2c 01       	movw	r4, r24
    1f38:	2c 85       	ldd	r18, Y+12	; 0x0c
    1f3a:	20 68       	ori	r18, 0x80	; 128
    1f3c:	22 2e       	mov	r2, r18
    1f3e:	83 01       	movw	r16, r6
    1f40:	23 fc       	sbrc	r2, 3
    1f42:	1b c0       	rjmp	.+54     	; 0x1f7a <vfprintf+0x1aa>
    1f44:	83 2d       	mov	r24, r3
    1f46:	90 e0       	ldi	r25, 0x00	; 0
    1f48:	48 16       	cp	r4, r24
    1f4a:	59 06       	cpc	r5, r25
    1f4c:	b0 f4       	brcc	.+44     	; 0x1f7a <vfprintf+0x1aa>
    1f4e:	b7 01       	movw	r22, r14
    1f50:	80 e2       	ldi	r24, 0x20	; 32
    1f52:	90 e0       	ldi	r25, 0x00	; 0
    1f54:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <fputc>
    1f58:	3a 94       	dec	r3
    1f5a:	f4 cf       	rjmp	.-24     	; 0x1f44 <vfprintf+0x174>
    1f5c:	f5 01       	movw	r30, r10
    1f5e:	27 fc       	sbrc	r2, 7
    1f60:	85 91       	lpm	r24, Z+
    1f62:	27 fe       	sbrs	r2, 7
    1f64:	81 91       	ld	r24, Z+
    1f66:	5f 01       	movw	r10, r30
    1f68:	b7 01       	movw	r22, r14
    1f6a:	90 e0       	ldi	r25, 0x00	; 0
    1f6c:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <fputc>
    1f70:	31 10       	cpse	r3, r1
    1f72:	3a 94       	dec	r3
    1f74:	f1 e0       	ldi	r31, 0x01	; 1
    1f76:	4f 1a       	sub	r4, r31
    1f78:	51 08       	sbc	r5, r1
    1f7a:	41 14       	cp	r4, r1
    1f7c:	51 04       	cpc	r5, r1
    1f7e:	71 f7       	brne	.-36     	; 0x1f5c <vfprintf+0x18c>
    1f80:	e5 c0       	rjmp	.+458    	; 0x214c <vfprintf+0x37c>
    1f82:	84 36       	cpi	r24, 0x64	; 100
    1f84:	11 f0       	breq	.+4      	; 0x1f8a <vfprintf+0x1ba>
    1f86:	89 36       	cpi	r24, 0x69	; 105
    1f88:	39 f5       	brne	.+78     	; 0x1fd8 <vfprintf+0x208>
    1f8a:	f8 01       	movw	r30, r16
    1f8c:	27 ff       	sbrs	r18, 7
    1f8e:	07 c0       	rjmp	.+14     	; 0x1f9e <vfprintf+0x1ce>
    1f90:	60 81       	ld	r22, Z
    1f92:	71 81       	ldd	r23, Z+1	; 0x01
    1f94:	82 81       	ldd	r24, Z+2	; 0x02
    1f96:	93 81       	ldd	r25, Z+3	; 0x03
    1f98:	0c 5f       	subi	r16, 0xFC	; 252
    1f9a:	1f 4f       	sbci	r17, 0xFF	; 255
    1f9c:	08 c0       	rjmp	.+16     	; 0x1fae <vfprintf+0x1de>
    1f9e:	60 81       	ld	r22, Z
    1fa0:	71 81       	ldd	r23, Z+1	; 0x01
    1fa2:	88 27       	eor	r24, r24
    1fa4:	77 fd       	sbrc	r23, 7
    1fa6:	80 95       	com	r24
    1fa8:	98 2f       	mov	r25, r24
    1faa:	0e 5f       	subi	r16, 0xFE	; 254
    1fac:	1f 4f       	sbci	r17, 0xFF	; 255
    1fae:	2f 76       	andi	r18, 0x6F	; 111
    1fb0:	b2 2e       	mov	r11, r18
    1fb2:	97 ff       	sbrs	r25, 7
    1fb4:	09 c0       	rjmp	.+18     	; 0x1fc8 <vfprintf+0x1f8>
    1fb6:	90 95       	com	r25
    1fb8:	80 95       	com	r24
    1fba:	70 95       	com	r23
    1fbc:	61 95       	neg	r22
    1fbe:	7f 4f       	sbci	r23, 0xFF	; 255
    1fc0:	8f 4f       	sbci	r24, 0xFF	; 255
    1fc2:	9f 4f       	sbci	r25, 0xFF	; 255
    1fc4:	20 68       	ori	r18, 0x80	; 128
    1fc6:	b2 2e       	mov	r11, r18
    1fc8:	2a e0       	ldi	r18, 0x0A	; 10
    1fca:	30 e0       	ldi	r19, 0x00	; 0
    1fcc:	a4 01       	movw	r20, r8
    1fce:	0e 94 02 11 	call	0x2204	; 0x2204 <__ultoa_invert>
    1fd2:	a8 2e       	mov	r10, r24
    1fd4:	a8 18       	sub	r10, r8
    1fd6:	44 c0       	rjmp	.+136    	; 0x2060 <vfprintf+0x290>
    1fd8:	85 37       	cpi	r24, 0x75	; 117
    1fda:	29 f4       	brne	.+10     	; 0x1fe6 <vfprintf+0x216>
    1fdc:	2f 7e       	andi	r18, 0xEF	; 239
    1fde:	b2 2e       	mov	r11, r18
    1fe0:	2a e0       	ldi	r18, 0x0A	; 10
    1fe2:	30 e0       	ldi	r19, 0x00	; 0
    1fe4:	25 c0       	rjmp	.+74     	; 0x2030 <vfprintf+0x260>
    1fe6:	f2 2f       	mov	r31, r18
    1fe8:	f9 7f       	andi	r31, 0xF9	; 249
    1fea:	bf 2e       	mov	r11, r31
    1fec:	8f 36       	cpi	r24, 0x6F	; 111
    1fee:	c1 f0       	breq	.+48     	; 0x2020 <vfprintf+0x250>
    1ff0:	18 f4       	brcc	.+6      	; 0x1ff8 <vfprintf+0x228>
    1ff2:	88 35       	cpi	r24, 0x58	; 88
    1ff4:	79 f0       	breq	.+30     	; 0x2014 <vfprintf+0x244>
    1ff6:	b4 c0       	rjmp	.+360    	; 0x2160 <vfprintf+0x390>
    1ff8:	80 37       	cpi	r24, 0x70	; 112
    1ffa:	19 f0       	breq	.+6      	; 0x2002 <vfprintf+0x232>
    1ffc:	88 37       	cpi	r24, 0x78	; 120
    1ffe:	21 f0       	breq	.+8      	; 0x2008 <vfprintf+0x238>
    2000:	af c0       	rjmp	.+350    	; 0x2160 <vfprintf+0x390>
    2002:	2f 2f       	mov	r18, r31
    2004:	20 61       	ori	r18, 0x10	; 16
    2006:	b2 2e       	mov	r11, r18
    2008:	b4 fe       	sbrs	r11, 4
    200a:	0d c0       	rjmp	.+26     	; 0x2026 <vfprintf+0x256>
    200c:	8b 2d       	mov	r24, r11
    200e:	84 60       	ori	r24, 0x04	; 4
    2010:	b8 2e       	mov	r11, r24
    2012:	09 c0       	rjmp	.+18     	; 0x2026 <vfprintf+0x256>
    2014:	24 ff       	sbrs	r18, 4
    2016:	0a c0       	rjmp	.+20     	; 0x202c <vfprintf+0x25c>
    2018:	9f 2f       	mov	r25, r31
    201a:	96 60       	ori	r25, 0x06	; 6
    201c:	b9 2e       	mov	r11, r25
    201e:	06 c0       	rjmp	.+12     	; 0x202c <vfprintf+0x25c>
    2020:	28 e0       	ldi	r18, 0x08	; 8
    2022:	30 e0       	ldi	r19, 0x00	; 0
    2024:	05 c0       	rjmp	.+10     	; 0x2030 <vfprintf+0x260>
    2026:	20 e1       	ldi	r18, 0x10	; 16
    2028:	30 e0       	ldi	r19, 0x00	; 0
    202a:	02 c0       	rjmp	.+4      	; 0x2030 <vfprintf+0x260>
    202c:	20 e1       	ldi	r18, 0x10	; 16
    202e:	32 e0       	ldi	r19, 0x02	; 2
    2030:	f8 01       	movw	r30, r16
    2032:	b7 fe       	sbrs	r11, 7
    2034:	07 c0       	rjmp	.+14     	; 0x2044 <vfprintf+0x274>
    2036:	60 81       	ld	r22, Z
    2038:	71 81       	ldd	r23, Z+1	; 0x01
    203a:	82 81       	ldd	r24, Z+2	; 0x02
    203c:	93 81       	ldd	r25, Z+3	; 0x03
    203e:	0c 5f       	subi	r16, 0xFC	; 252
    2040:	1f 4f       	sbci	r17, 0xFF	; 255
    2042:	06 c0       	rjmp	.+12     	; 0x2050 <vfprintf+0x280>
    2044:	60 81       	ld	r22, Z
    2046:	71 81       	ldd	r23, Z+1	; 0x01
    2048:	80 e0       	ldi	r24, 0x00	; 0
    204a:	90 e0       	ldi	r25, 0x00	; 0
    204c:	0e 5f       	subi	r16, 0xFE	; 254
    204e:	1f 4f       	sbci	r17, 0xFF	; 255
    2050:	a4 01       	movw	r20, r8
    2052:	0e 94 02 11 	call	0x2204	; 0x2204 <__ultoa_invert>
    2056:	a8 2e       	mov	r10, r24
    2058:	a8 18       	sub	r10, r8
    205a:	fb 2d       	mov	r31, r11
    205c:	ff 77       	andi	r31, 0x7F	; 127
    205e:	bf 2e       	mov	r11, r31
    2060:	b6 fe       	sbrs	r11, 6
    2062:	0b c0       	rjmp	.+22     	; 0x207a <vfprintf+0x2aa>
    2064:	2b 2d       	mov	r18, r11
    2066:	2e 7f       	andi	r18, 0xFE	; 254
    2068:	a5 14       	cp	r10, r5
    206a:	50 f4       	brcc	.+20     	; 0x2080 <vfprintf+0x2b0>
    206c:	b4 fe       	sbrs	r11, 4
    206e:	0a c0       	rjmp	.+20     	; 0x2084 <vfprintf+0x2b4>
    2070:	b2 fc       	sbrc	r11, 2
    2072:	08 c0       	rjmp	.+16     	; 0x2084 <vfprintf+0x2b4>
    2074:	2b 2d       	mov	r18, r11
    2076:	2e 7e       	andi	r18, 0xEE	; 238
    2078:	05 c0       	rjmp	.+10     	; 0x2084 <vfprintf+0x2b4>
    207a:	7a 2c       	mov	r7, r10
    207c:	2b 2d       	mov	r18, r11
    207e:	03 c0       	rjmp	.+6      	; 0x2086 <vfprintf+0x2b6>
    2080:	7a 2c       	mov	r7, r10
    2082:	01 c0       	rjmp	.+2      	; 0x2086 <vfprintf+0x2b6>
    2084:	75 2c       	mov	r7, r5
    2086:	24 ff       	sbrs	r18, 4
    2088:	0d c0       	rjmp	.+26     	; 0x20a4 <vfprintf+0x2d4>
    208a:	fe 01       	movw	r30, r28
    208c:	ea 0d       	add	r30, r10
    208e:	f1 1d       	adc	r31, r1
    2090:	80 81       	ld	r24, Z
    2092:	80 33       	cpi	r24, 0x30	; 48
    2094:	11 f4       	brne	.+4      	; 0x209a <vfprintf+0x2ca>
    2096:	29 7e       	andi	r18, 0xE9	; 233
    2098:	09 c0       	rjmp	.+18     	; 0x20ac <vfprintf+0x2dc>
    209a:	22 ff       	sbrs	r18, 2
    209c:	06 c0       	rjmp	.+12     	; 0x20aa <vfprintf+0x2da>
    209e:	73 94       	inc	r7
    20a0:	73 94       	inc	r7
    20a2:	04 c0       	rjmp	.+8      	; 0x20ac <vfprintf+0x2dc>
    20a4:	82 2f       	mov	r24, r18
    20a6:	86 78       	andi	r24, 0x86	; 134
    20a8:	09 f0       	breq	.+2      	; 0x20ac <vfprintf+0x2dc>
    20aa:	73 94       	inc	r7
    20ac:	23 fd       	sbrc	r18, 3
    20ae:	13 c0       	rjmp	.+38     	; 0x20d6 <vfprintf+0x306>
    20b0:	20 ff       	sbrs	r18, 0
    20b2:	06 c0       	rjmp	.+12     	; 0x20c0 <vfprintf+0x2f0>
    20b4:	5a 2c       	mov	r5, r10
    20b6:	73 14       	cp	r7, r3
    20b8:	18 f4       	brcc	.+6      	; 0x20c0 <vfprintf+0x2f0>
    20ba:	53 0c       	add	r5, r3
    20bc:	57 18       	sub	r5, r7
    20be:	73 2c       	mov	r7, r3
    20c0:	73 14       	cp	r7, r3
    20c2:	68 f4       	brcc	.+26     	; 0x20de <vfprintf+0x30e>
    20c4:	b7 01       	movw	r22, r14
    20c6:	80 e2       	ldi	r24, 0x20	; 32
    20c8:	90 e0       	ldi	r25, 0x00	; 0
    20ca:	2c 87       	std	Y+12, r18	; 0x0c
    20cc:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <fputc>
    20d0:	73 94       	inc	r7
    20d2:	2c 85       	ldd	r18, Y+12	; 0x0c
    20d4:	f5 cf       	rjmp	.-22     	; 0x20c0 <vfprintf+0x2f0>
    20d6:	73 14       	cp	r7, r3
    20d8:	10 f4       	brcc	.+4      	; 0x20de <vfprintf+0x30e>
    20da:	37 18       	sub	r3, r7
    20dc:	01 c0       	rjmp	.+2      	; 0x20e0 <vfprintf+0x310>
    20de:	31 2c       	mov	r3, r1
    20e0:	24 ff       	sbrs	r18, 4
    20e2:	12 c0       	rjmp	.+36     	; 0x2108 <vfprintf+0x338>
    20e4:	b7 01       	movw	r22, r14
    20e6:	80 e3       	ldi	r24, 0x30	; 48
    20e8:	90 e0       	ldi	r25, 0x00	; 0
    20ea:	2c 87       	std	Y+12, r18	; 0x0c
    20ec:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <fputc>
    20f0:	2c 85       	ldd	r18, Y+12	; 0x0c
    20f2:	22 ff       	sbrs	r18, 2
    20f4:	17 c0       	rjmp	.+46     	; 0x2124 <vfprintf+0x354>
    20f6:	21 ff       	sbrs	r18, 1
    20f8:	03 c0       	rjmp	.+6      	; 0x2100 <vfprintf+0x330>
    20fa:	88 e5       	ldi	r24, 0x58	; 88
    20fc:	90 e0       	ldi	r25, 0x00	; 0
    20fe:	02 c0       	rjmp	.+4      	; 0x2104 <vfprintf+0x334>
    2100:	88 e7       	ldi	r24, 0x78	; 120
    2102:	90 e0       	ldi	r25, 0x00	; 0
    2104:	b7 01       	movw	r22, r14
    2106:	0c c0       	rjmp	.+24     	; 0x2120 <vfprintf+0x350>
    2108:	82 2f       	mov	r24, r18
    210a:	86 78       	andi	r24, 0x86	; 134
    210c:	59 f0       	breq	.+22     	; 0x2124 <vfprintf+0x354>
    210e:	21 fd       	sbrc	r18, 1
    2110:	02 c0       	rjmp	.+4      	; 0x2116 <vfprintf+0x346>
    2112:	80 e2       	ldi	r24, 0x20	; 32
    2114:	01 c0       	rjmp	.+2      	; 0x2118 <vfprintf+0x348>
    2116:	8b e2       	ldi	r24, 0x2B	; 43
    2118:	27 fd       	sbrc	r18, 7
    211a:	8d e2       	ldi	r24, 0x2D	; 45
    211c:	b7 01       	movw	r22, r14
    211e:	90 e0       	ldi	r25, 0x00	; 0
    2120:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <fputc>
    2124:	a5 14       	cp	r10, r5
    2126:	38 f4       	brcc	.+14     	; 0x2136 <vfprintf+0x366>
    2128:	b7 01       	movw	r22, r14
    212a:	80 e3       	ldi	r24, 0x30	; 48
    212c:	90 e0       	ldi	r25, 0x00	; 0
    212e:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <fputc>
    2132:	5a 94       	dec	r5
    2134:	f7 cf       	rjmp	.-18     	; 0x2124 <vfprintf+0x354>
    2136:	aa 94       	dec	r10
    2138:	f4 01       	movw	r30, r8
    213a:	ea 0d       	add	r30, r10
    213c:	f1 1d       	adc	r31, r1
    213e:	80 81       	ld	r24, Z
    2140:	b7 01       	movw	r22, r14
    2142:	90 e0       	ldi	r25, 0x00	; 0
    2144:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <fputc>
    2148:	a1 10       	cpse	r10, r1
    214a:	f5 cf       	rjmp	.-22     	; 0x2136 <vfprintf+0x366>
    214c:	33 20       	and	r3, r3
    214e:	09 f4       	brne	.+2      	; 0x2152 <vfprintf+0x382>
    2150:	51 ce       	rjmp	.-862    	; 0x1df4 <vfprintf+0x24>
    2152:	b7 01       	movw	r22, r14
    2154:	80 e2       	ldi	r24, 0x20	; 32
    2156:	90 e0       	ldi	r25, 0x00	; 0
    2158:	0e 94 d0 10 	call	0x21a0	; 0x21a0 <fputc>
    215c:	3a 94       	dec	r3
    215e:	f6 cf       	rjmp	.-20     	; 0x214c <vfprintf+0x37c>
    2160:	f7 01       	movw	r30, r14
    2162:	86 81       	ldd	r24, Z+6	; 0x06
    2164:	97 81       	ldd	r25, Z+7	; 0x07
    2166:	02 c0       	rjmp	.+4      	; 0x216c <vfprintf+0x39c>
    2168:	8f ef       	ldi	r24, 0xFF	; 255
    216a:	9f ef       	ldi	r25, 0xFF	; 255
    216c:	2c 96       	adiw	r28, 0x0c	; 12
    216e:	e2 e1       	ldi	r30, 0x12	; 18
    2170:	0c 94 7c 11 	jmp	0x22f8	; 0x22f8 <__epilogue_restores__>

00002174 <strnlen_P>:
    2174:	fc 01       	movw	r30, r24
    2176:	05 90       	lpm	r0, Z+
    2178:	61 50       	subi	r22, 0x01	; 1
    217a:	70 40       	sbci	r23, 0x00	; 0
    217c:	01 10       	cpse	r0, r1
    217e:	d8 f7       	brcc	.-10     	; 0x2176 <strnlen_P+0x2>
    2180:	80 95       	com	r24
    2182:	90 95       	com	r25
    2184:	8e 0f       	add	r24, r30
    2186:	9f 1f       	adc	r25, r31
    2188:	08 95       	ret

0000218a <strnlen>:
    218a:	fc 01       	movw	r30, r24
    218c:	61 50       	subi	r22, 0x01	; 1
    218e:	70 40       	sbci	r23, 0x00	; 0
    2190:	01 90       	ld	r0, Z+
    2192:	01 10       	cpse	r0, r1
    2194:	d8 f7       	brcc	.-10     	; 0x218c <strnlen+0x2>
    2196:	80 95       	com	r24
    2198:	90 95       	com	r25
    219a:	8e 0f       	add	r24, r30
    219c:	9f 1f       	adc	r25, r31
    219e:	08 95       	ret

000021a0 <fputc>:
    21a0:	0f 93       	push	r16
    21a2:	1f 93       	push	r17
    21a4:	cf 93       	push	r28
    21a6:	df 93       	push	r29
    21a8:	18 2f       	mov	r17, r24
    21aa:	09 2f       	mov	r16, r25
    21ac:	eb 01       	movw	r28, r22
    21ae:	8b 81       	ldd	r24, Y+3	; 0x03
    21b0:	81 fd       	sbrc	r24, 1
    21b2:	03 c0       	rjmp	.+6      	; 0x21ba <fputc+0x1a>
    21b4:	8f ef       	ldi	r24, 0xFF	; 255
    21b6:	9f ef       	ldi	r25, 0xFF	; 255
    21b8:	20 c0       	rjmp	.+64     	; 0x21fa <fputc+0x5a>
    21ba:	82 ff       	sbrs	r24, 2
    21bc:	10 c0       	rjmp	.+32     	; 0x21de <fputc+0x3e>
    21be:	4e 81       	ldd	r20, Y+6	; 0x06
    21c0:	5f 81       	ldd	r21, Y+7	; 0x07
    21c2:	2c 81       	ldd	r18, Y+4	; 0x04
    21c4:	3d 81       	ldd	r19, Y+5	; 0x05
    21c6:	42 17       	cp	r20, r18
    21c8:	53 07       	cpc	r21, r19
    21ca:	7c f4       	brge	.+30     	; 0x21ea <fputc+0x4a>
    21cc:	e8 81       	ld	r30, Y
    21ce:	f9 81       	ldd	r31, Y+1	; 0x01
    21d0:	9f 01       	movw	r18, r30
    21d2:	2f 5f       	subi	r18, 0xFF	; 255
    21d4:	3f 4f       	sbci	r19, 0xFF	; 255
    21d6:	39 83       	std	Y+1, r19	; 0x01
    21d8:	28 83       	st	Y, r18
    21da:	10 83       	st	Z, r17
    21dc:	06 c0       	rjmp	.+12     	; 0x21ea <fputc+0x4a>
    21de:	e8 85       	ldd	r30, Y+8	; 0x08
    21e0:	f9 85       	ldd	r31, Y+9	; 0x09
    21e2:	81 2f       	mov	r24, r17
    21e4:	09 95       	icall
    21e6:	89 2b       	or	r24, r25
    21e8:	29 f7       	brne	.-54     	; 0x21b4 <fputc+0x14>
    21ea:	2e 81       	ldd	r18, Y+6	; 0x06
    21ec:	3f 81       	ldd	r19, Y+7	; 0x07
    21ee:	2f 5f       	subi	r18, 0xFF	; 255
    21f0:	3f 4f       	sbci	r19, 0xFF	; 255
    21f2:	3f 83       	std	Y+7, r19	; 0x07
    21f4:	2e 83       	std	Y+6, r18	; 0x06
    21f6:	81 2f       	mov	r24, r17
    21f8:	90 2f       	mov	r25, r16
    21fa:	df 91       	pop	r29
    21fc:	cf 91       	pop	r28
    21fe:	1f 91       	pop	r17
    2200:	0f 91       	pop	r16
    2202:	08 95       	ret

00002204 <__ultoa_invert>:
    2204:	fa 01       	movw	r30, r20
    2206:	aa 27       	eor	r26, r26
    2208:	28 30       	cpi	r18, 0x08	; 8
    220a:	51 f1       	breq	.+84     	; 0x2260 <__ultoa_invert+0x5c>
    220c:	20 31       	cpi	r18, 0x10	; 16
    220e:	81 f1       	breq	.+96     	; 0x2270 <__ultoa_invert+0x6c>
    2210:	e8 94       	clt
    2212:	6f 93       	push	r22
    2214:	6e 7f       	andi	r22, 0xFE	; 254
    2216:	6e 5f       	subi	r22, 0xFE	; 254
    2218:	7f 4f       	sbci	r23, 0xFF	; 255
    221a:	8f 4f       	sbci	r24, 0xFF	; 255
    221c:	9f 4f       	sbci	r25, 0xFF	; 255
    221e:	af 4f       	sbci	r26, 0xFF	; 255
    2220:	b1 e0       	ldi	r27, 0x01	; 1
    2222:	3e d0       	rcall	.+124    	; 0x22a0 <__ultoa_invert+0x9c>
    2224:	b4 e0       	ldi	r27, 0x04	; 4
    2226:	3c d0       	rcall	.+120    	; 0x22a0 <__ultoa_invert+0x9c>
    2228:	67 0f       	add	r22, r23
    222a:	78 1f       	adc	r23, r24
    222c:	89 1f       	adc	r24, r25
    222e:	9a 1f       	adc	r25, r26
    2230:	a1 1d       	adc	r26, r1
    2232:	68 0f       	add	r22, r24
    2234:	79 1f       	adc	r23, r25
    2236:	8a 1f       	adc	r24, r26
    2238:	91 1d       	adc	r25, r1
    223a:	a1 1d       	adc	r26, r1
    223c:	6a 0f       	add	r22, r26
    223e:	71 1d       	adc	r23, r1
    2240:	81 1d       	adc	r24, r1
    2242:	91 1d       	adc	r25, r1
    2244:	a1 1d       	adc	r26, r1
    2246:	20 d0       	rcall	.+64     	; 0x2288 <__ultoa_invert+0x84>
    2248:	09 f4       	brne	.+2      	; 0x224c <__ultoa_invert+0x48>
    224a:	68 94       	set
    224c:	3f 91       	pop	r19
    224e:	2a e0       	ldi	r18, 0x0A	; 10
    2250:	26 9f       	mul	r18, r22
    2252:	11 24       	eor	r1, r1
    2254:	30 19       	sub	r19, r0
    2256:	30 5d       	subi	r19, 0xD0	; 208
    2258:	31 93       	st	Z+, r19
    225a:	de f6       	brtc	.-74     	; 0x2212 <__ultoa_invert+0xe>
    225c:	cf 01       	movw	r24, r30
    225e:	08 95       	ret
    2260:	46 2f       	mov	r20, r22
    2262:	47 70       	andi	r20, 0x07	; 7
    2264:	40 5d       	subi	r20, 0xD0	; 208
    2266:	41 93       	st	Z+, r20
    2268:	b3 e0       	ldi	r27, 0x03	; 3
    226a:	0f d0       	rcall	.+30     	; 0x228a <__ultoa_invert+0x86>
    226c:	c9 f7       	brne	.-14     	; 0x2260 <__ultoa_invert+0x5c>
    226e:	f6 cf       	rjmp	.-20     	; 0x225c <__ultoa_invert+0x58>
    2270:	46 2f       	mov	r20, r22
    2272:	4f 70       	andi	r20, 0x0F	; 15
    2274:	40 5d       	subi	r20, 0xD0	; 208
    2276:	4a 33       	cpi	r20, 0x3A	; 58
    2278:	18 f0       	brcs	.+6      	; 0x2280 <__ultoa_invert+0x7c>
    227a:	49 5d       	subi	r20, 0xD9	; 217
    227c:	31 fd       	sbrc	r19, 1
    227e:	40 52       	subi	r20, 0x20	; 32
    2280:	41 93       	st	Z+, r20
    2282:	02 d0       	rcall	.+4      	; 0x2288 <__ultoa_invert+0x84>
    2284:	a9 f7       	brne	.-22     	; 0x2270 <__ultoa_invert+0x6c>
    2286:	ea cf       	rjmp	.-44     	; 0x225c <__ultoa_invert+0x58>
    2288:	b4 e0       	ldi	r27, 0x04	; 4
    228a:	a6 95       	lsr	r26
    228c:	97 95       	ror	r25
    228e:	87 95       	ror	r24
    2290:	77 95       	ror	r23
    2292:	67 95       	ror	r22
    2294:	ba 95       	dec	r27
    2296:	c9 f7       	brne	.-14     	; 0x228a <__ultoa_invert+0x86>
    2298:	00 97       	sbiw	r24, 0x00	; 0
    229a:	61 05       	cpc	r22, r1
    229c:	71 05       	cpc	r23, r1
    229e:	08 95       	ret
    22a0:	9b 01       	movw	r18, r22
    22a2:	ac 01       	movw	r20, r24
    22a4:	0a 2e       	mov	r0, r26
    22a6:	06 94       	lsr	r0
    22a8:	57 95       	ror	r21
    22aa:	47 95       	ror	r20
    22ac:	37 95       	ror	r19
    22ae:	27 95       	ror	r18
    22b0:	ba 95       	dec	r27
    22b2:	c9 f7       	brne	.-14     	; 0x22a6 <__ultoa_invert+0xa2>
    22b4:	62 0f       	add	r22, r18
    22b6:	73 1f       	adc	r23, r19
    22b8:	84 1f       	adc	r24, r20
    22ba:	95 1f       	adc	r25, r21
    22bc:	a0 1d       	adc	r26, r0
    22be:	08 95       	ret

000022c0 <__prologue_saves__>:
    22c0:	2f 92       	push	r2
    22c2:	3f 92       	push	r3
    22c4:	4f 92       	push	r4
    22c6:	5f 92       	push	r5
    22c8:	6f 92       	push	r6
    22ca:	7f 92       	push	r7
    22cc:	8f 92       	push	r8
    22ce:	9f 92       	push	r9
    22d0:	af 92       	push	r10
    22d2:	bf 92       	push	r11
    22d4:	cf 92       	push	r12
    22d6:	df 92       	push	r13
    22d8:	ef 92       	push	r14
    22da:	ff 92       	push	r15
    22dc:	0f 93       	push	r16
    22de:	1f 93       	push	r17
    22e0:	cf 93       	push	r28
    22e2:	df 93       	push	r29
    22e4:	cd b7       	in	r28, 0x3d	; 61
    22e6:	de b7       	in	r29, 0x3e	; 62
    22e8:	ca 1b       	sub	r28, r26
    22ea:	db 0b       	sbc	r29, r27
    22ec:	0f b6       	in	r0, 0x3f	; 63
    22ee:	f8 94       	cli
    22f0:	de bf       	out	0x3e, r29	; 62
    22f2:	0f be       	out	0x3f, r0	; 63
    22f4:	cd bf       	out	0x3d, r28	; 61
    22f6:	09 94       	ijmp

000022f8 <__epilogue_restores__>:
    22f8:	2a 88       	ldd	r2, Y+18	; 0x12
    22fa:	39 88       	ldd	r3, Y+17	; 0x11
    22fc:	48 88       	ldd	r4, Y+16	; 0x10
    22fe:	5f 84       	ldd	r5, Y+15	; 0x0f
    2300:	6e 84       	ldd	r6, Y+14	; 0x0e
    2302:	7d 84       	ldd	r7, Y+13	; 0x0d
    2304:	8c 84       	ldd	r8, Y+12	; 0x0c
    2306:	9b 84       	ldd	r9, Y+11	; 0x0b
    2308:	aa 84       	ldd	r10, Y+10	; 0x0a
    230a:	b9 84       	ldd	r11, Y+9	; 0x09
    230c:	c8 84       	ldd	r12, Y+8	; 0x08
    230e:	df 80       	ldd	r13, Y+7	; 0x07
    2310:	ee 80       	ldd	r14, Y+6	; 0x06
    2312:	fd 80       	ldd	r15, Y+5	; 0x05
    2314:	0c 81       	ldd	r16, Y+4	; 0x04
    2316:	1b 81       	ldd	r17, Y+3	; 0x03
    2318:	aa 81       	ldd	r26, Y+2	; 0x02
    231a:	b9 81       	ldd	r27, Y+1	; 0x01
    231c:	ce 0f       	add	r28, r30
    231e:	d1 1d       	adc	r29, r1
    2320:	0f b6       	in	r0, 0x3f	; 63
    2322:	f8 94       	cli
    2324:	de bf       	out	0x3e, r29	; 62
    2326:	0f be       	out	0x3f, r0	; 63
    2328:	cd bf       	out	0x3d, r28	; 61
    232a:	ed 01       	movw	r28, r26
    232c:	08 95       	ret

0000232e <_exit>:
    232e:	f8 94       	cli

00002330 <__stop_program>:
    2330:	ff cf       	rjmp	.-2      	; 0x2330 <__stop_program>
