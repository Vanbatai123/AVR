
TWI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000080a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00800060  0000080a  0000089e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000068  00800088  00800088  000008c6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008c6  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  00000922  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009d8  00000000  00000000  00000a0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000281  00000000  00000000  000013e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000040e  00000000  00000000  00001663  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f4  00000000  00000000  00001a74  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002c5  00000000  00000000  00001c68  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000046e  00000000  00000000  00001f2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d8  00000000  00000000  0000239b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e0       	ldi	r30, 0x0A	; 10
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 38       	cpi	r26, 0x88	; 136
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 e8       	ldi	r26, 0x88	; 136
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 3f       	cpi	r26, 0xF0	; 240
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 1a 01 	call	0x234	; 0x234 <main>
  8a:	0c 94 03 04 	jmp	0x806	; 0x806 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Write2Nib>:
}

void Write2Nib(uint8_t chr)
{
	uint8_t HNib, LNib, temp_data;
	temp_data=DATA_O & 0x0F; //doc 4 bit thap cua DATA_O de mask,
  92:	2b b3       	in	r18, 0x1b	; 27
  94:	2f 70       	andi	r18, 0x0F	; 15

	HNib=chr & 0xF0;
  96:	98 2f       	mov	r25, r24
  98:	90 7f       	andi	r25, 0xF0	; 240
	LNib=(chr<<4) & 0xF0;

	DATA_O =(HNib |temp_data);
  9a:	92 2b       	or	r25, r18
  9c:	9b bb       	out	0x1b, r25	; 27
	sbi(CTRL,EN); //enable
  9e:	db 9a       	sbi	0x1b, 3	; 27
	cbi(CTRL,EN); //disable
  a0:	db 98       	cbi	0x1b, 3	; 27
{
	uint8_t HNib, LNib, temp_data;
	temp_data=DATA_O & 0x0F; //doc 4 bit thap cua DATA_O de mask,

	HNib=chr & 0xF0;
	LNib=(chr<<4) & 0xF0;
  a2:	30 e1       	ldi	r19, 0x10	; 16
  a4:	83 9f       	mul	r24, r19
  a6:	c0 01       	movw	r24, r0
  a8:	11 24       	eor	r1, r1

	DATA_O =(HNib |temp_data);
	sbi(CTRL,EN); //enable
	cbi(CTRL,EN); //disable

	DATA_O =(LNib|temp_data);
  aa:	82 2b       	or	r24, r18
  ac:	8b bb       	out	0x1b, r24	; 27
	sbi(CTRL,EN); //enable
  ae:	db 9a       	sbi	0x1b, 3	; 27
	cbi(CTRL,EN); //disable
  b0:	db 98       	cbi	0x1b, 3	; 27
  b2:	08 95       	ret

000000b4 <init_LCD>:
	_delay_ms(1);
}

void init_LCD()
{
	DDR_CTRL=0xFF;
  b4:	8f ef       	ldi	r24, 0xFF	; 255
  b6:	8a bb       	out	0x1a, r24	; 26
	sbi(DDR_DATA,4);
  b8:	d4 9a       	sbi	0x1a, 4	; 26
	sbi(DDR_DATA,5);
  ba:	d5 9a       	sbi	0x1a, 5	; 26
	sbi(DDR_DATA,6);
  bc:	d6 9a       	sbi	0x1a, 6	; 26
	sbi(DDR_DATA,7);
  be:	d7 9a       	sbi	0x1a, 7	; 26
	//Function set------------------------------------------------------------------------------
	cbi(CTRL,RS);   // the following data is COMMAND
  c0:	da 98       	cbi	0x1b, 2	; 27
	
	cbi(CTRL, EN);
  c2:	db 98       	cbi	0x1b, 3	; 27
	
	sbi(CTRL,EN); //enable
  c4:	db 9a       	sbi	0x1b, 3	; 27
	sbi(DATA_O, 5);
  c6:	dd 9a       	sbi	0x1b, 5	; 27
	cbi(CTRL,EN); //disable
  c8:	db 98       	cbi	0x1b, 3	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ca:	8f ec       	ldi	r24, 0xCF	; 207
  cc:	97 e0       	ldi	r25, 0x07	; 7
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <init_LCD+0x1a>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <init_LCD+0x20>
  d4:	00 00       	nop
	wait_LCD();
	Write2Nib(0x28);//4 bit mode, 2 line, 5x8 font
  d6:	88 e2       	ldi	r24, 0x28	; 40
  d8:	0e 94 49 00 	call	0x92	; 0x92 <Write2Nib>
  dc:	8f ec       	ldi	r24, 0xCF	; 207
  de:	97 e0       	ldi	r25, 0x07	; 7
  e0:	01 97       	sbiw	r24, 0x01	; 1
  e2:	f1 f7       	brne	.-4      	; 0xe0 <init_LCD+0x2c>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <init_LCD+0x32>
  e6:	00 00       	nop
	wait_LCD();
	
	//Display control-------------------------------------------------------------------------
	cbi(CTRL,RS); // the following data is COMMAND
  e8:	da 98       	cbi	0x1b, 2	; 27
	
	Write2Nib(0x0C);
  ea:	8c e0       	ldi	r24, 0x0C	; 12
  ec:	0e 94 49 00 	call	0x92	; 0x92 <Write2Nib>
  f0:	8f ec       	ldi	r24, 0xCF	; 207
  f2:	97 e0       	ldi	r25, 0x07	; 7
  f4:	01 97       	sbiw	r24, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <init_LCD+0x40>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <init_LCD+0x46>
  fa:	00 00       	nop
	//Write2Nib(0x0E);-------------co con tro
	wait_LCD();
	
	//Entry mode set------------------------------------------------------------------------
	cbi(CTRL,RS); // the following data is COMMAND
  fc:	da 98       	cbi	0x1b, 2	; 27
	
	Write2Nib(0x06);
  fe:	86 e0       	ldi	r24, 0x06	; 6
 100:	0e 94 49 00 	call	0x92	; 0x92 <Write2Nib>
 104:	8f ec       	ldi	r24, 0xCF	; 207
 106:	97 e0       	ldi	r25, 0x07	; 7
 108:	01 97       	sbiw	r24, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <init_LCD+0x54>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <init_LCD+0x5a>
 10e:	00 00       	nop
 110:	08 95       	ret

00000112 <move_LCD>:
}
void move_LCD(uint8_t y,uint8_t x)
{
	uint8_t Ad;
	Ad=64*(y-1)+(x-1)+0x80; // tính mã l?nh
	cbi(CTRL,RS); // the following data is COMMAND
 112:	da 98       	cbi	0x1b, 2	; 27
	
}
void move_LCD(uint8_t y,uint8_t x)
{
	uint8_t Ad;
	Ad=64*(y-1)+(x-1)+0x80; // tính mã l?nh
 114:	90 e4       	ldi	r25, 0x40	; 64
 116:	89 9f       	mul	r24, r25
 118:	60 0d       	add	r22, r0
 11a:	11 24       	eor	r1, r1
 11c:	86 2f       	mov	r24, r22
	cbi(CTRL,RS); // the following data is COMMAND
	
	Write2Nib(Ad);
 11e:	81 5c       	subi	r24, 0xC1	; 193
 120:	0e 94 49 00 	call	0x92	; 0x92 <Write2Nib>
 124:	8f ec       	ldi	r24, 0xCF	; 207
 126:	97 e0       	ldi	r25, 0x07	; 7
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <move_LCD+0x16>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <move_LCD+0x1c>
 12e:	00 00       	nop
 130:	08 95       	ret

00000132 <putChar_LCD>:
	wait_LCD();
	
}
void putChar_LCD(uint8_t chr)
{ //hi?n th? 1 ký t? chr lên LCD
	sbi(CTRL,RS); //this is a normal DATA
 132:	da 9a       	sbi	0x1b, 2	; 27
	
	Write2Nib(chr);
 134:	0e 94 49 00 	call	0x92	; 0x92 <Write2Nib>
 138:	8f ec       	ldi	r24, 0xCF	; 207
 13a:	97 e0       	ldi	r25, 0x07	; 7
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <putChar_LCD+0xa>
 140:	00 c0       	rjmp	.+0      	; 0x142 <putChar_LCD+0x10>
 142:	00 00       	nop
 144:	08 95       	ret

00000146 <print_LCD>:
	wait_LCD();
	
}
void print_LCD(char* str)//******__HIEN THI CHUOI KI TU__*********************
{
 146:	cf 93       	push	r28
 148:	df 93       	push	r29
 14a:	ec 01       	movw	r28, r24
	int i;
	for (i=0; str[i]!=0; i++) 
 14c:	88 81       	ld	r24, Y
 14e:	88 23       	and	r24, r24
 150:	31 f0       	breq	.+12     	; 0x15e <print_LCD+0x18>
 152:	21 96       	adiw	r28, 0x01	; 1
	putChar_LCD(str[i]);
 154:	0e 94 99 00 	call	0x132	; 0x132 <putChar_LCD>
	
}
void print_LCD(char* str)//******__HIEN THI CHUOI KI TU__*********************
{
	int i;
	for (i=0; str[i]!=0; i++) 
 158:	89 91       	ld	r24, Y+
 15a:	81 11       	cpse	r24, r1
 15c:	fb cf       	rjmp	.-10     	; 0x154 <print_LCD+0xe>
	putChar_LCD(str[i]);
}
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <vietso>:
void vietso(int num)
{
 164:	0f 93       	push	r16
 166:	1f 93       	push	r17
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	00 d0       	rcall	.+0      	; 0x16e <vietso+0xa>
 16e:	00 d0       	rcall	.+0      	; 0x170 <vietso+0xc>
 170:	1f 92       	push	r1
 172:	cd b7       	in	r28, 0x3d	; 61
 174:	de b7       	in	r29, 0x3e	; 62
	char dis[5];
	sprintf(dis, "%i", num);
 176:	9f 93       	push	r25
 178:	8f 93       	push	r24
 17a:	84 e8       	ldi	r24, 0x84	; 132
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	9f 93       	push	r25
 180:	8f 93       	push	r24
 182:	8e 01       	movw	r16, r28
 184:	0f 5f       	subi	r16, 0xFF	; 255
 186:	1f 4f       	sbci	r17, 0xFF	; 255
 188:	1f 93       	push	r17
 18a:	0f 93       	push	r16
 18c:	0e 94 32 01 	call	0x264	; 0x264 <sprintf>
	print_LCD(dis);
 190:	c8 01       	movw	r24, r16
 192:	0e 94 a3 00 	call	0x146	; 0x146 <print_LCD>
 196:	0f 90       	pop	r0
 198:	0f 90       	pop	r0
 19a:	0f 90       	pop	r0
 19c:	0f 90       	pop	r0
 19e:	0f 90       	pop	r0
 1a0:	0f 90       	pop	r0
 1a2:	0f 90       	pop	r0
 1a4:	0f 90       	pop	r0
 1a6:	0f 90       	pop	r0
 1a8:	0f 90       	pop	r0
 1aa:	0f 90       	pop	r0
 1ac:	df 91       	pop	r29
 1ae:	cf 91       	pop	r28
 1b0:	1f 91       	pop	r17
 1b2:	0f 91       	pop	r16
 1b4:	08 95       	ret

000001b6 <TWI_init_master>:
#define write 0
int data_received[50],write_data=107;
//------------master------------------------
void TWI_init_master(void) // Function to initialize master(KHOI TAO CHUC NANG MASTER)
{
	TWBR=0x01;    // Bit rate(TOC DO)
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	80 b9       	out	0x00, r24	; 0
	TWSR=(0<<TWPS1)|(0<<TWPS0);    // Setting prescalar bits
 1ba:	11 b8       	out	0x01, r1	; 1
 1bc:	08 95       	ret

000001be <TWI_start>:
}

void TWI_start(void)
{
	// Clear TWI interrupt flag, Put start condition on SDA, Enable TWI(XOA CO NGAT TWI,DAT DIEU KIEN BAT DAU SDA,Enable TWI)
	TWCR= (1<<TWINT)|(1<<TWSTA)|(1<<TWEN);
 1be:	84 ea       	ldi	r24, 0xA4	; 164
 1c0:	86 bf       	out	0x36, r24	; 54
	while(!(TWCR & (1<<TWINT))); // Wait till start condition is transmitted(CHO DEN KHI DIEU KIEN BAT DAU DUOC TRUYEN)
 1c2:	06 b6       	in	r0, 0x36	; 54
 1c4:	07 fe       	sbrs	r0, 7
 1c6:	fd cf       	rjmp	.-6      	; 0x1c2 <TWI_start+0x4>
	//while((TWSR & 0xF8)!= 0x08); // Check for the acknowledgement(KIEM TRA ACK)
}
 1c8:	08 95       	ret

000001ca <TWI_read_address>:
	//while((TWSR & 0xF8)!= 0x18);  // Check for the acknoledgement   (CHECK ACK)
}

void TWI_read_address(unsigned char data)
{
	TWDR=data;    // Address and read instruction(DATA=ADDRESS+READ)
 1ca:	83 b9       	out	0x03, r24	; 3
	TWCR=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
 1cc:	84 e8       	ldi	r24, 0x84	; 132
 1ce:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT))); // Wait till complete TWDR byte received(CHO TOI KHI 1 BYTE DUOC NHAN THANH CONG)
 1d0:	06 b6       	in	r0, 0x36	; 54
 1d2:	07 fe       	sbrs	r0, 7
 1d4:	fd cf       	rjmp	.-6      	; 0x1d0 <TWI_read_address+0x6>
	while((TWSR & 0xF8)!= 0x40);  // Check for the acknoledgement
 1d6:	81 b1       	in	r24, 0x01	; 1
 1d8:	88 7f       	andi	r24, 0xF8	; 248
 1da:	80 34       	cpi	r24, 0x40	; 64
 1dc:	e1 f7       	brne	.-8      	; 0x1d6 <TWI_read_address+0xc>
}
 1de:	08 95       	ret

000001e0 <TWI_read_data>:
	//while((TWSR & 0xF8) != 0x28); // Check for the acknoledgement
}

void TWI_read_data(void)
{
	TWCR=(1<<TWINT)|(1<<TWEN);    // Clear TWI interrupt flag,Enable TWI
 1e0:	84 e8       	ldi	r24, 0x84	; 132
 1e2:	86 bf       	out	0x36, r24	; 54
	while (!(TWCR & (1<<TWINT))); // Wait till complete TWDR byte transmitted
 1e4:	06 b6       	in	r0, 0x36	; 54
 1e6:	07 fe       	sbrs	r0, 7
 1e8:	fd cf       	rjmp	.-6      	; 0x1e4 <TWI_read_data+0x4>
	while((TWSR & 0xF8) != 0x58); // Check for the acknoledgement
 1ea:	81 b1       	in	r24, 0x01	; 1
 1ec:	88 7f       	andi	r24, 0xF8	; 248
 1ee:	88 35       	cpi	r24, 0x58	; 88
 1f0:	e1 f7       	brne	.-8      	; 0x1ea <TWI_read_data+0xa>
	data_received[i]=TWDR;
 1f2:	83 b1       	in	r24, 0x03	; 3
 1f4:	e0 91 88 00 	lds	r30, 0x0088
 1f8:	f0 91 89 00 	lds	r31, 0x0089
 1fc:	ee 0f       	add	r30, r30
 1fe:	ff 1f       	adc	r31, r31
 200:	e6 57       	subi	r30, 0x76	; 118
 202:	ff 4f       	sbci	r31, 0xFF	; 255
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	91 83       	std	Z+1, r25	; 0x01
 208:	80 83       	st	Z, r24
 20a:	08 95       	ret

0000020c <TWI_Master_Read>:
int data[]={2,3,5,1,7,9,1,3,5,7,9,211,44,55,66,77,88,99};
int a,address=0x20;
#include "E:\AVR\Header\myTWI.h"

void TWI_Master_Read(int add,int data[])
{
 20c:	cf 93       	push	r28
 20e:	c8 2f       	mov	r28, r24
	TWI_start();
 210:	0e 94 df 00 	call	0x1be	; 0x1be <TWI_start>
	TWI_read_address(add+read);
 214:	81 e0       	ldi	r24, 0x01	; 1
 216:	8c 0f       	add	r24, r28
 218:	0e 94 e5 00 	call	0x1ca	; 0x1ca <TWI_read_address>
	TWI_read_data();
 21c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <TWI_read_data>
}

void TWI_stop(void)
{
	// Clear TWI interrupt flag, Put stop condition on SDA, Enable TWI
	TWCR= (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
 220:	84 e9       	ldi	r24, 0x94	; 148
 222:	86 bf       	out	0x36, r24	; 54
 224:	8f ec       	ldi	r24, 0xCF	; 207
 226:	97 e0       	ldi	r25, 0x07	; 7
 228:	01 97       	sbiw	r24, 0x01	; 1
 22a:	f1 f7       	brne	.-4      	; 0x228 <TWI_Master_Read+0x1c>
 22c:	00 c0       	rjmp	.+0      	; 0x22e <TWI_Master_Read+0x22>
 22e:	00 00       	nop
	TWI_stop();
	_delay_ms(1);
}
 230:	cf 91       	pop	r28
 232:	08 95       	ret

00000234 <main>:
int main(void)
{
	init_LCD();
 234:	0e 94 5a 00 	call	0xb4	; 0xb4 <init_LCD>
	TWI_init_master();
 238:	0e 94 db 00 	call	0x1b6	; 0x1b6 <TWI_init_master>
	//thiet lap ngat ngoai
	PORTD=0xFF;	//pull-up
 23c:	8f ef       	ldi	r24, 0xFF	; 255
 23e:	82 bb       	out	0x12, r24	; 18
	DDRD=0x00;
 240:	11 ba       	out	0x11, r1	; 17
		_delay_ms(500);
		// dia chi, data, mode*/
		
		move_LCD(1,1);
		TWI_Master_Read(0x20,data);// dia chi, data, mode
		vietso(data_received[0]);
 242:	ca e8       	ldi	r28, 0x8A	; 138
 244:	d0 e0       	ldi	r29, 0x00	; 0
		print_LCD(" ");
		i++;
		_delay_ms(500);
		// dia chi, data, mode*/
		
		move_LCD(1,1);
 246:	61 e0       	ldi	r22, 0x01	; 1
 248:	81 e0       	ldi	r24, 0x01	; 1
 24a:	0e 94 89 00 	call	0x112	; 0x112 <move_LCD>
		TWI_Master_Read(0x20,data);// dia chi, data, mode
 24e:	60 e6       	ldi	r22, 0x60	; 96
 250:	70 e0       	ldi	r23, 0x00	; 0
 252:	80 e2       	ldi	r24, 0x20	; 32
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	0e 94 06 01 	call	0x20c	; 0x20c <TWI_Master_Read>
		vietso(data_received[0]);
 25a:	88 81       	ld	r24, Y
 25c:	99 81       	ldd	r25, Y+1	; 0x01
 25e:	0e 94 b2 00 	call	0x164	; 0x164 <vietso>
 262:	f1 cf       	rjmp	.-30     	; 0x246 <main+0x12>

00000264 <sprintf>:
 264:	ae e0       	ldi	r26, 0x0E	; 14
 266:	b0 e0       	ldi	r27, 0x00	; 0
 268:	e8 e3       	ldi	r30, 0x38	; 56
 26a:	f1 e0       	ldi	r31, 0x01	; 1
 26c:	0c 94 da 03 	jmp	0x7b4	; 0x7b4 <__prologue_saves__+0x1c>
 270:	0d 89       	ldd	r16, Y+21	; 0x15
 272:	1e 89       	ldd	r17, Y+22	; 0x16
 274:	86 e0       	ldi	r24, 0x06	; 6
 276:	8c 83       	std	Y+4, r24	; 0x04
 278:	1a 83       	std	Y+2, r17	; 0x02
 27a:	09 83       	std	Y+1, r16	; 0x01
 27c:	8f ef       	ldi	r24, 0xFF	; 255
 27e:	9f e7       	ldi	r25, 0x7F	; 127
 280:	9e 83       	std	Y+6, r25	; 0x06
 282:	8d 83       	std	Y+5, r24	; 0x05
 284:	ae 01       	movw	r20, r28
 286:	47 5e       	subi	r20, 0xE7	; 231
 288:	5f 4f       	sbci	r21, 0xFF	; 255
 28a:	6f 89       	ldd	r22, Y+23	; 0x17
 28c:	78 8d       	ldd	r23, Y+24	; 0x18
 28e:	ce 01       	movw	r24, r28
 290:	01 96       	adiw	r24, 0x01	; 1
 292:	0e 94 54 01 	call	0x2a8	; 0x2a8 <vfprintf>
 296:	ef 81       	ldd	r30, Y+7	; 0x07
 298:	f8 85       	ldd	r31, Y+8	; 0x08
 29a:	e0 0f       	add	r30, r16
 29c:	f1 1f       	adc	r31, r17
 29e:	10 82       	st	Z, r1
 2a0:	2e 96       	adiw	r28, 0x0e	; 14
 2a2:	e4 e0       	ldi	r30, 0x04	; 4
 2a4:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <__epilogue_restores__+0x1c>

000002a8 <vfprintf>:
 2a8:	ac e0       	ldi	r26, 0x0C	; 12
 2aa:	b0 e0       	ldi	r27, 0x00	; 0
 2ac:	ea e5       	ldi	r30, 0x5A	; 90
 2ae:	f1 e0       	ldi	r31, 0x01	; 1
 2b0:	0c 94 cc 03 	jmp	0x798	; 0x798 <__prologue_saves__>
 2b4:	7c 01       	movw	r14, r24
 2b6:	6b 01       	movw	r12, r22
 2b8:	8a 01       	movw	r16, r20
 2ba:	fc 01       	movw	r30, r24
 2bc:	17 82       	std	Z+7, r1	; 0x07
 2be:	16 82       	std	Z+6, r1	; 0x06
 2c0:	83 81       	ldd	r24, Z+3	; 0x03
 2c2:	81 ff       	sbrs	r24, 1
 2c4:	bd c1       	rjmp	.+890    	; 0x640 <__stack+0x1e1>
 2c6:	ce 01       	movw	r24, r28
 2c8:	01 96       	adiw	r24, 0x01	; 1
 2ca:	4c 01       	movw	r8, r24
 2cc:	f7 01       	movw	r30, r14
 2ce:	93 81       	ldd	r25, Z+3	; 0x03
 2d0:	f6 01       	movw	r30, r12
 2d2:	93 fd       	sbrc	r25, 3
 2d4:	85 91       	lpm	r24, Z+
 2d6:	93 ff       	sbrs	r25, 3
 2d8:	81 91       	ld	r24, Z+
 2da:	6f 01       	movw	r12, r30
 2dc:	88 23       	and	r24, r24
 2de:	09 f4       	brne	.+2      	; 0x2e2 <vfprintf+0x3a>
 2e0:	ab c1       	rjmp	.+854    	; 0x638 <__stack+0x1d9>
 2e2:	85 32       	cpi	r24, 0x25	; 37
 2e4:	39 f4       	brne	.+14     	; 0x2f4 <vfprintf+0x4c>
 2e6:	93 fd       	sbrc	r25, 3
 2e8:	85 91       	lpm	r24, Z+
 2ea:	93 ff       	sbrs	r25, 3
 2ec:	81 91       	ld	r24, Z+
 2ee:	6f 01       	movw	r12, r30
 2f0:	85 32       	cpi	r24, 0x25	; 37
 2f2:	29 f4       	brne	.+10     	; 0x2fe <vfprintf+0x56>
 2f4:	b7 01       	movw	r22, r14
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 2fc:	e7 cf       	rjmp	.-50     	; 0x2cc <vfprintf+0x24>
 2fe:	51 2c       	mov	r5, r1
 300:	31 2c       	mov	r3, r1
 302:	20 e0       	ldi	r18, 0x00	; 0
 304:	20 32       	cpi	r18, 0x20	; 32
 306:	a0 f4       	brcc	.+40     	; 0x330 <vfprintf+0x88>
 308:	8b 32       	cpi	r24, 0x2B	; 43
 30a:	69 f0       	breq	.+26     	; 0x326 <vfprintf+0x7e>
 30c:	30 f4       	brcc	.+12     	; 0x31a <vfprintf+0x72>
 30e:	80 32       	cpi	r24, 0x20	; 32
 310:	59 f0       	breq	.+22     	; 0x328 <vfprintf+0x80>
 312:	83 32       	cpi	r24, 0x23	; 35
 314:	69 f4       	brne	.+26     	; 0x330 <vfprintf+0x88>
 316:	20 61       	ori	r18, 0x10	; 16
 318:	2c c0       	rjmp	.+88     	; 0x372 <vfprintf+0xca>
 31a:	8d 32       	cpi	r24, 0x2D	; 45
 31c:	39 f0       	breq	.+14     	; 0x32c <vfprintf+0x84>
 31e:	80 33       	cpi	r24, 0x30	; 48
 320:	39 f4       	brne	.+14     	; 0x330 <vfprintf+0x88>
 322:	21 60       	ori	r18, 0x01	; 1
 324:	26 c0       	rjmp	.+76     	; 0x372 <vfprintf+0xca>
 326:	22 60       	ori	r18, 0x02	; 2
 328:	24 60       	ori	r18, 0x04	; 4
 32a:	23 c0       	rjmp	.+70     	; 0x372 <vfprintf+0xca>
 32c:	28 60       	ori	r18, 0x08	; 8
 32e:	21 c0       	rjmp	.+66     	; 0x372 <vfprintf+0xca>
 330:	27 fd       	sbrc	r18, 7
 332:	27 c0       	rjmp	.+78     	; 0x382 <vfprintf+0xda>
 334:	30 ed       	ldi	r19, 0xD0	; 208
 336:	38 0f       	add	r19, r24
 338:	3a 30       	cpi	r19, 0x0A	; 10
 33a:	78 f4       	brcc	.+30     	; 0x35a <vfprintf+0xb2>
 33c:	26 ff       	sbrs	r18, 6
 33e:	06 c0       	rjmp	.+12     	; 0x34c <vfprintf+0xa4>
 340:	fa e0       	ldi	r31, 0x0A	; 10
 342:	5f 9e       	mul	r5, r31
 344:	30 0d       	add	r19, r0
 346:	11 24       	eor	r1, r1
 348:	53 2e       	mov	r5, r19
 34a:	13 c0       	rjmp	.+38     	; 0x372 <vfprintf+0xca>
 34c:	8a e0       	ldi	r24, 0x0A	; 10
 34e:	38 9e       	mul	r3, r24
 350:	30 0d       	add	r19, r0
 352:	11 24       	eor	r1, r1
 354:	33 2e       	mov	r3, r19
 356:	20 62       	ori	r18, 0x20	; 32
 358:	0c c0       	rjmp	.+24     	; 0x372 <vfprintf+0xca>
 35a:	8e 32       	cpi	r24, 0x2E	; 46
 35c:	21 f4       	brne	.+8      	; 0x366 <vfprintf+0xbe>
 35e:	26 fd       	sbrc	r18, 6
 360:	6b c1       	rjmp	.+726    	; 0x638 <__stack+0x1d9>
 362:	20 64       	ori	r18, 0x40	; 64
 364:	06 c0       	rjmp	.+12     	; 0x372 <vfprintf+0xca>
 366:	8c 36       	cpi	r24, 0x6C	; 108
 368:	11 f4       	brne	.+4      	; 0x36e <vfprintf+0xc6>
 36a:	20 68       	ori	r18, 0x80	; 128
 36c:	02 c0       	rjmp	.+4      	; 0x372 <vfprintf+0xca>
 36e:	88 36       	cpi	r24, 0x68	; 104
 370:	41 f4       	brne	.+16     	; 0x382 <vfprintf+0xda>
 372:	f6 01       	movw	r30, r12
 374:	93 fd       	sbrc	r25, 3
 376:	85 91       	lpm	r24, Z+
 378:	93 ff       	sbrs	r25, 3
 37a:	81 91       	ld	r24, Z+
 37c:	6f 01       	movw	r12, r30
 37e:	81 11       	cpse	r24, r1
 380:	c1 cf       	rjmp	.-126    	; 0x304 <vfprintf+0x5c>
 382:	98 2f       	mov	r25, r24
 384:	9f 7d       	andi	r25, 0xDF	; 223
 386:	95 54       	subi	r25, 0x45	; 69
 388:	93 30       	cpi	r25, 0x03	; 3
 38a:	28 f4       	brcc	.+10     	; 0x396 <vfprintf+0xee>
 38c:	0c 5f       	subi	r16, 0xFC	; 252
 38e:	1f 4f       	sbci	r17, 0xFF	; 255
 390:	ff e3       	ldi	r31, 0x3F	; 63
 392:	f9 83       	std	Y+1, r31	; 0x01
 394:	0d c0       	rjmp	.+26     	; 0x3b0 <vfprintf+0x108>
 396:	83 36       	cpi	r24, 0x63	; 99
 398:	31 f0       	breq	.+12     	; 0x3a6 <vfprintf+0xfe>
 39a:	83 37       	cpi	r24, 0x73	; 115
 39c:	71 f0       	breq	.+28     	; 0x3ba <vfprintf+0x112>
 39e:	83 35       	cpi	r24, 0x53	; 83
 3a0:	09 f0       	breq	.+2      	; 0x3a4 <vfprintf+0xfc>
 3a2:	5b c0       	rjmp	.+182    	; 0x45a <vfprintf+0x1b2>
 3a4:	22 c0       	rjmp	.+68     	; 0x3ea <vfprintf+0x142>
 3a6:	f8 01       	movw	r30, r16
 3a8:	80 81       	ld	r24, Z
 3aa:	89 83       	std	Y+1, r24	; 0x01
 3ac:	0e 5f       	subi	r16, 0xFE	; 254
 3ae:	1f 4f       	sbci	r17, 0xFF	; 255
 3b0:	44 24       	eor	r4, r4
 3b2:	43 94       	inc	r4
 3b4:	51 2c       	mov	r5, r1
 3b6:	54 01       	movw	r10, r8
 3b8:	15 c0       	rjmp	.+42     	; 0x3e4 <vfprintf+0x13c>
 3ba:	38 01       	movw	r6, r16
 3bc:	f2 e0       	ldi	r31, 0x02	; 2
 3be:	6f 0e       	add	r6, r31
 3c0:	71 1c       	adc	r7, r1
 3c2:	f8 01       	movw	r30, r16
 3c4:	a0 80       	ld	r10, Z
 3c6:	b1 80       	ldd	r11, Z+1	; 0x01
 3c8:	26 ff       	sbrs	r18, 6
 3ca:	03 c0       	rjmp	.+6      	; 0x3d2 <vfprintf+0x12a>
 3cc:	65 2d       	mov	r22, r5
 3ce:	70 e0       	ldi	r23, 0x00	; 0
 3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <vfprintf+0x12e>
 3d2:	6f ef       	ldi	r22, 0xFF	; 255
 3d4:	7f ef       	ldi	r23, 0xFF	; 255
 3d6:	c5 01       	movw	r24, r10
 3d8:	2c 87       	std	Y+12, r18	; 0x0c
 3da:	0e 94 31 03 	call	0x662	; 0x662 <strnlen>
 3de:	2c 01       	movw	r4, r24
 3e0:	83 01       	movw	r16, r6
 3e2:	2c 85       	ldd	r18, Y+12	; 0x0c
 3e4:	2f 77       	andi	r18, 0x7F	; 127
 3e6:	22 2e       	mov	r2, r18
 3e8:	17 c0       	rjmp	.+46     	; 0x418 <vfprintf+0x170>
 3ea:	38 01       	movw	r6, r16
 3ec:	f2 e0       	ldi	r31, 0x02	; 2
 3ee:	6f 0e       	add	r6, r31
 3f0:	71 1c       	adc	r7, r1
 3f2:	f8 01       	movw	r30, r16
 3f4:	a0 80       	ld	r10, Z
 3f6:	b1 80       	ldd	r11, Z+1	; 0x01
 3f8:	26 ff       	sbrs	r18, 6
 3fa:	03 c0       	rjmp	.+6      	; 0x402 <vfprintf+0x15a>
 3fc:	65 2d       	mov	r22, r5
 3fe:	70 e0       	ldi	r23, 0x00	; 0
 400:	02 c0       	rjmp	.+4      	; 0x406 <vfprintf+0x15e>
 402:	6f ef       	ldi	r22, 0xFF	; 255
 404:	7f ef       	ldi	r23, 0xFF	; 255
 406:	c5 01       	movw	r24, r10
 408:	2c 87       	std	Y+12, r18	; 0x0c
 40a:	0e 94 26 03 	call	0x64c	; 0x64c <strnlen_P>
 40e:	2c 01       	movw	r4, r24
 410:	2c 85       	ldd	r18, Y+12	; 0x0c
 412:	20 68       	ori	r18, 0x80	; 128
 414:	22 2e       	mov	r2, r18
 416:	83 01       	movw	r16, r6
 418:	23 fc       	sbrc	r2, 3
 41a:	1b c0       	rjmp	.+54     	; 0x452 <vfprintf+0x1aa>
 41c:	83 2d       	mov	r24, r3
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	48 16       	cp	r4, r24
 422:	59 06       	cpc	r5, r25
 424:	b0 f4       	brcc	.+44     	; 0x452 <vfprintf+0x1aa>
 426:	b7 01       	movw	r22, r14
 428:	80 e2       	ldi	r24, 0x20	; 32
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 430:	3a 94       	dec	r3
 432:	f4 cf       	rjmp	.-24     	; 0x41c <vfprintf+0x174>
 434:	f5 01       	movw	r30, r10
 436:	27 fc       	sbrc	r2, 7
 438:	85 91       	lpm	r24, Z+
 43a:	27 fe       	sbrs	r2, 7
 43c:	81 91       	ld	r24, Z+
 43e:	5f 01       	movw	r10, r30
 440:	b7 01       	movw	r22, r14
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 448:	31 10       	cpse	r3, r1
 44a:	3a 94       	dec	r3
 44c:	f1 e0       	ldi	r31, 0x01	; 1
 44e:	4f 1a       	sub	r4, r31
 450:	51 08       	sbc	r5, r1
 452:	41 14       	cp	r4, r1
 454:	51 04       	cpc	r5, r1
 456:	71 f7       	brne	.-36     	; 0x434 <vfprintf+0x18c>
 458:	e5 c0       	rjmp	.+458    	; 0x624 <__stack+0x1c5>
 45a:	84 36       	cpi	r24, 0x64	; 100
 45c:	11 f0       	breq	.+4      	; 0x462 <__stack+0x3>
 45e:	89 36       	cpi	r24, 0x69	; 105
 460:	39 f5       	brne	.+78     	; 0x4b0 <__stack+0x51>
 462:	f8 01       	movw	r30, r16
 464:	27 ff       	sbrs	r18, 7
 466:	07 c0       	rjmp	.+14     	; 0x476 <__stack+0x17>
 468:	60 81       	ld	r22, Z
 46a:	71 81       	ldd	r23, Z+1	; 0x01
 46c:	82 81       	ldd	r24, Z+2	; 0x02
 46e:	93 81       	ldd	r25, Z+3	; 0x03
 470:	0c 5f       	subi	r16, 0xFC	; 252
 472:	1f 4f       	sbci	r17, 0xFF	; 255
 474:	08 c0       	rjmp	.+16     	; 0x486 <__stack+0x27>
 476:	60 81       	ld	r22, Z
 478:	71 81       	ldd	r23, Z+1	; 0x01
 47a:	88 27       	eor	r24, r24
 47c:	77 fd       	sbrc	r23, 7
 47e:	80 95       	com	r24
 480:	98 2f       	mov	r25, r24
 482:	0e 5f       	subi	r16, 0xFE	; 254
 484:	1f 4f       	sbci	r17, 0xFF	; 255
 486:	2f 76       	andi	r18, 0x6F	; 111
 488:	b2 2e       	mov	r11, r18
 48a:	97 ff       	sbrs	r25, 7
 48c:	09 c0       	rjmp	.+18     	; 0x4a0 <__stack+0x41>
 48e:	90 95       	com	r25
 490:	80 95       	com	r24
 492:	70 95       	com	r23
 494:	61 95       	neg	r22
 496:	7f 4f       	sbci	r23, 0xFF	; 255
 498:	8f 4f       	sbci	r24, 0xFF	; 255
 49a:	9f 4f       	sbci	r25, 0xFF	; 255
 49c:	20 68       	ori	r18, 0x80	; 128
 49e:	b2 2e       	mov	r11, r18
 4a0:	2a e0       	ldi	r18, 0x0A	; 10
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	a4 01       	movw	r20, r8
 4a6:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__ultoa_invert>
 4aa:	a8 2e       	mov	r10, r24
 4ac:	a8 18       	sub	r10, r8
 4ae:	44 c0       	rjmp	.+136    	; 0x538 <__stack+0xd9>
 4b0:	85 37       	cpi	r24, 0x75	; 117
 4b2:	29 f4       	brne	.+10     	; 0x4be <__stack+0x5f>
 4b4:	2f 7e       	andi	r18, 0xEF	; 239
 4b6:	b2 2e       	mov	r11, r18
 4b8:	2a e0       	ldi	r18, 0x0A	; 10
 4ba:	30 e0       	ldi	r19, 0x00	; 0
 4bc:	25 c0       	rjmp	.+74     	; 0x508 <__stack+0xa9>
 4be:	f2 2f       	mov	r31, r18
 4c0:	f9 7f       	andi	r31, 0xF9	; 249
 4c2:	bf 2e       	mov	r11, r31
 4c4:	8f 36       	cpi	r24, 0x6F	; 111
 4c6:	c1 f0       	breq	.+48     	; 0x4f8 <__stack+0x99>
 4c8:	18 f4       	brcc	.+6      	; 0x4d0 <__stack+0x71>
 4ca:	88 35       	cpi	r24, 0x58	; 88
 4cc:	79 f0       	breq	.+30     	; 0x4ec <__stack+0x8d>
 4ce:	b4 c0       	rjmp	.+360    	; 0x638 <__stack+0x1d9>
 4d0:	80 37       	cpi	r24, 0x70	; 112
 4d2:	19 f0       	breq	.+6      	; 0x4da <__stack+0x7b>
 4d4:	88 37       	cpi	r24, 0x78	; 120
 4d6:	21 f0       	breq	.+8      	; 0x4e0 <__stack+0x81>
 4d8:	af c0       	rjmp	.+350    	; 0x638 <__stack+0x1d9>
 4da:	2f 2f       	mov	r18, r31
 4dc:	20 61       	ori	r18, 0x10	; 16
 4de:	b2 2e       	mov	r11, r18
 4e0:	b4 fe       	sbrs	r11, 4
 4e2:	0d c0       	rjmp	.+26     	; 0x4fe <__stack+0x9f>
 4e4:	8b 2d       	mov	r24, r11
 4e6:	84 60       	ori	r24, 0x04	; 4
 4e8:	b8 2e       	mov	r11, r24
 4ea:	09 c0       	rjmp	.+18     	; 0x4fe <__stack+0x9f>
 4ec:	24 ff       	sbrs	r18, 4
 4ee:	0a c0       	rjmp	.+20     	; 0x504 <__stack+0xa5>
 4f0:	9f 2f       	mov	r25, r31
 4f2:	96 60       	ori	r25, 0x06	; 6
 4f4:	b9 2e       	mov	r11, r25
 4f6:	06 c0       	rjmp	.+12     	; 0x504 <__stack+0xa5>
 4f8:	28 e0       	ldi	r18, 0x08	; 8
 4fa:	30 e0       	ldi	r19, 0x00	; 0
 4fc:	05 c0       	rjmp	.+10     	; 0x508 <__stack+0xa9>
 4fe:	20 e1       	ldi	r18, 0x10	; 16
 500:	30 e0       	ldi	r19, 0x00	; 0
 502:	02 c0       	rjmp	.+4      	; 0x508 <__stack+0xa9>
 504:	20 e1       	ldi	r18, 0x10	; 16
 506:	32 e0       	ldi	r19, 0x02	; 2
 508:	f8 01       	movw	r30, r16
 50a:	b7 fe       	sbrs	r11, 7
 50c:	07 c0       	rjmp	.+14     	; 0x51c <__stack+0xbd>
 50e:	60 81       	ld	r22, Z
 510:	71 81       	ldd	r23, Z+1	; 0x01
 512:	82 81       	ldd	r24, Z+2	; 0x02
 514:	93 81       	ldd	r25, Z+3	; 0x03
 516:	0c 5f       	subi	r16, 0xFC	; 252
 518:	1f 4f       	sbci	r17, 0xFF	; 255
 51a:	06 c0       	rjmp	.+12     	; 0x528 <__stack+0xc9>
 51c:	60 81       	ld	r22, Z
 51e:	71 81       	ldd	r23, Z+1	; 0x01
 520:	80 e0       	ldi	r24, 0x00	; 0
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	0e 5f       	subi	r16, 0xFE	; 254
 526:	1f 4f       	sbci	r17, 0xFF	; 255
 528:	a4 01       	movw	r20, r8
 52a:	0e 94 6e 03 	call	0x6dc	; 0x6dc <__ultoa_invert>
 52e:	a8 2e       	mov	r10, r24
 530:	a8 18       	sub	r10, r8
 532:	fb 2d       	mov	r31, r11
 534:	ff 77       	andi	r31, 0x7F	; 127
 536:	bf 2e       	mov	r11, r31
 538:	b6 fe       	sbrs	r11, 6
 53a:	0b c0       	rjmp	.+22     	; 0x552 <__stack+0xf3>
 53c:	2b 2d       	mov	r18, r11
 53e:	2e 7f       	andi	r18, 0xFE	; 254
 540:	a5 14       	cp	r10, r5
 542:	50 f4       	brcc	.+20     	; 0x558 <__stack+0xf9>
 544:	b4 fe       	sbrs	r11, 4
 546:	0a c0       	rjmp	.+20     	; 0x55c <__stack+0xfd>
 548:	b2 fc       	sbrc	r11, 2
 54a:	08 c0       	rjmp	.+16     	; 0x55c <__stack+0xfd>
 54c:	2b 2d       	mov	r18, r11
 54e:	2e 7e       	andi	r18, 0xEE	; 238
 550:	05 c0       	rjmp	.+10     	; 0x55c <__stack+0xfd>
 552:	7a 2c       	mov	r7, r10
 554:	2b 2d       	mov	r18, r11
 556:	03 c0       	rjmp	.+6      	; 0x55e <__stack+0xff>
 558:	7a 2c       	mov	r7, r10
 55a:	01 c0       	rjmp	.+2      	; 0x55e <__stack+0xff>
 55c:	75 2c       	mov	r7, r5
 55e:	24 ff       	sbrs	r18, 4
 560:	0d c0       	rjmp	.+26     	; 0x57c <__stack+0x11d>
 562:	fe 01       	movw	r30, r28
 564:	ea 0d       	add	r30, r10
 566:	f1 1d       	adc	r31, r1
 568:	80 81       	ld	r24, Z
 56a:	80 33       	cpi	r24, 0x30	; 48
 56c:	11 f4       	brne	.+4      	; 0x572 <__stack+0x113>
 56e:	29 7e       	andi	r18, 0xE9	; 233
 570:	09 c0       	rjmp	.+18     	; 0x584 <__stack+0x125>
 572:	22 ff       	sbrs	r18, 2
 574:	06 c0       	rjmp	.+12     	; 0x582 <__stack+0x123>
 576:	73 94       	inc	r7
 578:	73 94       	inc	r7
 57a:	04 c0       	rjmp	.+8      	; 0x584 <__stack+0x125>
 57c:	82 2f       	mov	r24, r18
 57e:	86 78       	andi	r24, 0x86	; 134
 580:	09 f0       	breq	.+2      	; 0x584 <__stack+0x125>
 582:	73 94       	inc	r7
 584:	23 fd       	sbrc	r18, 3
 586:	13 c0       	rjmp	.+38     	; 0x5ae <__stack+0x14f>
 588:	20 ff       	sbrs	r18, 0
 58a:	06 c0       	rjmp	.+12     	; 0x598 <__stack+0x139>
 58c:	5a 2c       	mov	r5, r10
 58e:	73 14       	cp	r7, r3
 590:	18 f4       	brcc	.+6      	; 0x598 <__stack+0x139>
 592:	53 0c       	add	r5, r3
 594:	57 18       	sub	r5, r7
 596:	73 2c       	mov	r7, r3
 598:	73 14       	cp	r7, r3
 59a:	68 f4       	brcc	.+26     	; 0x5b6 <__stack+0x157>
 59c:	b7 01       	movw	r22, r14
 59e:	80 e2       	ldi	r24, 0x20	; 32
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	2c 87       	std	Y+12, r18	; 0x0c
 5a4:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 5a8:	73 94       	inc	r7
 5aa:	2c 85       	ldd	r18, Y+12	; 0x0c
 5ac:	f5 cf       	rjmp	.-22     	; 0x598 <__stack+0x139>
 5ae:	73 14       	cp	r7, r3
 5b0:	10 f4       	brcc	.+4      	; 0x5b6 <__stack+0x157>
 5b2:	37 18       	sub	r3, r7
 5b4:	01 c0       	rjmp	.+2      	; 0x5b8 <__stack+0x159>
 5b6:	31 2c       	mov	r3, r1
 5b8:	24 ff       	sbrs	r18, 4
 5ba:	12 c0       	rjmp	.+36     	; 0x5e0 <__stack+0x181>
 5bc:	b7 01       	movw	r22, r14
 5be:	80 e3       	ldi	r24, 0x30	; 48
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	2c 87       	std	Y+12, r18	; 0x0c
 5c4:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 5c8:	2c 85       	ldd	r18, Y+12	; 0x0c
 5ca:	22 ff       	sbrs	r18, 2
 5cc:	17 c0       	rjmp	.+46     	; 0x5fc <__stack+0x19d>
 5ce:	21 ff       	sbrs	r18, 1
 5d0:	03 c0       	rjmp	.+6      	; 0x5d8 <__stack+0x179>
 5d2:	88 e5       	ldi	r24, 0x58	; 88
 5d4:	90 e0       	ldi	r25, 0x00	; 0
 5d6:	02 c0       	rjmp	.+4      	; 0x5dc <__stack+0x17d>
 5d8:	88 e7       	ldi	r24, 0x78	; 120
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	b7 01       	movw	r22, r14
 5de:	0c c0       	rjmp	.+24     	; 0x5f8 <__stack+0x199>
 5e0:	82 2f       	mov	r24, r18
 5e2:	86 78       	andi	r24, 0x86	; 134
 5e4:	59 f0       	breq	.+22     	; 0x5fc <__stack+0x19d>
 5e6:	21 fd       	sbrc	r18, 1
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <__stack+0x18f>
 5ea:	80 e2       	ldi	r24, 0x20	; 32
 5ec:	01 c0       	rjmp	.+2      	; 0x5f0 <__stack+0x191>
 5ee:	8b e2       	ldi	r24, 0x2B	; 43
 5f0:	27 fd       	sbrc	r18, 7
 5f2:	8d e2       	ldi	r24, 0x2D	; 45
 5f4:	b7 01       	movw	r22, r14
 5f6:	90 e0       	ldi	r25, 0x00	; 0
 5f8:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 5fc:	a5 14       	cp	r10, r5
 5fe:	38 f4       	brcc	.+14     	; 0x60e <__stack+0x1af>
 600:	b7 01       	movw	r22, r14
 602:	80 e3       	ldi	r24, 0x30	; 48
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 60a:	5a 94       	dec	r5
 60c:	f7 cf       	rjmp	.-18     	; 0x5fc <__stack+0x19d>
 60e:	aa 94       	dec	r10
 610:	f4 01       	movw	r30, r8
 612:	ea 0d       	add	r30, r10
 614:	f1 1d       	adc	r31, r1
 616:	80 81       	ld	r24, Z
 618:	b7 01       	movw	r22, r14
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 620:	a1 10       	cpse	r10, r1
 622:	f5 cf       	rjmp	.-22     	; 0x60e <__stack+0x1af>
 624:	33 20       	and	r3, r3
 626:	09 f4       	brne	.+2      	; 0x62a <__stack+0x1cb>
 628:	51 ce       	rjmp	.-862    	; 0x2cc <vfprintf+0x24>
 62a:	b7 01       	movw	r22, r14
 62c:	80 e2       	ldi	r24, 0x20	; 32
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	0e 94 3c 03 	call	0x678	; 0x678 <fputc>
 634:	3a 94       	dec	r3
 636:	f6 cf       	rjmp	.-20     	; 0x624 <__stack+0x1c5>
 638:	f7 01       	movw	r30, r14
 63a:	86 81       	ldd	r24, Z+6	; 0x06
 63c:	97 81       	ldd	r25, Z+7	; 0x07
 63e:	02 c0       	rjmp	.+4      	; 0x644 <__stack+0x1e5>
 640:	8f ef       	ldi	r24, 0xFF	; 255
 642:	9f ef       	ldi	r25, 0xFF	; 255
 644:	2c 96       	adiw	r28, 0x0c	; 12
 646:	e2 e1       	ldi	r30, 0x12	; 18
 648:	0c 94 e8 03 	jmp	0x7d0	; 0x7d0 <__epilogue_restores__>

0000064c <strnlen_P>:
 64c:	fc 01       	movw	r30, r24
 64e:	05 90       	lpm	r0, Z+
 650:	61 50       	subi	r22, 0x01	; 1
 652:	70 40       	sbci	r23, 0x00	; 0
 654:	01 10       	cpse	r0, r1
 656:	d8 f7       	brcc	.-10     	; 0x64e <strnlen_P+0x2>
 658:	80 95       	com	r24
 65a:	90 95       	com	r25
 65c:	8e 0f       	add	r24, r30
 65e:	9f 1f       	adc	r25, r31
 660:	08 95       	ret

00000662 <strnlen>:
 662:	fc 01       	movw	r30, r24
 664:	61 50       	subi	r22, 0x01	; 1
 666:	70 40       	sbci	r23, 0x00	; 0
 668:	01 90       	ld	r0, Z+
 66a:	01 10       	cpse	r0, r1
 66c:	d8 f7       	brcc	.-10     	; 0x664 <strnlen+0x2>
 66e:	80 95       	com	r24
 670:	90 95       	com	r25
 672:	8e 0f       	add	r24, r30
 674:	9f 1f       	adc	r25, r31
 676:	08 95       	ret

00000678 <fputc>:
 678:	0f 93       	push	r16
 67a:	1f 93       	push	r17
 67c:	cf 93       	push	r28
 67e:	df 93       	push	r29
 680:	18 2f       	mov	r17, r24
 682:	09 2f       	mov	r16, r25
 684:	eb 01       	movw	r28, r22
 686:	8b 81       	ldd	r24, Y+3	; 0x03
 688:	81 fd       	sbrc	r24, 1
 68a:	03 c0       	rjmp	.+6      	; 0x692 <fputc+0x1a>
 68c:	8f ef       	ldi	r24, 0xFF	; 255
 68e:	9f ef       	ldi	r25, 0xFF	; 255
 690:	20 c0       	rjmp	.+64     	; 0x6d2 <fputc+0x5a>
 692:	82 ff       	sbrs	r24, 2
 694:	10 c0       	rjmp	.+32     	; 0x6b6 <fputc+0x3e>
 696:	4e 81       	ldd	r20, Y+6	; 0x06
 698:	5f 81       	ldd	r21, Y+7	; 0x07
 69a:	2c 81       	ldd	r18, Y+4	; 0x04
 69c:	3d 81       	ldd	r19, Y+5	; 0x05
 69e:	42 17       	cp	r20, r18
 6a0:	53 07       	cpc	r21, r19
 6a2:	7c f4       	brge	.+30     	; 0x6c2 <fputc+0x4a>
 6a4:	e8 81       	ld	r30, Y
 6a6:	f9 81       	ldd	r31, Y+1	; 0x01
 6a8:	9f 01       	movw	r18, r30
 6aa:	2f 5f       	subi	r18, 0xFF	; 255
 6ac:	3f 4f       	sbci	r19, 0xFF	; 255
 6ae:	39 83       	std	Y+1, r19	; 0x01
 6b0:	28 83       	st	Y, r18
 6b2:	10 83       	st	Z, r17
 6b4:	06 c0       	rjmp	.+12     	; 0x6c2 <fputc+0x4a>
 6b6:	e8 85       	ldd	r30, Y+8	; 0x08
 6b8:	f9 85       	ldd	r31, Y+9	; 0x09
 6ba:	81 2f       	mov	r24, r17
 6bc:	09 95       	icall
 6be:	89 2b       	or	r24, r25
 6c0:	29 f7       	brne	.-54     	; 0x68c <fputc+0x14>
 6c2:	2e 81       	ldd	r18, Y+6	; 0x06
 6c4:	3f 81       	ldd	r19, Y+7	; 0x07
 6c6:	2f 5f       	subi	r18, 0xFF	; 255
 6c8:	3f 4f       	sbci	r19, 0xFF	; 255
 6ca:	3f 83       	std	Y+7, r19	; 0x07
 6cc:	2e 83       	std	Y+6, r18	; 0x06
 6ce:	81 2f       	mov	r24, r17
 6d0:	90 2f       	mov	r25, r16
 6d2:	df 91       	pop	r29
 6d4:	cf 91       	pop	r28
 6d6:	1f 91       	pop	r17
 6d8:	0f 91       	pop	r16
 6da:	08 95       	ret

000006dc <__ultoa_invert>:
 6dc:	fa 01       	movw	r30, r20
 6de:	aa 27       	eor	r26, r26
 6e0:	28 30       	cpi	r18, 0x08	; 8
 6e2:	51 f1       	breq	.+84     	; 0x738 <__ultoa_invert+0x5c>
 6e4:	20 31       	cpi	r18, 0x10	; 16
 6e6:	81 f1       	breq	.+96     	; 0x748 <__ultoa_invert+0x6c>
 6e8:	e8 94       	clt
 6ea:	6f 93       	push	r22
 6ec:	6e 7f       	andi	r22, 0xFE	; 254
 6ee:	6e 5f       	subi	r22, 0xFE	; 254
 6f0:	7f 4f       	sbci	r23, 0xFF	; 255
 6f2:	8f 4f       	sbci	r24, 0xFF	; 255
 6f4:	9f 4f       	sbci	r25, 0xFF	; 255
 6f6:	af 4f       	sbci	r26, 0xFF	; 255
 6f8:	b1 e0       	ldi	r27, 0x01	; 1
 6fa:	3e d0       	rcall	.+124    	; 0x778 <__ultoa_invert+0x9c>
 6fc:	b4 e0       	ldi	r27, 0x04	; 4
 6fe:	3c d0       	rcall	.+120    	; 0x778 <__ultoa_invert+0x9c>
 700:	67 0f       	add	r22, r23
 702:	78 1f       	adc	r23, r24
 704:	89 1f       	adc	r24, r25
 706:	9a 1f       	adc	r25, r26
 708:	a1 1d       	adc	r26, r1
 70a:	68 0f       	add	r22, r24
 70c:	79 1f       	adc	r23, r25
 70e:	8a 1f       	adc	r24, r26
 710:	91 1d       	adc	r25, r1
 712:	a1 1d       	adc	r26, r1
 714:	6a 0f       	add	r22, r26
 716:	71 1d       	adc	r23, r1
 718:	81 1d       	adc	r24, r1
 71a:	91 1d       	adc	r25, r1
 71c:	a1 1d       	adc	r26, r1
 71e:	20 d0       	rcall	.+64     	; 0x760 <__ultoa_invert+0x84>
 720:	09 f4       	brne	.+2      	; 0x724 <__ultoa_invert+0x48>
 722:	68 94       	set
 724:	3f 91       	pop	r19
 726:	2a e0       	ldi	r18, 0x0A	; 10
 728:	26 9f       	mul	r18, r22
 72a:	11 24       	eor	r1, r1
 72c:	30 19       	sub	r19, r0
 72e:	30 5d       	subi	r19, 0xD0	; 208
 730:	31 93       	st	Z+, r19
 732:	de f6       	brtc	.-74     	; 0x6ea <__ultoa_invert+0xe>
 734:	cf 01       	movw	r24, r30
 736:	08 95       	ret
 738:	46 2f       	mov	r20, r22
 73a:	47 70       	andi	r20, 0x07	; 7
 73c:	40 5d       	subi	r20, 0xD0	; 208
 73e:	41 93       	st	Z+, r20
 740:	b3 e0       	ldi	r27, 0x03	; 3
 742:	0f d0       	rcall	.+30     	; 0x762 <__ultoa_invert+0x86>
 744:	c9 f7       	brne	.-14     	; 0x738 <__ultoa_invert+0x5c>
 746:	f6 cf       	rjmp	.-20     	; 0x734 <__ultoa_invert+0x58>
 748:	46 2f       	mov	r20, r22
 74a:	4f 70       	andi	r20, 0x0F	; 15
 74c:	40 5d       	subi	r20, 0xD0	; 208
 74e:	4a 33       	cpi	r20, 0x3A	; 58
 750:	18 f0       	brcs	.+6      	; 0x758 <__ultoa_invert+0x7c>
 752:	49 5d       	subi	r20, 0xD9	; 217
 754:	31 fd       	sbrc	r19, 1
 756:	40 52       	subi	r20, 0x20	; 32
 758:	41 93       	st	Z+, r20
 75a:	02 d0       	rcall	.+4      	; 0x760 <__ultoa_invert+0x84>
 75c:	a9 f7       	brne	.-22     	; 0x748 <__ultoa_invert+0x6c>
 75e:	ea cf       	rjmp	.-44     	; 0x734 <__ultoa_invert+0x58>
 760:	b4 e0       	ldi	r27, 0x04	; 4
 762:	a6 95       	lsr	r26
 764:	97 95       	ror	r25
 766:	87 95       	ror	r24
 768:	77 95       	ror	r23
 76a:	67 95       	ror	r22
 76c:	ba 95       	dec	r27
 76e:	c9 f7       	brne	.-14     	; 0x762 <__ultoa_invert+0x86>
 770:	00 97       	sbiw	r24, 0x00	; 0
 772:	61 05       	cpc	r22, r1
 774:	71 05       	cpc	r23, r1
 776:	08 95       	ret
 778:	9b 01       	movw	r18, r22
 77a:	ac 01       	movw	r20, r24
 77c:	0a 2e       	mov	r0, r26
 77e:	06 94       	lsr	r0
 780:	57 95       	ror	r21
 782:	47 95       	ror	r20
 784:	37 95       	ror	r19
 786:	27 95       	ror	r18
 788:	ba 95       	dec	r27
 78a:	c9 f7       	brne	.-14     	; 0x77e <__ultoa_invert+0xa2>
 78c:	62 0f       	add	r22, r18
 78e:	73 1f       	adc	r23, r19
 790:	84 1f       	adc	r24, r20
 792:	95 1f       	adc	r25, r21
 794:	a0 1d       	adc	r26, r0
 796:	08 95       	ret

00000798 <__prologue_saves__>:
 798:	2f 92       	push	r2
 79a:	3f 92       	push	r3
 79c:	4f 92       	push	r4
 79e:	5f 92       	push	r5
 7a0:	6f 92       	push	r6
 7a2:	7f 92       	push	r7
 7a4:	8f 92       	push	r8
 7a6:	9f 92       	push	r9
 7a8:	af 92       	push	r10
 7aa:	bf 92       	push	r11
 7ac:	cf 92       	push	r12
 7ae:	df 92       	push	r13
 7b0:	ef 92       	push	r14
 7b2:	ff 92       	push	r15
 7b4:	0f 93       	push	r16
 7b6:	1f 93       	push	r17
 7b8:	cf 93       	push	r28
 7ba:	df 93       	push	r29
 7bc:	cd b7       	in	r28, 0x3d	; 61
 7be:	de b7       	in	r29, 0x3e	; 62
 7c0:	ca 1b       	sub	r28, r26
 7c2:	db 0b       	sbc	r29, r27
 7c4:	0f b6       	in	r0, 0x3f	; 63
 7c6:	f8 94       	cli
 7c8:	de bf       	out	0x3e, r29	; 62
 7ca:	0f be       	out	0x3f, r0	; 63
 7cc:	cd bf       	out	0x3d, r28	; 61
 7ce:	09 94       	ijmp

000007d0 <__epilogue_restores__>:
 7d0:	2a 88       	ldd	r2, Y+18	; 0x12
 7d2:	39 88       	ldd	r3, Y+17	; 0x11
 7d4:	48 88       	ldd	r4, Y+16	; 0x10
 7d6:	5f 84       	ldd	r5, Y+15	; 0x0f
 7d8:	6e 84       	ldd	r6, Y+14	; 0x0e
 7da:	7d 84       	ldd	r7, Y+13	; 0x0d
 7dc:	8c 84       	ldd	r8, Y+12	; 0x0c
 7de:	9b 84       	ldd	r9, Y+11	; 0x0b
 7e0:	aa 84       	ldd	r10, Y+10	; 0x0a
 7e2:	b9 84       	ldd	r11, Y+9	; 0x09
 7e4:	c8 84       	ldd	r12, Y+8	; 0x08
 7e6:	df 80       	ldd	r13, Y+7	; 0x07
 7e8:	ee 80       	ldd	r14, Y+6	; 0x06
 7ea:	fd 80       	ldd	r15, Y+5	; 0x05
 7ec:	0c 81       	ldd	r16, Y+4	; 0x04
 7ee:	1b 81       	ldd	r17, Y+3	; 0x03
 7f0:	aa 81       	ldd	r26, Y+2	; 0x02
 7f2:	b9 81       	ldd	r27, Y+1	; 0x01
 7f4:	ce 0f       	add	r28, r30
 7f6:	d1 1d       	adc	r29, r1
 7f8:	0f b6       	in	r0, 0x3f	; 63
 7fa:	f8 94       	cli
 7fc:	de bf       	out	0x3e, r29	; 62
 7fe:	0f be       	out	0x3f, r0	; 63
 800:	cd bf       	out	0x3d, r28	; 61
 802:	ed 01       	movw	r28, r26
 804:	08 95       	ret

00000806 <_exit>:
 806:	f8 94       	cli

00000808 <__stop_program>:
 808:	ff cf       	rjmp	.-2      	; 0x808 <__stop_program>
