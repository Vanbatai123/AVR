
BIENTAN.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a1e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000002aa  00800060  00000a1e  00000ab2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  0080030a  0080030a  00000d5c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d5c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000070  00000000  00000000  00000db8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007a8  00000000  00000000  00000e28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000235  00000000  00000000  000015d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000028f  00000000  00000000  00001805  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000015c  00000000  00000000  00001a94  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001e9  00000000  00000000  00001bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000535  00000000  00000000  00001dd9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  0000230e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 fa 01 	jmp	0x3f4	; 0x3f4 <__vector_2>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	13 e0       	ldi	r17, 0x03	; 3
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e1       	ldi	r30, 0x1E	; 30
  68:	fa e0       	ldi	r31, 0x0A	; 10
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 30       	cpi	r26, 0x0A	; 10
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	23 e0       	ldi	r18, 0x03	; 3
  78:	aa e0       	ldi	r26, 0x0A	; 10
  7a:	b3 e0       	ldi	r27, 0x03	; 3
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 30       	cpi	r26, 0x0E	; 14
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 47 01 	call	0x28e	; 0x28e <main>
  8a:	0c 94 0d 05 	jmp	0xa1a	; 0xa1a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <lcd_write>:
	,{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 249, 240, 245, 255, 248, 250, 248, 248, 249, 254, 224, 199, 205, 204, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 204, 205, 198, 240, 254, 249, 249, 248, 249, 252, 255, 244, 240, 249, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255}
	,{}							
*/};
void lcd_write(int cd, char byte)//SPI 4Line
{
	clrb(LCD_PORT,CS);
  92:	dc 98       	cbi	0x1b, 4	; 27
	if(cd)
  94:	89 2b       	or	r24, r25
  96:	11 f0       	breq	.+4      	; 0x9c <lcd_write+0xa>
	setb(LCD_PORT,AO);
  98:	de 9a       	sbi	0x1b, 6	; 27
  9a:	13 c0       	rjmp	.+38     	; 0xc2 <lcd_write+0x30>
	else
	clrb(LCD_PORT,AO);
  9c:	de 98       	cbi	0x1b, 6	; 27
  9e:	11 c0       	rjmp	.+34     	; 0xc2 <lcd_write+0x30>
	for(int h=0;h<8;h++)
	{
		if(!(byte&0x80))
  a0:	66 23       	and	r22, r22
  a2:	14 f0       	brlt	.+4      	; 0xa8 <lcd_write+0x16>
		clrb(LCD_PORT,SDA);
  a4:	dd 98       	cbi	0x1b, 5	; 27
  a6:	01 c0       	rjmp	.+2      	; 0xaa <lcd_write+0x18>
		else
		setb(LCD_PORT,SDA);
  a8:	dd 9a       	sbi	0x1b, 5	; 27
		clrb(LCD_PORT,SCK);
  aa:	df 98       	cbi	0x1b, 7	; 27
		setb(LCD_PORT,SCK);
  ac:	df 9a       	sbi	0x1b, 7	; 27
		byte<<=1;
  ae:	66 0f       	add	r22, r22
  b0:	01 97       	sbiw	r24, 0x01	; 1
	clrb(LCD_PORT,CS);
	if(cd)
	setb(LCD_PORT,AO);
	else
	clrb(LCD_PORT,AO);
	for(int h=0;h<8;h++)
  b2:	00 97       	sbiw	r24, 0x00	; 0
  b4:	a9 f7       	brne	.-22     	; 0xa0 <lcd_write+0xe>
		setb(LCD_PORT,SDA);
		clrb(LCD_PORT,SCK);
		setb(LCD_PORT,SCK);
		byte<<=1;
	}
	daobit(LCD_PORT,AO);
  b6:	9b b3       	in	r25, 0x1b	; 27
  b8:	80 e4       	ldi	r24, 0x40	; 64
  ba:	89 27       	eor	r24, r25
  bc:	8b bb       	out	0x1b, r24	; 27
	clrb(LCD_PORT,CS);
  be:	dc 98       	cbi	0x1b, 4	; 27
  c0:	08 95       	ret
	,{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 159, 159, 159, 30, 60, 253, 250, 114, 245, 165, 171, 171, 87, 87, 47, 175, 175, 87, 87, 87, 171, 171, 165, 117, 114, 248, 253, 60, 158, 159, 159, 159, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255}
	,{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 249, 240, 245, 255, 248, 250, 248, 248, 249, 254, 224, 199, 205, 204, 254, 254, 254, 255, 255, 255, 255, 255, 255, 255, 255, 254, 254, 254, 204, 205, 198, 240, 254, 249, 249, 248, 249, 252, 255, 244, 240, 249, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255}
	,{}							
*/};
void lcd_write(int cd, char byte)//SPI 4Line
{
  c2:	88 e0       	ldi	r24, 0x08	; 8
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	ec cf       	rjmp	.-40     	; 0xa0 <lcd_write+0xe>

000000c8 <move_LCD>:
	}
	daobit(LCD_PORT,AO);
	clrb(LCD_PORT,CS);
}
void move_LCD(unsigned char x, unsigned char y)
{
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	d8 2f       	mov	r29, r24
	y--;
  ce:	61 50       	subi	r22, 0x01	; 1
	x--;
	y=y*6;//Graphic Mode thi xoa dong nay di, Text thi de lai
  d0:	c6 2f       	mov	r28, r22
  d2:	cc 0f       	add	r28, r28
  d4:	c6 0f       	add	r28, r22
  d6:	cc 0f       	add	r28, r28
	lcd_write(0,(y&0x0f));
  d8:	6c 2f       	mov	r22, r28
  da:	6f 70       	andi	r22, 0x0F	; 15
  dc:	80 e0       	ldi	r24, 0x00	; 0
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	0e 94 49 00 	call	0x92	; 0x92 <lcd_write>
	lcd_write(0,((y>>4)&0x07)|0x10);
  e4:	6c 2f       	mov	r22, r28
  e6:	62 95       	swap	r22
  e8:	6f 70       	andi	r22, 0x0F	; 15
  ea:	67 70       	andi	r22, 0x07	; 7
  ec:	60 61       	ori	r22, 0x10	; 16
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	0e 94 49 00 	call	0x92	; 0x92 <lcd_write>
	clrb(LCD_PORT,CS);
}
void move_LCD(unsigned char x, unsigned char y)
{
	y--;
	x--;
  f6:	6f ef       	ldi	r22, 0xFF	; 255
  f8:	6d 0f       	add	r22, r29
	y=y*6;//Graphic Mode thi xoa dong nay di, Text thi de lai
	lcd_write(0,(y&0x0f));
	lcd_write(0,((y>>4)&0x07)|0x10);
	lcd_write(0,(x&0x0f)|0xb0);
  fa:	6f 70       	andi	r22, 0x0F	; 15
  fc:	60 6b       	ori	r22, 0xB0	; 176
  fe:	80 e0       	ldi	r24, 0x00	; 0
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	0e 94 49 00 	call	0x92	; 0x92 <lcd_write>
}
 106:	df 91       	pop	r29
 108:	cf 91       	pop	r28
 10a:	08 95       	ret

0000010c <clr_LCD>:
void clr_LCD()
{
 10c:	ff 92       	push	r15
 10e:	0f 93       	push	r16
 110:	1f 93       	push	r17
 112:	cf 93       	push	r28
 114:	df 93       	push	r29
 116:	11 e0       	ldi	r17, 0x01	; 1
	for(int u=0;u<8;u++)
	{
		move_LCD(u+1,1);
 118:	0f 2e       	mov	r0, r31
 11a:	f2 e8       	ldi	r31, 0x82	; 130
 11c:	ff 2e       	mov	r15, r31
 11e:	f0 2d       	mov	r31, r0
 120:	00 e0       	ldi	r16, 0x00	; 0
 122:	61 e0       	ldi	r22, 0x01	; 1
 124:	81 2f       	mov	r24, r17
 126:	0e 94 64 00 	call	0xc8	; 0xc8 <move_LCD>
 12a:	cf 2d       	mov	r28, r15
 12c:	d0 2f       	mov	r29, r16
		for(int w=0;w<130;w++)
		{
			lcd_write(1,0);
 12e:	60 e0       	ldi	r22, 0x00	; 0
 130:	81 e0       	ldi	r24, 0x01	; 1
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	0e 94 49 00 	call	0x92	; 0x92 <lcd_write>
 138:	21 97       	sbiw	r28, 0x01	; 1
void clr_LCD()
{
	for(int u=0;u<8;u++)
	{
		move_LCD(u+1,1);
		for(int w=0;w<130;w++)
 13a:	20 97       	sbiw	r28, 0x00	; 0
 13c:	c1 f7       	brne	.-16     	; 0x12e <clr_LCD+0x22>
 13e:	1f 5f       	subi	r17, 0xFF	; 255
	lcd_write(0,((y>>4)&0x07)|0x10);
	lcd_write(0,(x&0x0f)|0xb0);
}
void clr_LCD()
{
	for(int u=0;u<8;u++)
 140:	19 30       	cpi	r17, 0x09	; 9
 142:	79 f7       	brne	.-34     	; 0x122 <clr_LCD+0x16>
		for(int w=0;w<130;w++)
		{
			lcd_write(1,0);
		}
	}
	move_LCD(1,1);
 144:	61 e0       	ldi	r22, 0x01	; 1
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	0e 94 64 00 	call	0xc8	; 0xc8 <move_LCD>
}
 14c:	df 91       	pop	r29
 14e:	cf 91       	pop	r28
 150:	1f 91       	pop	r17
 152:	0f 91       	pop	r16
 154:	ff 90       	pop	r15
 156:	08 95       	ret

00000158 <lcd_putchar>:
void lcd_putchar(int dat)
{
 158:	0f 93       	push	r16
 15a:	1f 93       	push	r17
 15c:	cf 93       	push	r28
 15e:	df 93       	push	r29
	if((dat >= 0x20) && (dat <= 0x7f))
 160:	9c 01       	movw	r18, r24
 162:	20 52       	subi	r18, 0x20	; 32
 164:	31 09       	sbc	r19, r1
 166:	20 36       	cpi	r18, 0x60	; 96
 168:	31 05       	cpc	r19, r1
 16a:	c0 f4       	brcc	.+48     	; 0x19c <lcd_putchar+0x44>
	{
		dat=dat-32;
 16c:	c9 01       	movw	r24, r18
 16e:	89 01       	movw	r16, r18
 170:	00 0f       	add	r16, r16
 172:	11 1f       	adc	r17, r17
 174:	80 0f       	add	r24, r16
 176:	91 1f       	adc	r25, r17
 178:	8c 01       	movw	r16, r24
 17a:	00 0f       	add	r16, r16
 17c:	11 1f       	adc	r17, r17
 17e:	0e 59       	subi	r16, 0x9E	; 158
 180:	1f 4f       	sbci	r17, 0xFF	; 255
		for(int v=0;v<6;v++)
 182:	c0 e0       	ldi	r28, 0x00	; 0
 184:	d0 e0       	ldi	r29, 0x00	; 0
		lcd_write(1, font[dat][v]);
 186:	f8 01       	movw	r30, r16
 188:	61 91       	ld	r22, Z+
 18a:	8f 01       	movw	r16, r30
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	0e 94 49 00 	call	0x92	; 0x92 <lcd_write>
void lcd_putchar(int dat)
{
	if((dat >= 0x20) && (dat <= 0x7f))
	{
		dat=dat-32;
		for(int v=0;v<6;v++)
 194:	21 96       	adiw	r28, 0x01	; 1
 196:	c6 30       	cpi	r28, 0x06	; 6
 198:	d1 05       	cpc	r29, r1
 19a:	a9 f7       	brne	.-22     	; 0x186 <lcd_putchar+0x2e>
		lcd_write(1, font[dat][v]);
	}
}
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	1f 91       	pop	r17
 1a2:	0f 91       	pop	r16
 1a4:	08 95       	ret

000001a6 <print_LCD>:
void print_LCD(char *s)
{
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	ec 01       	movw	r28, r24
	while(*s)
 1ac:	88 81       	ld	r24, Y
 1ae:	88 23       	and	r24, r24
 1b0:	39 f0       	breq	.+14     	; 0x1c0 <print_LCD+0x1a>
 1b2:	21 96       	adiw	r28, 0x01	; 1
	lcd_putchar(*s++);
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	0e 94 ac 00 	call	0x158	; 0x158 <lcd_putchar>
		lcd_write(1, font[dat][v]);
	}
}
void print_LCD(char *s)
{
	while(*s)
 1ba:	89 91       	ld	r24, Y+
 1bc:	81 11       	cpse	r24, r1
 1be:	fa cf       	rjmp	.-12     	; 0x1b4 <print_LCD+0xe>
	lcd_putchar(*s++);
}
 1c0:	df 91       	pop	r29
 1c2:	cf 91       	pop	r28
 1c4:	08 95       	ret

000001c6 <init_LCD>:
void init_LCD()//Khoi tao GLCD
{
	LCD_DDR=0xFF;
 1c6:	8f ef       	ldi	r24, 0xFF	; 255
 1c8:	8a bb       	out	0x1a, r24	; 26
	lcd_write(0,0xE2); //Reset
 1ca:	62 ee       	ldi	r22, 0xE2	; 226
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 49 00 	call	0x92	; 0x92 <lcd_write>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d4:	2f ef       	ldi	r18, 0xFF	; 255
 1d6:	81 ee       	ldi	r24, 0xE1	; 225
 1d8:	94 e0       	ldi	r25, 0x04	; 4
 1da:	21 50       	subi	r18, 0x01	; 1
 1dc:	80 40       	sbci	r24, 0x00	; 0
 1de:	90 40       	sbci	r25, 0x00	; 0
 1e0:	e1 f7       	brne	.-8      	; 0x1da <init_LCD+0x14>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <init_LCD+0x1e>
 1e4:	00 00       	nop
	_delay_ms(100);	   //Delay 100ms
	lcd_write(0,0xAF); //Display ON, 0xAE - OFF
 1e6:	6f ea       	ldi	r22, 0xAF	; 175
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	0e 94 49 00 	call	0x92	; 0x92 <lcd_write>
	lcd_write(0,0x2F); //Power control
 1f0:	6f e2       	ldi	r22, 0x2F	; 47
 1f2:	80 e0       	ldi	r24, 0x00	; 0
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	0e 94 49 00 	call	0x92	; 0x92 <lcd_write>
	clr_LCD(); //Xoa man hinh
 1fa:	0e 94 86 00 	call	0x10c	; 0x10c <clr_LCD>
 1fe:	08 95       	ret

00000200 <vietso_LCD>:
}
void vietso_LCD(int num)
{
 200:	0f 93       	push	r16
 202:	1f 93       	push	r17
 204:	cf 93       	push	r28
 206:	df 93       	push	r29
 208:	00 d0       	rcall	.+0      	; 0x20a <vietso_LCD+0xa>
 20a:	00 d0       	rcall	.+0      	; 0x20c <vietso_LCD+0xc>
 20c:	1f 92       	push	r1
 20e:	cd b7       	in	r28, 0x3d	; 61
 210:	de b7       	in	r29, 0x3e	; 62
	char dis[5];
	sprintf(dis, "%i", num);
 212:	9f 93       	push	r25
 214:	8f 93       	push	r24
 216:	82 ea       	ldi	r24, 0xA2	; 162
 218:	92 e0       	ldi	r25, 0x02	; 2
 21a:	9f 93       	push	r25
 21c:	8f 93       	push	r24
 21e:	8e 01       	movw	r16, r28
 220:	0f 5f       	subi	r16, 0xFF	; 255
 222:	1f 4f       	sbci	r17, 0xFF	; 255
 224:	1f 93       	push	r17
 226:	0f 93       	push	r16
 228:	0e 94 3c 02 	call	0x478	; 0x478 <sprintf>
	print_LCD(dis);
 22c:	c8 01       	movw	r24, r16
 22e:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <print_LCD>
 232:	0f 90       	pop	r0
 234:	0f 90       	pop	r0
 236:	0f 90       	pop	r0
 238:	0f 90       	pop	r0
 23a:	0f 90       	pop	r0
 23c:	0f 90       	pop	r0
}
 23e:	0f 90       	pop	r0
 240:	0f 90       	pop	r0
 242:	0f 90       	pop	r0
 244:	0f 90       	pop	r0
 246:	0f 90       	pop	r0
 248:	df 91       	pop	r29
 24a:	cf 91       	pop	r28
 24c:	1f 91       	pop	r17
 24e:	0f 91       	pop	r16
 250:	08 95       	ret

00000252 <hesochia>:
void hesochia(int div)
{
	TCNT1=0;
 252:	1d bc       	out	0x2d, r1	; 45
 254:	1c bc       	out	0x2c, r1	; 44
	if (div==1024)
 256:	81 15       	cp	r24, r1
 258:	24 e0       	ldi	r18, 0x04	; 4
 25a:	92 07       	cpc	r25, r18
 25c:	19 f4       	brne	.+6      	; 0x264 <hesochia+0x12>
		TCCR1B=(1<<CS10)|(1<<CS12);
 25e:	85 e0       	ldi	r24, 0x05	; 5
 260:	8e bd       	out	0x2e, r24	; 46
 262:	08 95       	ret
	else if (div==256)
 264:	81 15       	cp	r24, r1
 266:	21 e0       	ldi	r18, 0x01	; 1
 268:	92 07       	cpc	r25, r18
 26a:	19 f4       	brne	.+6      	; 0x272 <hesochia+0x20>
		TCCR1B=(1<<CS12);
 26c:	84 e0       	ldi	r24, 0x04	; 4
 26e:	8e bd       	out	0x2e, r24	; 46
 270:	08 95       	ret
	else if (div==64)
 272:	80 34       	cpi	r24, 0x40	; 64
 274:	91 05       	cpc	r25, r1
 276:	19 f4       	brne	.+6      	; 0x27e <hesochia+0x2c>
		TCCR1B=(1<<CS10)|(1<<CS11);
 278:	83 e0       	ldi	r24, 0x03	; 3
 27a:	8e bd       	out	0x2e, r24	; 46
 27c:	08 95       	ret
	else if (div==8)
 27e:	08 97       	sbiw	r24, 0x08	; 8
 280:	19 f4       	brne	.+6      	; 0x288 <hesochia+0x36>
		TCCR1B=(1<<CS11);
 282:	82 e0       	ldi	r24, 0x02	; 2
 284:	8e bd       	out	0x2e, r24	; 46
 286:	08 95       	ret
	else
		TCCR1B=(1<<CS10);
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	8e bd       	out	0x2e, r24	; 46
 28c:	08 95       	ret

0000028e <main>:
 28e:	2f ef       	ldi	r18, 0xFF	; 255
 290:	83 ed       	ldi	r24, 0xD3	; 211
 292:	90 e3       	ldi	r25, 0x30	; 48
 294:	21 50       	subi	r18, 0x01	; 1
 296:	80 40       	sbci	r24, 0x00	; 0
 298:	90 40       	sbci	r25, 0x00	; 0
 29a:	e1 f7       	brne	.-8      	; 0x294 <main+0x6>
 29c:	00 c0       	rjmp	.+0      	; 0x29e <main+0x10>
 29e:	00 00       	nop
int div=1024;

int main(void)
{
	_delay_ms(1000);
	DDRA=DDRB=0xFF;
 2a0:	8f ef       	ldi	r24, 0xFF	; 255
 2a2:	87 bb       	out	0x17, r24	; 23
 2a4:	8a bb       	out	0x1a, r24	; 26
	init_LCD();
 2a6:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <init_LCD>
	hesochia(div);
 2aa:	80 91 60 00 	lds	r24, 0x0060
 2ae:	90 91 61 00 	lds	r25, 0x0061
 2b2:	0e 94 29 01 	call	0x252	; 0x252 <hesochia>
	
	//NGAT NGOAI
	setb(PORTD,2);
 2b6:	92 9a       	sbi	0x12, 2	; 18
	MCUCR=(1<<ISC01)|(1<<ISC11);
 2b8:	8a e0       	ldi	r24, 0x0A	; 10
 2ba:	85 bf       	out	0x35, r24	; 53
	GICR=(1<<INT0)|(1<<INT1);
 2bc:	80 ec       	ldi	r24, 0xC0	; 192
 2be:	8b bf       	out	0x3b, r24	; 59
	sei();
 2c0:	78 94       	sei
 2c2:	2f ef       	ldi	r18, 0xFF	; 255
 2c4:	81 ee       	ldi	r24, 0xE1	; 225
 2c6:	94 e0       	ldi	r25, 0x04	; 4
 2c8:	21 50       	subi	r18, 0x01	; 1
 2ca:	80 40       	sbci	r24, 0x00	; 0
 2cc:	90 40       	sbci	r25, 0x00	; 0
 2ce:	e1 f7       	brne	.-8      	; 0x2c8 <main+0x3a>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <main+0x44>
 2d2:	00 00       	nop
		print_LCD("DH BACH KHOA DA NANG");
		move_LCD(4,1);
		print_LCD(" DA DIEN TU UNG DUNG");
		move_LCD(6,1);
		print_LCD("   BIEN TAN DK DC");
		int tocdo = F_CPU*60/div/speed;
 2d4:	0f 2e       	mov	r0, r31
 2d6:	81 2c       	mov	r8, r1
 2d8:	f0 e7       	ldi	r31, 0x70	; 112
 2da:	9f 2e       	mov	r9, r31
 2dc:	f8 e3       	ldi	r31, 0x38	; 56
 2de:	af 2e       	mov	r10, r31
 2e0:	f9 e3       	ldi	r31, 0x39	; 57
 2e2:	bf 2e       	mov	r11, r31
 2e4:	f0 2d       	mov	r31, r0
			print_LCD("TOC DO : ");
			vietso_LCD(tocdo);
			print_LCD("   ");
			move_LCD(8,17);
			print_LCD("(RPM)");
			PORTB=220+F_CPU/div/speed;
 2e6:	0f 2e       	mov	r0, r31
 2e8:	41 2c       	mov	r4, r1
 2ea:	f4 e2       	ldi	r31, 0x24	; 36
 2ec:	5f 2e       	mov	r5, r31
 2ee:	f4 ef       	ldi	r31, 0xF4	; 244
 2f0:	6f 2e       	mov	r6, r31
 2f2:	71 2c       	mov	r7, r1
 2f4:	f0 2d       	mov	r31, r0
	GICR=(1<<INT0)|(1<<INT1);
	sei();
	_delay_ms(100);
	while(1)
	{
		move_LCD(1,1);
 2f6:	61 e0       	ldi	r22, 0x01	; 1
 2f8:	81 e0       	ldi	r24, 0x01	; 1
 2fa:	0e 94 64 00 	call	0xc8	; 0xc8 <move_LCD>
		print_LCD("  |*----*****----*|");
 2fe:	85 ea       	ldi	r24, 0xA5	; 165
 300:	92 e0       	ldi	r25, 0x02	; 2
 302:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <print_LCD>
		move_LCD(2,1);
 306:	61 e0       	ldi	r22, 0x01	; 1
 308:	82 e0       	ldi	r24, 0x02	; 2
 30a:	0e 94 64 00 	call	0xc8	; 0xc8 <move_LCD>
		print_LCD("DH BACH KHOA DA NANG");
 30e:	89 eb       	ldi	r24, 0xB9	; 185
 310:	92 e0       	ldi	r25, 0x02	; 2
 312:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <print_LCD>
		move_LCD(4,1);
 316:	61 e0       	ldi	r22, 0x01	; 1
 318:	84 e0       	ldi	r24, 0x04	; 4
 31a:	0e 94 64 00 	call	0xc8	; 0xc8 <move_LCD>
		print_LCD(" DA DIEN TU UNG DUNG");
 31e:	8e ec       	ldi	r24, 0xCE	; 206
 320:	92 e0       	ldi	r25, 0x02	; 2
 322:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <print_LCD>
		move_LCD(6,1);
 326:	61 e0       	ldi	r22, 0x01	; 1
 328:	86 e0       	ldi	r24, 0x06	; 6
 32a:	0e 94 64 00 	call	0xc8	; 0xc8 <move_LCD>
		print_LCD("   BIEN TAN DK DC");
 32e:	83 ee       	ldi	r24, 0xE3	; 227
 330:	92 e0       	ldi	r25, 0x02	; 2
 332:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <print_LCD>
		int tocdo = F_CPU*60/div/speed;
 336:	20 91 60 00 	lds	r18, 0x0060
 33a:	30 91 61 00 	lds	r19, 0x0061
 33e:	44 27       	eor	r20, r20
 340:	37 fd       	sbrc	r19, 7
 342:	40 95       	com	r20
 344:	54 2f       	mov	r21, r20
 346:	c5 01       	movw	r24, r10
 348:	b4 01       	movw	r22, r8
 34a:	0e 94 1a 02 	call	0x434	; 0x434 <__udivmodsi4>
 34e:	c0 90 0a 03 	lds	r12, 0x030A
 352:	d0 90 0b 03 	lds	r13, 0x030B
 356:	e0 90 0c 03 	lds	r14, 0x030C
 35a:	f0 90 0d 03 	lds	r15, 0x030D
 35e:	ca 01       	movw	r24, r20
 360:	b9 01       	movw	r22, r18
 362:	a7 01       	movw	r20, r14
 364:	96 01       	movw	r18, r12
 366:	0e 94 1a 02 	call	0x434	; 0x434 <__udivmodsi4>
 36a:	69 01       	movw	r12, r18
 36c:	7a 01       	movw	r14, r20
		if ((tocdo<1600)&&(tocdo>100))
 36e:	c9 01       	movw	r24, r18
 370:	85 56       	subi	r24, 0x65	; 101
 372:	91 09       	sbc	r25, r1
 374:	8b 3d       	cpi	r24, 0xDB	; 219
 376:	95 40       	sbci	r25, 0x05	; 5
 378:	98 f5       	brcc	.+102    	; 0x3e0 <main+0x152>
		{
			move_LCD(8,1);
 37a:	61 e0       	ldi	r22, 0x01	; 1
 37c:	88 e0       	ldi	r24, 0x08	; 8
 37e:	0e 94 64 00 	call	0xc8	; 0xc8 <move_LCD>
			print_LCD("TOC DO : ");
 382:	85 ef       	ldi	r24, 0xF5	; 245
 384:	92 e0       	ldi	r25, 0x02	; 2
 386:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <print_LCD>
			vietso_LCD(tocdo);
 38a:	c6 01       	movw	r24, r12
 38c:	0e 94 00 01 	call	0x200	; 0x200 <vietso_LCD>
			print_LCD("   ");
 390:	8f ef       	ldi	r24, 0xFF	; 255
 392:	92 e0       	ldi	r25, 0x02	; 2
 394:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <print_LCD>
			move_LCD(8,17);
 398:	61 e1       	ldi	r22, 0x11	; 17
 39a:	88 e0       	ldi	r24, 0x08	; 8
 39c:	0e 94 64 00 	call	0xc8	; 0xc8 <move_LCD>
			print_LCD("(RPM)");
 3a0:	83 e0       	ldi	r24, 0x03	; 3
 3a2:	93 e0       	ldi	r25, 0x03	; 3
 3a4:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <print_LCD>
			PORTB=220+F_CPU/div/speed;
 3a8:	20 91 60 00 	lds	r18, 0x0060
 3ac:	30 91 61 00 	lds	r19, 0x0061
 3b0:	44 27       	eor	r20, r20
 3b2:	37 fd       	sbrc	r19, 7
 3b4:	40 95       	com	r20
 3b6:	54 2f       	mov	r21, r20
 3b8:	c3 01       	movw	r24, r6
 3ba:	b2 01       	movw	r22, r4
 3bc:	0e 94 1a 02 	call	0x434	; 0x434 <__udivmodsi4>
 3c0:	c0 90 0a 03 	lds	r12, 0x030A
 3c4:	d0 90 0b 03 	lds	r13, 0x030B
 3c8:	e0 90 0c 03 	lds	r14, 0x030C
 3cc:	f0 90 0d 03 	lds	r15, 0x030D
 3d0:	ca 01       	movw	r24, r20
 3d2:	b9 01       	movw	r22, r18
 3d4:	a7 01       	movw	r20, r14
 3d6:	96 01       	movw	r18, r12
 3d8:	0e 94 1a 02 	call	0x434	; 0x434 <__udivmodsi4>
 3dc:	24 52       	subi	r18, 0x24	; 36
 3de:	28 bb       	out	0x18, r18	; 24
 3e0:	8f ef       	ldi	r24, 0xFF	; 255
 3e2:	99 e6       	ldi	r25, 0x69	; 105
 3e4:	28 e1       	ldi	r18, 0x18	; 24
 3e6:	81 50       	subi	r24, 0x01	; 1
 3e8:	90 40       	sbci	r25, 0x00	; 0
 3ea:	20 40       	sbci	r18, 0x00	; 0
 3ec:	e1 f7       	brne	.-8      	; 0x3e6 <main+0x158>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <main+0x162>
 3f0:	00 00       	nop
 3f2:	81 cf       	rjmp	.-254    	; 0x2f6 <main+0x68>

000003f4 <__vector_2>:
		_delay_ms(500);
	}

}
ISR(INT1_vect)
{
 3f4:	1f 92       	push	r1
 3f6:	0f 92       	push	r0
 3f8:	0f b6       	in	r0, 0x3f	; 63
 3fa:	0f 92       	push	r0
 3fc:	11 24       	eor	r1, r1
 3fe:	8f 93       	push	r24
 400:	9f 93       	push	r25
 402:	af 93       	push	r26
 404:	bf 93       	push	r27
	speed=TCNT1;
 406:	8c b5       	in	r24, 0x2c	; 44
 408:	9d b5       	in	r25, 0x2d	; 45
 40a:	a0 e0       	ldi	r26, 0x00	; 0
 40c:	b0 e0       	ldi	r27, 0x00	; 0
 40e:	80 93 0a 03 	sts	0x030A, r24
 412:	90 93 0b 03 	sts	0x030B, r25
 416:	a0 93 0c 03 	sts	0x030C, r26
 41a:	b0 93 0d 03 	sts	0x030D, r27
	TCNT1=0;
 41e:	1d bc       	out	0x2d, r1	; 45
 420:	1c bc       	out	0x2c, r1	; 44
 422:	bf 91       	pop	r27
 424:	af 91       	pop	r26
 426:	9f 91       	pop	r25
 428:	8f 91       	pop	r24
 42a:	0f 90       	pop	r0
 42c:	0f be       	out	0x3f, r0	; 63
 42e:	0f 90       	pop	r0
 430:	1f 90       	pop	r1
 432:	18 95       	reti

00000434 <__udivmodsi4>:
 434:	a1 e2       	ldi	r26, 0x21	; 33
 436:	1a 2e       	mov	r1, r26
 438:	aa 1b       	sub	r26, r26
 43a:	bb 1b       	sub	r27, r27
 43c:	fd 01       	movw	r30, r26
 43e:	0d c0       	rjmp	.+26     	; 0x45a <__udivmodsi4_ep>

00000440 <__udivmodsi4_loop>:
 440:	aa 1f       	adc	r26, r26
 442:	bb 1f       	adc	r27, r27
 444:	ee 1f       	adc	r30, r30
 446:	ff 1f       	adc	r31, r31
 448:	a2 17       	cp	r26, r18
 44a:	b3 07       	cpc	r27, r19
 44c:	e4 07       	cpc	r30, r20
 44e:	f5 07       	cpc	r31, r21
 450:	20 f0       	brcs	.+8      	; 0x45a <__udivmodsi4_ep>
 452:	a2 1b       	sub	r26, r18
 454:	b3 0b       	sbc	r27, r19
 456:	e4 0b       	sbc	r30, r20
 458:	f5 0b       	sbc	r31, r21

0000045a <__udivmodsi4_ep>:
 45a:	66 1f       	adc	r22, r22
 45c:	77 1f       	adc	r23, r23
 45e:	88 1f       	adc	r24, r24
 460:	99 1f       	adc	r25, r25
 462:	1a 94       	dec	r1
 464:	69 f7       	brne	.-38     	; 0x440 <__udivmodsi4_loop>
 466:	60 95       	com	r22
 468:	70 95       	com	r23
 46a:	80 95       	com	r24
 46c:	90 95       	com	r25
 46e:	9b 01       	movw	r18, r22
 470:	ac 01       	movw	r20, r24
 472:	bd 01       	movw	r22, r26
 474:	cf 01       	movw	r24, r30
 476:	08 95       	ret

00000478 <sprintf>:
 478:	ae e0       	ldi	r26, 0x0E	; 14
 47a:	b0 e0       	ldi	r27, 0x00	; 0
 47c:	e2 e4       	ldi	r30, 0x42	; 66
 47e:	f2 e0       	ldi	r31, 0x02	; 2
 480:	0c 94 e4 04 	jmp	0x9c8	; 0x9c8 <__prologue_saves__+0x1c>
 484:	0d 89       	ldd	r16, Y+21	; 0x15
 486:	1e 89       	ldd	r17, Y+22	; 0x16
 488:	86 e0       	ldi	r24, 0x06	; 6
 48a:	8c 83       	std	Y+4, r24	; 0x04
 48c:	1a 83       	std	Y+2, r17	; 0x02
 48e:	09 83       	std	Y+1, r16	; 0x01
 490:	8f ef       	ldi	r24, 0xFF	; 255
 492:	9f e7       	ldi	r25, 0x7F	; 127
 494:	9e 83       	std	Y+6, r25	; 0x06
 496:	8d 83       	std	Y+5, r24	; 0x05
 498:	ae 01       	movw	r20, r28
 49a:	47 5e       	subi	r20, 0xE7	; 231
 49c:	5f 4f       	sbci	r21, 0xFF	; 255
 49e:	6f 89       	ldd	r22, Y+23	; 0x17
 4a0:	78 8d       	ldd	r23, Y+24	; 0x18
 4a2:	ce 01       	movw	r24, r28
 4a4:	01 96       	adiw	r24, 0x01	; 1
 4a6:	0e 94 5e 02 	call	0x4bc	; 0x4bc <vfprintf>
 4aa:	ef 81       	ldd	r30, Y+7	; 0x07
 4ac:	f8 85       	ldd	r31, Y+8	; 0x08
 4ae:	e0 0f       	add	r30, r16
 4b0:	f1 1f       	adc	r31, r17
 4b2:	10 82       	st	Z, r1
 4b4:	2e 96       	adiw	r28, 0x0e	; 14
 4b6:	e4 e0       	ldi	r30, 0x04	; 4
 4b8:	0c 94 00 05 	jmp	0xa00	; 0xa00 <__epilogue_restores__+0x1c>

000004bc <vfprintf>:
 4bc:	ac e0       	ldi	r26, 0x0C	; 12
 4be:	b0 e0       	ldi	r27, 0x00	; 0
 4c0:	e4 e6       	ldi	r30, 0x64	; 100
 4c2:	f2 e0       	ldi	r31, 0x02	; 2
 4c4:	0c 94 d6 04 	jmp	0x9ac	; 0x9ac <__prologue_saves__>
 4c8:	7c 01       	movw	r14, r24
 4ca:	6b 01       	movw	r12, r22
 4cc:	8a 01       	movw	r16, r20
 4ce:	fc 01       	movw	r30, r24
 4d0:	17 82       	std	Z+7, r1	; 0x07
 4d2:	16 82       	std	Z+6, r1	; 0x06
 4d4:	83 81       	ldd	r24, Z+3	; 0x03
 4d6:	81 ff       	sbrs	r24, 1
 4d8:	bd c1       	rjmp	.+890    	; 0x854 <vfprintf+0x398>
 4da:	ce 01       	movw	r24, r28
 4dc:	01 96       	adiw	r24, 0x01	; 1
 4de:	4c 01       	movw	r8, r24
 4e0:	f7 01       	movw	r30, r14
 4e2:	93 81       	ldd	r25, Z+3	; 0x03
 4e4:	f6 01       	movw	r30, r12
 4e6:	93 fd       	sbrc	r25, 3
 4e8:	85 91       	lpm	r24, Z+
 4ea:	93 ff       	sbrs	r25, 3
 4ec:	81 91       	ld	r24, Z+
 4ee:	6f 01       	movw	r12, r30
 4f0:	88 23       	and	r24, r24
 4f2:	09 f4       	brne	.+2      	; 0x4f6 <vfprintf+0x3a>
 4f4:	ab c1       	rjmp	.+854    	; 0x84c <vfprintf+0x390>
 4f6:	85 32       	cpi	r24, 0x25	; 37
 4f8:	39 f4       	brne	.+14     	; 0x508 <vfprintf+0x4c>
 4fa:	93 fd       	sbrc	r25, 3
 4fc:	85 91       	lpm	r24, Z+
 4fe:	93 ff       	sbrs	r25, 3
 500:	81 91       	ld	r24, Z+
 502:	6f 01       	movw	r12, r30
 504:	85 32       	cpi	r24, 0x25	; 37
 506:	29 f4       	brne	.+10     	; 0x512 <vfprintf+0x56>
 508:	b7 01       	movw	r22, r14
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	0e 94 46 04 	call	0x88c	; 0x88c <fputc>
 510:	e7 cf       	rjmp	.-50     	; 0x4e0 <vfprintf+0x24>
 512:	51 2c       	mov	r5, r1
 514:	31 2c       	mov	r3, r1
 516:	20 e0       	ldi	r18, 0x00	; 0
 518:	20 32       	cpi	r18, 0x20	; 32
 51a:	a0 f4       	brcc	.+40     	; 0x544 <vfprintf+0x88>
 51c:	8b 32       	cpi	r24, 0x2B	; 43
 51e:	69 f0       	breq	.+26     	; 0x53a <vfprintf+0x7e>
 520:	30 f4       	brcc	.+12     	; 0x52e <vfprintf+0x72>
 522:	80 32       	cpi	r24, 0x20	; 32
 524:	59 f0       	breq	.+22     	; 0x53c <vfprintf+0x80>
 526:	83 32       	cpi	r24, 0x23	; 35
 528:	69 f4       	brne	.+26     	; 0x544 <vfprintf+0x88>
 52a:	20 61       	ori	r18, 0x10	; 16
 52c:	2c c0       	rjmp	.+88     	; 0x586 <vfprintf+0xca>
 52e:	8d 32       	cpi	r24, 0x2D	; 45
 530:	39 f0       	breq	.+14     	; 0x540 <vfprintf+0x84>
 532:	80 33       	cpi	r24, 0x30	; 48
 534:	39 f4       	brne	.+14     	; 0x544 <vfprintf+0x88>
 536:	21 60       	ori	r18, 0x01	; 1
 538:	26 c0       	rjmp	.+76     	; 0x586 <vfprintf+0xca>
 53a:	22 60       	ori	r18, 0x02	; 2
 53c:	24 60       	ori	r18, 0x04	; 4
 53e:	23 c0       	rjmp	.+70     	; 0x586 <vfprintf+0xca>
 540:	28 60       	ori	r18, 0x08	; 8
 542:	21 c0       	rjmp	.+66     	; 0x586 <vfprintf+0xca>
 544:	27 fd       	sbrc	r18, 7
 546:	27 c0       	rjmp	.+78     	; 0x596 <vfprintf+0xda>
 548:	30 ed       	ldi	r19, 0xD0	; 208
 54a:	38 0f       	add	r19, r24
 54c:	3a 30       	cpi	r19, 0x0A	; 10
 54e:	78 f4       	brcc	.+30     	; 0x56e <vfprintf+0xb2>
 550:	26 ff       	sbrs	r18, 6
 552:	06 c0       	rjmp	.+12     	; 0x560 <vfprintf+0xa4>
 554:	fa e0       	ldi	r31, 0x0A	; 10
 556:	5f 9e       	mul	r5, r31
 558:	30 0d       	add	r19, r0
 55a:	11 24       	eor	r1, r1
 55c:	53 2e       	mov	r5, r19
 55e:	13 c0       	rjmp	.+38     	; 0x586 <vfprintf+0xca>
 560:	8a e0       	ldi	r24, 0x0A	; 10
 562:	38 9e       	mul	r3, r24
 564:	30 0d       	add	r19, r0
 566:	11 24       	eor	r1, r1
 568:	33 2e       	mov	r3, r19
 56a:	20 62       	ori	r18, 0x20	; 32
 56c:	0c c0       	rjmp	.+24     	; 0x586 <vfprintf+0xca>
 56e:	8e 32       	cpi	r24, 0x2E	; 46
 570:	21 f4       	brne	.+8      	; 0x57a <vfprintf+0xbe>
 572:	26 fd       	sbrc	r18, 6
 574:	6b c1       	rjmp	.+726    	; 0x84c <vfprintf+0x390>
 576:	20 64       	ori	r18, 0x40	; 64
 578:	06 c0       	rjmp	.+12     	; 0x586 <vfprintf+0xca>
 57a:	8c 36       	cpi	r24, 0x6C	; 108
 57c:	11 f4       	brne	.+4      	; 0x582 <vfprintf+0xc6>
 57e:	20 68       	ori	r18, 0x80	; 128
 580:	02 c0       	rjmp	.+4      	; 0x586 <vfprintf+0xca>
 582:	88 36       	cpi	r24, 0x68	; 104
 584:	41 f4       	brne	.+16     	; 0x596 <vfprintf+0xda>
 586:	f6 01       	movw	r30, r12
 588:	93 fd       	sbrc	r25, 3
 58a:	85 91       	lpm	r24, Z+
 58c:	93 ff       	sbrs	r25, 3
 58e:	81 91       	ld	r24, Z+
 590:	6f 01       	movw	r12, r30
 592:	81 11       	cpse	r24, r1
 594:	c1 cf       	rjmp	.-126    	; 0x518 <vfprintf+0x5c>
 596:	98 2f       	mov	r25, r24
 598:	9f 7d       	andi	r25, 0xDF	; 223
 59a:	95 54       	subi	r25, 0x45	; 69
 59c:	93 30       	cpi	r25, 0x03	; 3
 59e:	28 f4       	brcc	.+10     	; 0x5aa <vfprintf+0xee>
 5a0:	0c 5f       	subi	r16, 0xFC	; 252
 5a2:	1f 4f       	sbci	r17, 0xFF	; 255
 5a4:	ff e3       	ldi	r31, 0x3F	; 63
 5a6:	f9 83       	std	Y+1, r31	; 0x01
 5a8:	0d c0       	rjmp	.+26     	; 0x5c4 <vfprintf+0x108>
 5aa:	83 36       	cpi	r24, 0x63	; 99
 5ac:	31 f0       	breq	.+12     	; 0x5ba <vfprintf+0xfe>
 5ae:	83 37       	cpi	r24, 0x73	; 115
 5b0:	71 f0       	breq	.+28     	; 0x5ce <vfprintf+0x112>
 5b2:	83 35       	cpi	r24, 0x53	; 83
 5b4:	09 f0       	breq	.+2      	; 0x5b8 <vfprintf+0xfc>
 5b6:	5b c0       	rjmp	.+182    	; 0x66e <vfprintf+0x1b2>
 5b8:	22 c0       	rjmp	.+68     	; 0x5fe <vfprintf+0x142>
 5ba:	f8 01       	movw	r30, r16
 5bc:	80 81       	ld	r24, Z
 5be:	89 83       	std	Y+1, r24	; 0x01
 5c0:	0e 5f       	subi	r16, 0xFE	; 254
 5c2:	1f 4f       	sbci	r17, 0xFF	; 255
 5c4:	44 24       	eor	r4, r4
 5c6:	43 94       	inc	r4
 5c8:	51 2c       	mov	r5, r1
 5ca:	54 01       	movw	r10, r8
 5cc:	15 c0       	rjmp	.+42     	; 0x5f8 <vfprintf+0x13c>
 5ce:	38 01       	movw	r6, r16
 5d0:	f2 e0       	ldi	r31, 0x02	; 2
 5d2:	6f 0e       	add	r6, r31
 5d4:	71 1c       	adc	r7, r1
 5d6:	f8 01       	movw	r30, r16
 5d8:	a0 80       	ld	r10, Z
 5da:	b1 80       	ldd	r11, Z+1	; 0x01
 5dc:	26 ff       	sbrs	r18, 6
 5de:	03 c0       	rjmp	.+6      	; 0x5e6 <vfprintf+0x12a>
 5e0:	65 2d       	mov	r22, r5
 5e2:	70 e0       	ldi	r23, 0x00	; 0
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <vfprintf+0x12e>
 5e6:	6f ef       	ldi	r22, 0xFF	; 255
 5e8:	7f ef       	ldi	r23, 0xFF	; 255
 5ea:	c5 01       	movw	r24, r10
 5ec:	2c 87       	std	Y+12, r18	; 0x0c
 5ee:	0e 94 3b 04 	call	0x876	; 0x876 <strnlen>
 5f2:	2c 01       	movw	r4, r24
 5f4:	83 01       	movw	r16, r6
 5f6:	2c 85       	ldd	r18, Y+12	; 0x0c
 5f8:	2f 77       	andi	r18, 0x7F	; 127
 5fa:	22 2e       	mov	r2, r18
 5fc:	17 c0       	rjmp	.+46     	; 0x62c <vfprintf+0x170>
 5fe:	38 01       	movw	r6, r16
 600:	f2 e0       	ldi	r31, 0x02	; 2
 602:	6f 0e       	add	r6, r31
 604:	71 1c       	adc	r7, r1
 606:	f8 01       	movw	r30, r16
 608:	a0 80       	ld	r10, Z
 60a:	b1 80       	ldd	r11, Z+1	; 0x01
 60c:	26 ff       	sbrs	r18, 6
 60e:	03 c0       	rjmp	.+6      	; 0x616 <vfprintf+0x15a>
 610:	65 2d       	mov	r22, r5
 612:	70 e0       	ldi	r23, 0x00	; 0
 614:	02 c0       	rjmp	.+4      	; 0x61a <vfprintf+0x15e>
 616:	6f ef       	ldi	r22, 0xFF	; 255
 618:	7f ef       	ldi	r23, 0xFF	; 255
 61a:	c5 01       	movw	r24, r10
 61c:	2c 87       	std	Y+12, r18	; 0x0c
 61e:	0e 94 30 04 	call	0x860	; 0x860 <strnlen_P>
 622:	2c 01       	movw	r4, r24
 624:	2c 85       	ldd	r18, Y+12	; 0x0c
 626:	20 68       	ori	r18, 0x80	; 128
 628:	22 2e       	mov	r2, r18
 62a:	83 01       	movw	r16, r6
 62c:	23 fc       	sbrc	r2, 3
 62e:	1b c0       	rjmp	.+54     	; 0x666 <vfprintf+0x1aa>
 630:	83 2d       	mov	r24, r3
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	48 16       	cp	r4, r24
 636:	59 06       	cpc	r5, r25
 638:	b0 f4       	brcc	.+44     	; 0x666 <vfprintf+0x1aa>
 63a:	b7 01       	movw	r22, r14
 63c:	80 e2       	ldi	r24, 0x20	; 32
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	0e 94 46 04 	call	0x88c	; 0x88c <fputc>
 644:	3a 94       	dec	r3
 646:	f4 cf       	rjmp	.-24     	; 0x630 <vfprintf+0x174>
 648:	f5 01       	movw	r30, r10
 64a:	27 fc       	sbrc	r2, 7
 64c:	85 91       	lpm	r24, Z+
 64e:	27 fe       	sbrs	r2, 7
 650:	81 91       	ld	r24, Z+
 652:	5f 01       	movw	r10, r30
 654:	b7 01       	movw	r22, r14
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	0e 94 46 04 	call	0x88c	; 0x88c <fputc>
 65c:	31 10       	cpse	r3, r1
 65e:	3a 94       	dec	r3
 660:	f1 e0       	ldi	r31, 0x01	; 1
 662:	4f 1a       	sub	r4, r31
 664:	51 08       	sbc	r5, r1
 666:	41 14       	cp	r4, r1
 668:	51 04       	cpc	r5, r1
 66a:	71 f7       	brne	.-36     	; 0x648 <vfprintf+0x18c>
 66c:	e5 c0       	rjmp	.+458    	; 0x838 <vfprintf+0x37c>
 66e:	84 36       	cpi	r24, 0x64	; 100
 670:	11 f0       	breq	.+4      	; 0x676 <vfprintf+0x1ba>
 672:	89 36       	cpi	r24, 0x69	; 105
 674:	39 f5       	brne	.+78     	; 0x6c4 <vfprintf+0x208>
 676:	f8 01       	movw	r30, r16
 678:	27 ff       	sbrs	r18, 7
 67a:	07 c0       	rjmp	.+14     	; 0x68a <vfprintf+0x1ce>
 67c:	60 81       	ld	r22, Z
 67e:	71 81       	ldd	r23, Z+1	; 0x01
 680:	82 81       	ldd	r24, Z+2	; 0x02
 682:	93 81       	ldd	r25, Z+3	; 0x03
 684:	0c 5f       	subi	r16, 0xFC	; 252
 686:	1f 4f       	sbci	r17, 0xFF	; 255
 688:	08 c0       	rjmp	.+16     	; 0x69a <vfprintf+0x1de>
 68a:	60 81       	ld	r22, Z
 68c:	71 81       	ldd	r23, Z+1	; 0x01
 68e:	88 27       	eor	r24, r24
 690:	77 fd       	sbrc	r23, 7
 692:	80 95       	com	r24
 694:	98 2f       	mov	r25, r24
 696:	0e 5f       	subi	r16, 0xFE	; 254
 698:	1f 4f       	sbci	r17, 0xFF	; 255
 69a:	2f 76       	andi	r18, 0x6F	; 111
 69c:	b2 2e       	mov	r11, r18
 69e:	97 ff       	sbrs	r25, 7
 6a0:	09 c0       	rjmp	.+18     	; 0x6b4 <vfprintf+0x1f8>
 6a2:	90 95       	com	r25
 6a4:	80 95       	com	r24
 6a6:	70 95       	com	r23
 6a8:	61 95       	neg	r22
 6aa:	7f 4f       	sbci	r23, 0xFF	; 255
 6ac:	8f 4f       	sbci	r24, 0xFF	; 255
 6ae:	9f 4f       	sbci	r25, 0xFF	; 255
 6b0:	20 68       	ori	r18, 0x80	; 128
 6b2:	b2 2e       	mov	r11, r18
 6b4:	2a e0       	ldi	r18, 0x0A	; 10
 6b6:	30 e0       	ldi	r19, 0x00	; 0
 6b8:	a4 01       	movw	r20, r8
 6ba:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__ultoa_invert>
 6be:	a8 2e       	mov	r10, r24
 6c0:	a8 18       	sub	r10, r8
 6c2:	44 c0       	rjmp	.+136    	; 0x74c <vfprintf+0x290>
 6c4:	85 37       	cpi	r24, 0x75	; 117
 6c6:	29 f4       	brne	.+10     	; 0x6d2 <vfprintf+0x216>
 6c8:	2f 7e       	andi	r18, 0xEF	; 239
 6ca:	b2 2e       	mov	r11, r18
 6cc:	2a e0       	ldi	r18, 0x0A	; 10
 6ce:	30 e0       	ldi	r19, 0x00	; 0
 6d0:	25 c0       	rjmp	.+74     	; 0x71c <vfprintf+0x260>
 6d2:	f2 2f       	mov	r31, r18
 6d4:	f9 7f       	andi	r31, 0xF9	; 249
 6d6:	bf 2e       	mov	r11, r31
 6d8:	8f 36       	cpi	r24, 0x6F	; 111
 6da:	c1 f0       	breq	.+48     	; 0x70c <vfprintf+0x250>
 6dc:	18 f4       	brcc	.+6      	; 0x6e4 <vfprintf+0x228>
 6de:	88 35       	cpi	r24, 0x58	; 88
 6e0:	79 f0       	breq	.+30     	; 0x700 <vfprintf+0x244>
 6e2:	b4 c0       	rjmp	.+360    	; 0x84c <vfprintf+0x390>
 6e4:	80 37       	cpi	r24, 0x70	; 112
 6e6:	19 f0       	breq	.+6      	; 0x6ee <vfprintf+0x232>
 6e8:	88 37       	cpi	r24, 0x78	; 120
 6ea:	21 f0       	breq	.+8      	; 0x6f4 <vfprintf+0x238>
 6ec:	af c0       	rjmp	.+350    	; 0x84c <vfprintf+0x390>
 6ee:	2f 2f       	mov	r18, r31
 6f0:	20 61       	ori	r18, 0x10	; 16
 6f2:	b2 2e       	mov	r11, r18
 6f4:	b4 fe       	sbrs	r11, 4
 6f6:	0d c0       	rjmp	.+26     	; 0x712 <vfprintf+0x256>
 6f8:	8b 2d       	mov	r24, r11
 6fa:	84 60       	ori	r24, 0x04	; 4
 6fc:	b8 2e       	mov	r11, r24
 6fe:	09 c0       	rjmp	.+18     	; 0x712 <vfprintf+0x256>
 700:	24 ff       	sbrs	r18, 4
 702:	0a c0       	rjmp	.+20     	; 0x718 <vfprintf+0x25c>
 704:	9f 2f       	mov	r25, r31
 706:	96 60       	ori	r25, 0x06	; 6
 708:	b9 2e       	mov	r11, r25
 70a:	06 c0       	rjmp	.+12     	; 0x718 <vfprintf+0x25c>
 70c:	28 e0       	ldi	r18, 0x08	; 8
 70e:	30 e0       	ldi	r19, 0x00	; 0
 710:	05 c0       	rjmp	.+10     	; 0x71c <vfprintf+0x260>
 712:	20 e1       	ldi	r18, 0x10	; 16
 714:	30 e0       	ldi	r19, 0x00	; 0
 716:	02 c0       	rjmp	.+4      	; 0x71c <vfprintf+0x260>
 718:	20 e1       	ldi	r18, 0x10	; 16
 71a:	32 e0       	ldi	r19, 0x02	; 2
 71c:	f8 01       	movw	r30, r16
 71e:	b7 fe       	sbrs	r11, 7
 720:	07 c0       	rjmp	.+14     	; 0x730 <vfprintf+0x274>
 722:	60 81       	ld	r22, Z
 724:	71 81       	ldd	r23, Z+1	; 0x01
 726:	82 81       	ldd	r24, Z+2	; 0x02
 728:	93 81       	ldd	r25, Z+3	; 0x03
 72a:	0c 5f       	subi	r16, 0xFC	; 252
 72c:	1f 4f       	sbci	r17, 0xFF	; 255
 72e:	06 c0       	rjmp	.+12     	; 0x73c <vfprintf+0x280>
 730:	60 81       	ld	r22, Z
 732:	71 81       	ldd	r23, Z+1	; 0x01
 734:	80 e0       	ldi	r24, 0x00	; 0
 736:	90 e0       	ldi	r25, 0x00	; 0
 738:	0e 5f       	subi	r16, 0xFE	; 254
 73a:	1f 4f       	sbci	r17, 0xFF	; 255
 73c:	a4 01       	movw	r20, r8
 73e:	0e 94 78 04 	call	0x8f0	; 0x8f0 <__ultoa_invert>
 742:	a8 2e       	mov	r10, r24
 744:	a8 18       	sub	r10, r8
 746:	fb 2d       	mov	r31, r11
 748:	ff 77       	andi	r31, 0x7F	; 127
 74a:	bf 2e       	mov	r11, r31
 74c:	b6 fe       	sbrs	r11, 6
 74e:	0b c0       	rjmp	.+22     	; 0x766 <vfprintf+0x2aa>
 750:	2b 2d       	mov	r18, r11
 752:	2e 7f       	andi	r18, 0xFE	; 254
 754:	a5 14       	cp	r10, r5
 756:	50 f4       	brcc	.+20     	; 0x76c <vfprintf+0x2b0>
 758:	b4 fe       	sbrs	r11, 4
 75a:	0a c0       	rjmp	.+20     	; 0x770 <vfprintf+0x2b4>
 75c:	b2 fc       	sbrc	r11, 2
 75e:	08 c0       	rjmp	.+16     	; 0x770 <vfprintf+0x2b4>
 760:	2b 2d       	mov	r18, r11
 762:	2e 7e       	andi	r18, 0xEE	; 238
 764:	05 c0       	rjmp	.+10     	; 0x770 <vfprintf+0x2b4>
 766:	7a 2c       	mov	r7, r10
 768:	2b 2d       	mov	r18, r11
 76a:	03 c0       	rjmp	.+6      	; 0x772 <vfprintf+0x2b6>
 76c:	7a 2c       	mov	r7, r10
 76e:	01 c0       	rjmp	.+2      	; 0x772 <vfprintf+0x2b6>
 770:	75 2c       	mov	r7, r5
 772:	24 ff       	sbrs	r18, 4
 774:	0d c0       	rjmp	.+26     	; 0x790 <vfprintf+0x2d4>
 776:	fe 01       	movw	r30, r28
 778:	ea 0d       	add	r30, r10
 77a:	f1 1d       	adc	r31, r1
 77c:	80 81       	ld	r24, Z
 77e:	80 33       	cpi	r24, 0x30	; 48
 780:	11 f4       	brne	.+4      	; 0x786 <vfprintf+0x2ca>
 782:	29 7e       	andi	r18, 0xE9	; 233
 784:	09 c0       	rjmp	.+18     	; 0x798 <vfprintf+0x2dc>
 786:	22 ff       	sbrs	r18, 2
 788:	06 c0       	rjmp	.+12     	; 0x796 <vfprintf+0x2da>
 78a:	73 94       	inc	r7
 78c:	73 94       	inc	r7
 78e:	04 c0       	rjmp	.+8      	; 0x798 <vfprintf+0x2dc>
 790:	82 2f       	mov	r24, r18
 792:	86 78       	andi	r24, 0x86	; 134
 794:	09 f0       	breq	.+2      	; 0x798 <vfprintf+0x2dc>
 796:	73 94       	inc	r7
 798:	23 fd       	sbrc	r18, 3
 79a:	13 c0       	rjmp	.+38     	; 0x7c2 <vfprintf+0x306>
 79c:	20 ff       	sbrs	r18, 0
 79e:	06 c0       	rjmp	.+12     	; 0x7ac <vfprintf+0x2f0>
 7a0:	5a 2c       	mov	r5, r10
 7a2:	73 14       	cp	r7, r3
 7a4:	18 f4       	brcc	.+6      	; 0x7ac <vfprintf+0x2f0>
 7a6:	53 0c       	add	r5, r3
 7a8:	57 18       	sub	r5, r7
 7aa:	73 2c       	mov	r7, r3
 7ac:	73 14       	cp	r7, r3
 7ae:	68 f4       	brcc	.+26     	; 0x7ca <vfprintf+0x30e>
 7b0:	b7 01       	movw	r22, r14
 7b2:	80 e2       	ldi	r24, 0x20	; 32
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	2c 87       	std	Y+12, r18	; 0x0c
 7b8:	0e 94 46 04 	call	0x88c	; 0x88c <fputc>
 7bc:	73 94       	inc	r7
 7be:	2c 85       	ldd	r18, Y+12	; 0x0c
 7c0:	f5 cf       	rjmp	.-22     	; 0x7ac <vfprintf+0x2f0>
 7c2:	73 14       	cp	r7, r3
 7c4:	10 f4       	brcc	.+4      	; 0x7ca <vfprintf+0x30e>
 7c6:	37 18       	sub	r3, r7
 7c8:	01 c0       	rjmp	.+2      	; 0x7cc <vfprintf+0x310>
 7ca:	31 2c       	mov	r3, r1
 7cc:	24 ff       	sbrs	r18, 4
 7ce:	12 c0       	rjmp	.+36     	; 0x7f4 <vfprintf+0x338>
 7d0:	b7 01       	movw	r22, r14
 7d2:	80 e3       	ldi	r24, 0x30	; 48
 7d4:	90 e0       	ldi	r25, 0x00	; 0
 7d6:	2c 87       	std	Y+12, r18	; 0x0c
 7d8:	0e 94 46 04 	call	0x88c	; 0x88c <fputc>
 7dc:	2c 85       	ldd	r18, Y+12	; 0x0c
 7de:	22 ff       	sbrs	r18, 2
 7e0:	17 c0       	rjmp	.+46     	; 0x810 <vfprintf+0x354>
 7e2:	21 ff       	sbrs	r18, 1
 7e4:	03 c0       	rjmp	.+6      	; 0x7ec <vfprintf+0x330>
 7e6:	88 e5       	ldi	r24, 0x58	; 88
 7e8:	90 e0       	ldi	r25, 0x00	; 0
 7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <vfprintf+0x334>
 7ec:	88 e7       	ldi	r24, 0x78	; 120
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	b7 01       	movw	r22, r14
 7f2:	0c c0       	rjmp	.+24     	; 0x80c <vfprintf+0x350>
 7f4:	82 2f       	mov	r24, r18
 7f6:	86 78       	andi	r24, 0x86	; 134
 7f8:	59 f0       	breq	.+22     	; 0x810 <vfprintf+0x354>
 7fa:	21 fd       	sbrc	r18, 1
 7fc:	02 c0       	rjmp	.+4      	; 0x802 <vfprintf+0x346>
 7fe:	80 e2       	ldi	r24, 0x20	; 32
 800:	01 c0       	rjmp	.+2      	; 0x804 <vfprintf+0x348>
 802:	8b e2       	ldi	r24, 0x2B	; 43
 804:	27 fd       	sbrc	r18, 7
 806:	8d e2       	ldi	r24, 0x2D	; 45
 808:	b7 01       	movw	r22, r14
 80a:	90 e0       	ldi	r25, 0x00	; 0
 80c:	0e 94 46 04 	call	0x88c	; 0x88c <fputc>
 810:	a5 14       	cp	r10, r5
 812:	38 f4       	brcc	.+14     	; 0x822 <vfprintf+0x366>
 814:	b7 01       	movw	r22, r14
 816:	80 e3       	ldi	r24, 0x30	; 48
 818:	90 e0       	ldi	r25, 0x00	; 0
 81a:	0e 94 46 04 	call	0x88c	; 0x88c <fputc>
 81e:	5a 94       	dec	r5
 820:	f7 cf       	rjmp	.-18     	; 0x810 <vfprintf+0x354>
 822:	aa 94       	dec	r10
 824:	f4 01       	movw	r30, r8
 826:	ea 0d       	add	r30, r10
 828:	f1 1d       	adc	r31, r1
 82a:	80 81       	ld	r24, Z
 82c:	b7 01       	movw	r22, r14
 82e:	90 e0       	ldi	r25, 0x00	; 0
 830:	0e 94 46 04 	call	0x88c	; 0x88c <fputc>
 834:	a1 10       	cpse	r10, r1
 836:	f5 cf       	rjmp	.-22     	; 0x822 <vfprintf+0x366>
 838:	33 20       	and	r3, r3
 83a:	09 f4       	brne	.+2      	; 0x83e <vfprintf+0x382>
 83c:	51 ce       	rjmp	.-862    	; 0x4e0 <vfprintf+0x24>
 83e:	b7 01       	movw	r22, r14
 840:	80 e2       	ldi	r24, 0x20	; 32
 842:	90 e0       	ldi	r25, 0x00	; 0
 844:	0e 94 46 04 	call	0x88c	; 0x88c <fputc>
 848:	3a 94       	dec	r3
 84a:	f6 cf       	rjmp	.-20     	; 0x838 <vfprintf+0x37c>
 84c:	f7 01       	movw	r30, r14
 84e:	86 81       	ldd	r24, Z+6	; 0x06
 850:	97 81       	ldd	r25, Z+7	; 0x07
 852:	02 c0       	rjmp	.+4      	; 0x858 <vfprintf+0x39c>
 854:	8f ef       	ldi	r24, 0xFF	; 255
 856:	9f ef       	ldi	r25, 0xFF	; 255
 858:	2c 96       	adiw	r28, 0x0c	; 12
 85a:	e2 e1       	ldi	r30, 0x12	; 18
 85c:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <__epilogue_restores__>

00000860 <strnlen_P>:
 860:	fc 01       	movw	r30, r24
 862:	05 90       	lpm	r0, Z+
 864:	61 50       	subi	r22, 0x01	; 1
 866:	70 40       	sbci	r23, 0x00	; 0
 868:	01 10       	cpse	r0, r1
 86a:	d8 f7       	brcc	.-10     	; 0x862 <strnlen_P+0x2>
 86c:	80 95       	com	r24
 86e:	90 95       	com	r25
 870:	8e 0f       	add	r24, r30
 872:	9f 1f       	adc	r25, r31
 874:	08 95       	ret

00000876 <strnlen>:
 876:	fc 01       	movw	r30, r24
 878:	61 50       	subi	r22, 0x01	; 1
 87a:	70 40       	sbci	r23, 0x00	; 0
 87c:	01 90       	ld	r0, Z+
 87e:	01 10       	cpse	r0, r1
 880:	d8 f7       	brcc	.-10     	; 0x878 <strnlen+0x2>
 882:	80 95       	com	r24
 884:	90 95       	com	r25
 886:	8e 0f       	add	r24, r30
 888:	9f 1f       	adc	r25, r31
 88a:	08 95       	ret

0000088c <fputc>:
 88c:	0f 93       	push	r16
 88e:	1f 93       	push	r17
 890:	cf 93       	push	r28
 892:	df 93       	push	r29
 894:	18 2f       	mov	r17, r24
 896:	09 2f       	mov	r16, r25
 898:	eb 01       	movw	r28, r22
 89a:	8b 81       	ldd	r24, Y+3	; 0x03
 89c:	81 fd       	sbrc	r24, 1
 89e:	03 c0       	rjmp	.+6      	; 0x8a6 <fputc+0x1a>
 8a0:	8f ef       	ldi	r24, 0xFF	; 255
 8a2:	9f ef       	ldi	r25, 0xFF	; 255
 8a4:	20 c0       	rjmp	.+64     	; 0x8e6 <fputc+0x5a>
 8a6:	82 ff       	sbrs	r24, 2
 8a8:	10 c0       	rjmp	.+32     	; 0x8ca <fputc+0x3e>
 8aa:	4e 81       	ldd	r20, Y+6	; 0x06
 8ac:	5f 81       	ldd	r21, Y+7	; 0x07
 8ae:	2c 81       	ldd	r18, Y+4	; 0x04
 8b0:	3d 81       	ldd	r19, Y+5	; 0x05
 8b2:	42 17       	cp	r20, r18
 8b4:	53 07       	cpc	r21, r19
 8b6:	7c f4       	brge	.+30     	; 0x8d6 <fputc+0x4a>
 8b8:	e8 81       	ld	r30, Y
 8ba:	f9 81       	ldd	r31, Y+1	; 0x01
 8bc:	9f 01       	movw	r18, r30
 8be:	2f 5f       	subi	r18, 0xFF	; 255
 8c0:	3f 4f       	sbci	r19, 0xFF	; 255
 8c2:	39 83       	std	Y+1, r19	; 0x01
 8c4:	28 83       	st	Y, r18
 8c6:	10 83       	st	Z, r17
 8c8:	06 c0       	rjmp	.+12     	; 0x8d6 <fputc+0x4a>
 8ca:	e8 85       	ldd	r30, Y+8	; 0x08
 8cc:	f9 85       	ldd	r31, Y+9	; 0x09
 8ce:	81 2f       	mov	r24, r17
 8d0:	09 95       	icall
 8d2:	89 2b       	or	r24, r25
 8d4:	29 f7       	brne	.-54     	; 0x8a0 <fputc+0x14>
 8d6:	2e 81       	ldd	r18, Y+6	; 0x06
 8d8:	3f 81       	ldd	r19, Y+7	; 0x07
 8da:	2f 5f       	subi	r18, 0xFF	; 255
 8dc:	3f 4f       	sbci	r19, 0xFF	; 255
 8de:	3f 83       	std	Y+7, r19	; 0x07
 8e0:	2e 83       	std	Y+6, r18	; 0x06
 8e2:	81 2f       	mov	r24, r17
 8e4:	90 2f       	mov	r25, r16
 8e6:	df 91       	pop	r29
 8e8:	cf 91       	pop	r28
 8ea:	1f 91       	pop	r17
 8ec:	0f 91       	pop	r16
 8ee:	08 95       	ret

000008f0 <__ultoa_invert>:
 8f0:	fa 01       	movw	r30, r20
 8f2:	aa 27       	eor	r26, r26
 8f4:	28 30       	cpi	r18, 0x08	; 8
 8f6:	51 f1       	breq	.+84     	; 0x94c <__ultoa_invert+0x5c>
 8f8:	20 31       	cpi	r18, 0x10	; 16
 8fa:	81 f1       	breq	.+96     	; 0x95c <__ultoa_invert+0x6c>
 8fc:	e8 94       	clt
 8fe:	6f 93       	push	r22
 900:	6e 7f       	andi	r22, 0xFE	; 254
 902:	6e 5f       	subi	r22, 0xFE	; 254
 904:	7f 4f       	sbci	r23, 0xFF	; 255
 906:	8f 4f       	sbci	r24, 0xFF	; 255
 908:	9f 4f       	sbci	r25, 0xFF	; 255
 90a:	af 4f       	sbci	r26, 0xFF	; 255
 90c:	b1 e0       	ldi	r27, 0x01	; 1
 90e:	3e d0       	rcall	.+124    	; 0x98c <__ultoa_invert+0x9c>
 910:	b4 e0       	ldi	r27, 0x04	; 4
 912:	3c d0       	rcall	.+120    	; 0x98c <__ultoa_invert+0x9c>
 914:	67 0f       	add	r22, r23
 916:	78 1f       	adc	r23, r24
 918:	89 1f       	adc	r24, r25
 91a:	9a 1f       	adc	r25, r26
 91c:	a1 1d       	adc	r26, r1
 91e:	68 0f       	add	r22, r24
 920:	79 1f       	adc	r23, r25
 922:	8a 1f       	adc	r24, r26
 924:	91 1d       	adc	r25, r1
 926:	a1 1d       	adc	r26, r1
 928:	6a 0f       	add	r22, r26
 92a:	71 1d       	adc	r23, r1
 92c:	81 1d       	adc	r24, r1
 92e:	91 1d       	adc	r25, r1
 930:	a1 1d       	adc	r26, r1
 932:	20 d0       	rcall	.+64     	; 0x974 <__ultoa_invert+0x84>
 934:	09 f4       	brne	.+2      	; 0x938 <__ultoa_invert+0x48>
 936:	68 94       	set
 938:	3f 91       	pop	r19
 93a:	2a e0       	ldi	r18, 0x0A	; 10
 93c:	26 9f       	mul	r18, r22
 93e:	11 24       	eor	r1, r1
 940:	30 19       	sub	r19, r0
 942:	30 5d       	subi	r19, 0xD0	; 208
 944:	31 93       	st	Z+, r19
 946:	de f6       	brtc	.-74     	; 0x8fe <__ultoa_invert+0xe>
 948:	cf 01       	movw	r24, r30
 94a:	08 95       	ret
 94c:	46 2f       	mov	r20, r22
 94e:	47 70       	andi	r20, 0x07	; 7
 950:	40 5d       	subi	r20, 0xD0	; 208
 952:	41 93       	st	Z+, r20
 954:	b3 e0       	ldi	r27, 0x03	; 3
 956:	0f d0       	rcall	.+30     	; 0x976 <__ultoa_invert+0x86>
 958:	c9 f7       	brne	.-14     	; 0x94c <__ultoa_invert+0x5c>
 95a:	f6 cf       	rjmp	.-20     	; 0x948 <__ultoa_invert+0x58>
 95c:	46 2f       	mov	r20, r22
 95e:	4f 70       	andi	r20, 0x0F	; 15
 960:	40 5d       	subi	r20, 0xD0	; 208
 962:	4a 33       	cpi	r20, 0x3A	; 58
 964:	18 f0       	brcs	.+6      	; 0x96c <__ultoa_invert+0x7c>
 966:	49 5d       	subi	r20, 0xD9	; 217
 968:	31 fd       	sbrc	r19, 1
 96a:	40 52       	subi	r20, 0x20	; 32
 96c:	41 93       	st	Z+, r20
 96e:	02 d0       	rcall	.+4      	; 0x974 <__ultoa_invert+0x84>
 970:	a9 f7       	brne	.-22     	; 0x95c <__ultoa_invert+0x6c>
 972:	ea cf       	rjmp	.-44     	; 0x948 <__ultoa_invert+0x58>
 974:	b4 e0       	ldi	r27, 0x04	; 4
 976:	a6 95       	lsr	r26
 978:	97 95       	ror	r25
 97a:	87 95       	ror	r24
 97c:	77 95       	ror	r23
 97e:	67 95       	ror	r22
 980:	ba 95       	dec	r27
 982:	c9 f7       	brne	.-14     	; 0x976 <__ultoa_invert+0x86>
 984:	00 97       	sbiw	r24, 0x00	; 0
 986:	61 05       	cpc	r22, r1
 988:	71 05       	cpc	r23, r1
 98a:	08 95       	ret
 98c:	9b 01       	movw	r18, r22
 98e:	ac 01       	movw	r20, r24
 990:	0a 2e       	mov	r0, r26
 992:	06 94       	lsr	r0
 994:	57 95       	ror	r21
 996:	47 95       	ror	r20
 998:	37 95       	ror	r19
 99a:	27 95       	ror	r18
 99c:	ba 95       	dec	r27
 99e:	c9 f7       	brne	.-14     	; 0x992 <__ultoa_invert+0xa2>
 9a0:	62 0f       	add	r22, r18
 9a2:	73 1f       	adc	r23, r19
 9a4:	84 1f       	adc	r24, r20
 9a6:	95 1f       	adc	r25, r21
 9a8:	a0 1d       	adc	r26, r0
 9aa:	08 95       	ret

000009ac <__prologue_saves__>:
 9ac:	2f 92       	push	r2
 9ae:	3f 92       	push	r3
 9b0:	4f 92       	push	r4
 9b2:	5f 92       	push	r5
 9b4:	6f 92       	push	r6
 9b6:	7f 92       	push	r7
 9b8:	8f 92       	push	r8
 9ba:	9f 92       	push	r9
 9bc:	af 92       	push	r10
 9be:	bf 92       	push	r11
 9c0:	cf 92       	push	r12
 9c2:	df 92       	push	r13
 9c4:	ef 92       	push	r14
 9c6:	ff 92       	push	r15
 9c8:	0f 93       	push	r16
 9ca:	1f 93       	push	r17
 9cc:	cf 93       	push	r28
 9ce:	df 93       	push	r29
 9d0:	cd b7       	in	r28, 0x3d	; 61
 9d2:	de b7       	in	r29, 0x3e	; 62
 9d4:	ca 1b       	sub	r28, r26
 9d6:	db 0b       	sbc	r29, r27
 9d8:	0f b6       	in	r0, 0x3f	; 63
 9da:	f8 94       	cli
 9dc:	de bf       	out	0x3e, r29	; 62
 9de:	0f be       	out	0x3f, r0	; 63
 9e0:	cd bf       	out	0x3d, r28	; 61
 9e2:	09 94       	ijmp

000009e4 <__epilogue_restores__>:
 9e4:	2a 88       	ldd	r2, Y+18	; 0x12
 9e6:	39 88       	ldd	r3, Y+17	; 0x11
 9e8:	48 88       	ldd	r4, Y+16	; 0x10
 9ea:	5f 84       	ldd	r5, Y+15	; 0x0f
 9ec:	6e 84       	ldd	r6, Y+14	; 0x0e
 9ee:	7d 84       	ldd	r7, Y+13	; 0x0d
 9f0:	8c 84       	ldd	r8, Y+12	; 0x0c
 9f2:	9b 84       	ldd	r9, Y+11	; 0x0b
 9f4:	aa 84       	ldd	r10, Y+10	; 0x0a
 9f6:	b9 84       	ldd	r11, Y+9	; 0x09
 9f8:	c8 84       	ldd	r12, Y+8	; 0x08
 9fa:	df 80       	ldd	r13, Y+7	; 0x07
 9fc:	ee 80       	ldd	r14, Y+6	; 0x06
 9fe:	fd 80       	ldd	r15, Y+5	; 0x05
 a00:	0c 81       	ldd	r16, Y+4	; 0x04
 a02:	1b 81       	ldd	r17, Y+3	; 0x03
 a04:	aa 81       	ldd	r26, Y+2	; 0x02
 a06:	b9 81       	ldd	r27, Y+1	; 0x01
 a08:	ce 0f       	add	r28, r30
 a0a:	d1 1d       	adc	r29, r1
 a0c:	0f b6       	in	r0, 0x3f	; 63
 a0e:	f8 94       	cli
 a10:	de bf       	out	0x3e, r29	; 62
 a12:	0f be       	out	0x3f, r0	; 63
 a14:	cd bf       	out	0x3d, r28	; 61
 a16:	ed 01       	movw	r28, r26
 a18:	08 95       	ret

00000a1a <_exit>:
 a1a:	f8 94       	cli

00000a1c <__stop_program>:
 a1c:	ff cf       	rjmp	.-2      	; 0xa1c <__stop_program>
