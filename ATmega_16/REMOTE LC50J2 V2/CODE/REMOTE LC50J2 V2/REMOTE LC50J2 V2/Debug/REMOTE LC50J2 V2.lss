
REMOTE LC50J2 V2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  000007aa  0000083e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800064  00800064  00000842  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000842  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  0000089e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000003cd  00000000  00000000  000008e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001ec  00000000  00000000  00000cb3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000021e  00000000  00000000  00000e9f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000009c  00000000  00000000  000010c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001ec  00000000  00000000  0000115c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000379  00000000  00000000  00001348  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000016c1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ea       	ldi	r30, 0xAA	; 170
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a4 e6       	ldi	r26, 0x64	; 100
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 36       	cpi	r26, 0x6C	; 108
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 db 00 	call	0x1b6	; 0x1b6 <main>
  8a:	0c 94 d3 03 	jmp	0x7a6	; 0x7a6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <putChar_UART>:
void putChar_UART(int kitu)
{
	while (inbit(UCSRA,UDRE)==0); //cho den khi bit UDRE=1 Neu = 1 thi viet code vao
  92:	5d 9b       	sbis	0x0b, 5	; 11
  94:	fe cf       	rjmp	.-4      	; 0x92 <putChar_UART>
	UDR=kitu;
  96:	8c b9       	out	0x0c, r24	; 12
  98:	08 95       	ret

0000009a <print_UART>:
}
void print_UART(char* str)//******__HIEN THI CHUOI KI TU__*********************
{
  9a:	cf 93       	push	r28
  9c:	df 93       	push	r29
  9e:	ec 01       	movw	r28, r24
	int i;
	for (i=0; str[i]!=0; i++) 
  a0:	88 81       	ld	r24, Y
  a2:	88 23       	and	r24, r24
  a4:	39 f0       	breq	.+14     	; 0xb4 <print_UART+0x1a>
  a6:	21 96       	adiw	r28, 0x01	; 1
	putChar_UART(str[i]);
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	0e 94 49 00 	call	0x92	; 0x92 <putChar_UART>
	UDR=kitu;
}
void print_UART(char* str)//******__HIEN THI CHUOI KI TU__*********************
{
	int i;
	for (i=0; str[i]!=0; i++) 
  ae:	89 91       	ld	r24, Y+
  b0:	81 11       	cpse	r24, r1
  b2:	fa cf       	rjmp	.-12     	; 0xa8 <print_UART+0xe>
	putChar_UART(str[i]);
}
  b4:	df 91       	pop	r29
  b6:	cf 91       	pop	r28
  b8:	08 95       	ret

000000ba <vietso_UART>:
void vietso_UART(int num)
{
  ba:	0f 93       	push	r16
  bc:	1f 93       	push	r17
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
  c2:	00 d0       	rcall	.+0      	; 0xc4 <vietso_UART+0xa>
  c4:	00 d0       	rcall	.+0      	; 0xc6 <vietso_UART+0xc>
  c6:	1f 92       	push	r1
  c8:	cd b7       	in	r28, 0x3d	; 61
  ca:	de b7       	in	r29, 0x3e	; 62
	char dis[5];
	sprintf(dis, "%i", num);
  cc:	9f 93       	push	r25
  ce:	8f 93       	push	r24
  d0:	80 e6       	ldi	r24, 0x60	; 96
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	9f 93       	push	r25
  d6:	8f 93       	push	r24
  d8:	8e 01       	movw	r16, r28
  da:	0f 5f       	subi	r16, 0xFF	; 255
  dc:	1f 4f       	sbci	r17, 0xFF	; 255
  de:	1f 93       	push	r17
  e0:	0f 93       	push	r16
  e2:	0e 94 02 01 	call	0x204	; 0x204 <sprintf>
	print_UART(dis);
  e6:	c8 01       	movw	r24, r16
  e8:	0e 94 4d 00 	call	0x9a	; 0x9a <print_UART>
  ec:	0f 90       	pop	r0
  ee:	0f 90       	pop	r0
  f0:	0f 90       	pop	r0
  f2:	0f 90       	pop	r0
  f4:	0f 90       	pop	r0
  f6:	0f 90       	pop	r0
  f8:	0f 90       	pop	r0
  fa:	0f 90       	pop	r0
  fc:	0f 90       	pop	r0
  fe:	0f 90       	pop	r0
 100:	0f 90       	pop	r0
 102:	df 91       	pop	r29
 104:	cf 91       	pop	r28
 106:	1f 91       	pop	r17
 108:	0f 91       	pop	r16
 10a:	08 95       	ret

0000010c <check_start>:
int x=-1,n,y;
unsigned long int dataa;

int check_start()
{
	if(inbit(DATA_PIN,DATA)==0)						 // Neu co canh xuong cua tin hieu
 10c:	82 99       	sbic	0x10, 2	; 16
 10e:	1f c0       	rjmp	.+62     	; 0x14e <check_start+0x42>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 110:	87 ee       	ldi	r24, 0xE7	; 231
 112:	93 e0       	ldi	r25, 0x03	; 3
 114:	01 97       	sbiw	r24, 0x01	; 1
 116:	f1 f7       	brne	.-4      	; 0x114 <check_start+0x8>
 118:	00 c0       	rjmp	.+0      	; 0x11a <check_start+0xe>
 11a:	00 00       	nop
	{
		_delay_us(500);										 // Delay de chong nhieu
		if(inbit(DATA_PIN,DATA)==0)					 // Neu dung la co canh xuong cua tin hieu
 11c:	20 b3       	in	r18, 0x10	; 16
 11e:	22 fb       	bst	r18, 2
 120:	88 27       	eor	r24, r24
 122:	80 f9       	bld	r24, 0
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	22 fd       	sbrc	r18, 2
 128:	12 c0       	rjmp	.+36     	; 0x14e <check_start+0x42>
 12a:	2d e2       	ldi	r18, 0x2D	; 45
 12c:	30 e0       	ldi	r19, 0x00	; 0
 12e:	ef e8       	ldi	r30, 0x8F	; 143
 130:	f1 e0       	ldi	r31, 0x01	; 1
 132:	31 97       	sbiw	r30, 0x01	; 1
 134:	f1 f7       	brne	.-4      	; 0x132 <check_start+0x26>
 136:	00 c0       	rjmp	.+0      	; 0x138 <check_start+0x2c>
 138:	00 00       	nop
		{
			for(int i=0;i<45;i++)								 // Chia nho xung START thanh 40 doan, moi doan dai 200us
			{
				_delay_us(200);
				if(inbit(DATA_PIN,DATA)==1)
 13a:	82 99       	sbic	0x10, 2	; 16
 13c:	0b c0       	rjmp	.+22     	; 0x154 <check_start+0x48>
 13e:	21 50       	subi	r18, 0x01	; 1
 140:	31 09       	sbc	r19, r1
	if(inbit(DATA_PIN,DATA)==0)						 // Neu co canh xuong cua tin hieu
	{
		_delay_us(500);										 // Delay de chong nhieu
		if(inbit(DATA_PIN,DATA)==0)					 // Neu dung la co canh xuong cua tin hieu
		{
			for(int i=0;i<45;i++)								 // Chia nho xung START thanh 40 doan, moi doan dai 200us
 142:	21 15       	cp	r18, r1
 144:	31 05       	cpc	r19, r1
 146:	99 f7       	brne	.-26     	; 0x12e <check_start+0x22>
			{
				_delay_us(200);
				if(inbit(DATA_PIN,DATA)==1)
				return 0;									 // Neu tin hieu len muc cao (1) --> khong phai xung START
			}
			while(inbit(DATA_PIN,DATA)==1);
 148:	82 99       	sbic	0x10, 2	; 16
 14a:	fe cf       	rjmp	.-4      	; 0x148 <check_start+0x3c>
 14c:	01 c0       	rjmp	.+2      	; 0x150 <check_start+0x44>
 14e:	08 95       	ret
			return 1;										 // Dung la xung start
 150:	81 e0       	ldi	r24, 0x01	; 1
 152:	90 e0       	ldi	r25, 0x00	; 0
		}
		
	}
}
 154:	08 95       	ret

00000156 <infr_sensor>:
unsigned long int infr_sensor()
{
	unsigned char i;
	unsigned int Data_Infr;
	Data_Infr=0;
	if(check_start())                  // Neu dung xung START
 156:	0e 94 86 00 	call	0x10c	; 0x10c <check_start>
 15a:	89 2b       	or	r24, r25
 15c:	39 f1       	breq	.+78     	; 0x1ac <infr_sensor+0x56>
	{
		while(inbit(DATA_PIN,DATA)==1);          // Cho het bit 1 tiep theo
 15e:	82 99       	sbic	0x10, 2	; 16
 160:	fe cf       	rjmp	.-4      	; 0x15e <infr_sensor+0x8>
		while(inbit(DATA_PIN,DATA)==0);          // Cho het bit 0 tiep theo
 162:	82 9b       	sbis	0x10, 2	; 16
 164:	fe cf       	rjmp	.-4      	; 0x162 <infr_sensor+0xc>
 166:	88 e1       	ldi	r24, 0x18	; 24
 168:	60 e0       	ldi	r22, 0x00	; 0
 16a:	70 e0       	ldi	r23, 0x00	; 0
 16c:	eb ed       	ldi	r30, 0xDB	; 219
 16e:	f5 e0       	ldi	r31, 0x05	; 5
 170:	31 97       	sbiw	r30, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <infr_sensor+0x1a>
 174:	00 c0       	rjmp	.+0      	; 0x176 <infr_sensor+0x20>
 176:	00 00       	nop
		for(i=0;i<24;i++)             // Lay 24 bit du lieu (bao gom 8 bit 0 va 8 bit 1 dau tien sau xung start)
		{
			//while(inbit(DATA_PORT,DATA_PIN)==0);
			_delay_us(750);           // Delay 750us de kiem tra bit
			if(inbit(DATA_PIN,DATA)==0) Data_Infr=Data_Infr*2 + 1;
 178:	82 99       	sbic	0x10, 2	; 16
 17a:	04 c0       	rjmp	.+8      	; 0x184 <infr_sensor+0x2e>
 17c:	66 0f       	add	r22, r22
 17e:	77 1f       	adc	r23, r23
 180:	6f 5f       	subi	r22, 0xFF	; 255
 182:	7f 4f       	sbci	r23, 0xFF	; 255
			if(inbit(DATA_PIN,DATA)==1) Data_Infr=Data_Infr*2;
 184:	82 9b       	sbis	0x10, 2	; 16
 186:	02 c0       	rjmp	.+4      	; 0x18c <infr_sensor+0x36>
 188:	66 0f       	add	r22, r22
 18a:	77 1f       	adc	r23, r23
			while(inbit(DATA_PIN,DATA)==1);     // cho canh len
 18c:	82 99       	sbic	0x10, 2	; 16
 18e:	fe cf       	rjmp	.-4      	; 0x18c <infr_sensor+0x36>
			while(inbit(DATA_PIN,DATA)==0);     // cho canh len
 190:	82 9b       	sbis	0x10, 2	; 16
 192:	fe cf       	rjmp	.-4      	; 0x190 <infr_sensor+0x3a>
 194:	81 50       	subi	r24, 0x01	; 1
	Data_Infr=0;
	if(check_start())                  // Neu dung xung START
	{
		while(inbit(DATA_PIN,DATA)==1);          // Cho het bit 1 tiep theo
		while(inbit(DATA_PIN,DATA)==0);          // Cho het bit 0 tiep theo
		for(i=0;i<24;i++)             // Lay 24 bit du lieu (bao gom 8 bit 0 va 8 bit 1 dau tien sau xung start)
 196:	51 f7       	brne	.-44     	; 0x16c <infr_sensor+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 198:	ff ef       	ldi	r31, 0xFF	; 255
 19a:	25 ea       	ldi	r18, 0xA5	; 165
 19c:	8e e0       	ldi	r24, 0x0E	; 14
 19e:	f1 50       	subi	r31, 0x01	; 1
 1a0:	20 40       	sbci	r18, 0x00	; 0
 1a2:	80 40       	sbci	r24, 0x00	; 0
 1a4:	e1 f7       	brne	.-8      	; 0x19e <infr_sensor+0x48>
 1a6:	00 c0       	rjmp	.+0      	; 0x1a8 <infr_sensor+0x52>
 1a8:	00 00       	nop
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <infr_sensor+0x5a>
//  Ham doc ma cua cac kenh
unsigned long int infr_sensor()
{
	unsigned char i;
	unsigned int Data_Infr;
	Data_Infr=0;
 1ac:	60 e0       	ldi	r22, 0x00	; 0
 1ae:	70 e0       	ldi	r23, 0x00	; 0
			while(inbit(DATA_PIN,DATA)==1);     // cho canh len
			while(inbit(DATA_PIN,DATA)==0);     // cho canh len
		}
		_delay_ms(600);                // Cho het tin hieu (chong nhieu)
	}
	return Data_Infr;                  // Gia tri ma kenh tra ve
 1b0:	80 e0       	ldi	r24, 0x00	; 0
 1b2:	90 e0       	ldi	r25, 0x00	; 0
}
 1b4:	08 95       	ret

000001b6 <main>:
int main(void)
{
	
	DDRA=0xff;
 1b6:	8f ef       	ldi	r24, 0xFF	; 255
 1b8:	8a bb       	out	0x1a, r24	; 26
	DDRC=0xff;
 1ba:	84 bb       	out	0x14, r24	; 20
	DDRB=0xff;
 1bc:	87 bb       	out	0x17, r24	; 23
	DDRD=0x00;
 1be:	11 ba       	out	0x11, r1	; 17
	PORTD=0xff;
 1c0:	82 bb       	out	0x12, r24	; 18
	PORTB=0x00;
 1c2:	18 ba       	out	0x18, r1	; 24
	//UART
	UBRRH=0;		//set toc do truyen baud
 1c4:	10 bc       	out	0x20, r1	; 32
	UBRRL=51;
 1c6:	83 e3       	ldi	r24, 0x33	; 51
 1c8:	89 b9       	out	0x09, r24	; 9
	UCSRC=(1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0);
 1ca:	86 e8       	ldi	r24, 0x86	; 134
 1cc:	80 bd       	out	0x20, r24	; 32
	UCSRB=(1<<TXEN)|(1<<RXEN)|(1<<RXCIE);
 1ce:	88 e9       	ldi	r24, 0x98	; 152
 1d0:	8a b9       	out	0x0a, r24	; 10
	//NGAT NGOAI
	setb(PORTD,0);
 1d2:	90 9a       	sbi	0x12, 0	; 18
	MCUCR=(1<<ISC01)|(1<<ISC11);
 1d4:	8a e0       	ldi	r24, 0x0A	; 10
 1d6:	85 bf       	out	0x35, r24	; 53
	GICR=(1<<INT0)|(1<<INT1);
 1d8:	80 ec       	ldi	r24, 0xC0	; 192
 1da:	8b bf       	out	0x3b, r24	; 59
	sei();
 1dc:	78 94       	sei
	while(1)
	{
		dataa = infr_sensor();    // Gan ma cua kenh vao bien Data 
 1de:	0e 94 ab 00 	call	0x156	; 0x156 <infr_sensor>
 1e2:	60 93 66 00 	sts	0x0066, r22
 1e6:	70 93 67 00 	sts	0x0067, r23
 1ea:	80 93 68 00 	sts	0x0068, r24
 1ee:	90 93 69 00 	sts	0x0069, r25

									//Ham hien thi gia tri ma cua cac kenh len LCD1602
		if(dataa!=0)
 1f2:	61 15       	cp	r22, r1
 1f4:	71 05       	cpc	r23, r1
 1f6:	81 05       	cpc	r24, r1
 1f8:	91 05       	cpc	r25, r1
 1fa:	89 f3       	breq	.-30     	; 0x1de <main+0x28>
		{
			vietso_UART(dataa);
 1fc:	cb 01       	movw	r24, r22
 1fe:	0e 94 5d 00 	call	0xba	; 0xba <vietso_UART>
 202:	ed cf       	rjmp	.-38     	; 0x1de <main+0x28>

00000204 <sprintf>:
 204:	ae e0       	ldi	r26, 0x0E	; 14
 206:	b0 e0       	ldi	r27, 0x00	; 0
 208:	e8 e0       	ldi	r30, 0x08	; 8
 20a:	f1 e0       	ldi	r31, 0x01	; 1
 20c:	0c 94 aa 03 	jmp	0x754	; 0x754 <__prologue_saves__+0x1c>
 210:	0d 89       	ldd	r16, Y+21	; 0x15
 212:	1e 89       	ldd	r17, Y+22	; 0x16
 214:	86 e0       	ldi	r24, 0x06	; 6
 216:	8c 83       	std	Y+4, r24	; 0x04
 218:	1a 83       	std	Y+2, r17	; 0x02
 21a:	09 83       	std	Y+1, r16	; 0x01
 21c:	8f ef       	ldi	r24, 0xFF	; 255
 21e:	9f e7       	ldi	r25, 0x7F	; 127
 220:	9e 83       	std	Y+6, r25	; 0x06
 222:	8d 83       	std	Y+5, r24	; 0x05
 224:	ae 01       	movw	r20, r28
 226:	47 5e       	subi	r20, 0xE7	; 231
 228:	5f 4f       	sbci	r21, 0xFF	; 255
 22a:	6f 89       	ldd	r22, Y+23	; 0x17
 22c:	78 8d       	ldd	r23, Y+24	; 0x18
 22e:	ce 01       	movw	r24, r28
 230:	01 96       	adiw	r24, 0x01	; 1
 232:	0e 94 24 01 	call	0x248	; 0x248 <vfprintf>
 236:	ef 81       	ldd	r30, Y+7	; 0x07
 238:	f8 85       	ldd	r31, Y+8	; 0x08
 23a:	e0 0f       	add	r30, r16
 23c:	f1 1f       	adc	r31, r17
 23e:	10 82       	st	Z, r1
 240:	2e 96       	adiw	r28, 0x0e	; 14
 242:	e4 e0       	ldi	r30, 0x04	; 4
 244:	0c 94 c6 03 	jmp	0x78c	; 0x78c <__epilogue_restores__+0x1c>

00000248 <vfprintf>:
 248:	ac e0       	ldi	r26, 0x0C	; 12
 24a:	b0 e0       	ldi	r27, 0x00	; 0
 24c:	ea e2       	ldi	r30, 0x2A	; 42
 24e:	f1 e0       	ldi	r31, 0x01	; 1
 250:	0c 94 9c 03 	jmp	0x738	; 0x738 <__prologue_saves__>
 254:	7c 01       	movw	r14, r24
 256:	6b 01       	movw	r12, r22
 258:	8a 01       	movw	r16, r20
 25a:	fc 01       	movw	r30, r24
 25c:	17 82       	std	Z+7, r1	; 0x07
 25e:	16 82       	std	Z+6, r1	; 0x06
 260:	83 81       	ldd	r24, Z+3	; 0x03
 262:	81 ff       	sbrs	r24, 1
 264:	bd c1       	rjmp	.+890    	; 0x5e0 <__stack+0x181>
 266:	ce 01       	movw	r24, r28
 268:	01 96       	adiw	r24, 0x01	; 1
 26a:	4c 01       	movw	r8, r24
 26c:	f7 01       	movw	r30, r14
 26e:	93 81       	ldd	r25, Z+3	; 0x03
 270:	f6 01       	movw	r30, r12
 272:	93 fd       	sbrc	r25, 3
 274:	85 91       	lpm	r24, Z+
 276:	93 ff       	sbrs	r25, 3
 278:	81 91       	ld	r24, Z+
 27a:	6f 01       	movw	r12, r30
 27c:	88 23       	and	r24, r24
 27e:	09 f4       	brne	.+2      	; 0x282 <vfprintf+0x3a>
 280:	ab c1       	rjmp	.+854    	; 0x5d8 <__stack+0x179>
 282:	85 32       	cpi	r24, 0x25	; 37
 284:	39 f4       	brne	.+14     	; 0x294 <vfprintf+0x4c>
 286:	93 fd       	sbrc	r25, 3
 288:	85 91       	lpm	r24, Z+
 28a:	93 ff       	sbrs	r25, 3
 28c:	81 91       	ld	r24, Z+
 28e:	6f 01       	movw	r12, r30
 290:	85 32       	cpi	r24, 0x25	; 37
 292:	29 f4       	brne	.+10     	; 0x29e <vfprintf+0x56>
 294:	b7 01       	movw	r22, r14
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	0e 94 0c 03 	call	0x618	; 0x618 <fputc>
 29c:	e7 cf       	rjmp	.-50     	; 0x26c <vfprintf+0x24>
 29e:	51 2c       	mov	r5, r1
 2a0:	31 2c       	mov	r3, r1
 2a2:	20 e0       	ldi	r18, 0x00	; 0
 2a4:	20 32       	cpi	r18, 0x20	; 32
 2a6:	a0 f4       	brcc	.+40     	; 0x2d0 <vfprintf+0x88>
 2a8:	8b 32       	cpi	r24, 0x2B	; 43
 2aa:	69 f0       	breq	.+26     	; 0x2c6 <vfprintf+0x7e>
 2ac:	30 f4       	brcc	.+12     	; 0x2ba <vfprintf+0x72>
 2ae:	80 32       	cpi	r24, 0x20	; 32
 2b0:	59 f0       	breq	.+22     	; 0x2c8 <vfprintf+0x80>
 2b2:	83 32       	cpi	r24, 0x23	; 35
 2b4:	69 f4       	brne	.+26     	; 0x2d0 <vfprintf+0x88>
 2b6:	20 61       	ori	r18, 0x10	; 16
 2b8:	2c c0       	rjmp	.+88     	; 0x312 <vfprintf+0xca>
 2ba:	8d 32       	cpi	r24, 0x2D	; 45
 2bc:	39 f0       	breq	.+14     	; 0x2cc <vfprintf+0x84>
 2be:	80 33       	cpi	r24, 0x30	; 48
 2c0:	39 f4       	brne	.+14     	; 0x2d0 <vfprintf+0x88>
 2c2:	21 60       	ori	r18, 0x01	; 1
 2c4:	26 c0       	rjmp	.+76     	; 0x312 <vfprintf+0xca>
 2c6:	22 60       	ori	r18, 0x02	; 2
 2c8:	24 60       	ori	r18, 0x04	; 4
 2ca:	23 c0       	rjmp	.+70     	; 0x312 <vfprintf+0xca>
 2cc:	28 60       	ori	r18, 0x08	; 8
 2ce:	21 c0       	rjmp	.+66     	; 0x312 <vfprintf+0xca>
 2d0:	27 fd       	sbrc	r18, 7
 2d2:	27 c0       	rjmp	.+78     	; 0x322 <vfprintf+0xda>
 2d4:	30 ed       	ldi	r19, 0xD0	; 208
 2d6:	38 0f       	add	r19, r24
 2d8:	3a 30       	cpi	r19, 0x0A	; 10
 2da:	78 f4       	brcc	.+30     	; 0x2fa <vfprintf+0xb2>
 2dc:	26 ff       	sbrs	r18, 6
 2de:	06 c0       	rjmp	.+12     	; 0x2ec <vfprintf+0xa4>
 2e0:	fa e0       	ldi	r31, 0x0A	; 10
 2e2:	5f 9e       	mul	r5, r31
 2e4:	30 0d       	add	r19, r0
 2e6:	11 24       	eor	r1, r1
 2e8:	53 2e       	mov	r5, r19
 2ea:	13 c0       	rjmp	.+38     	; 0x312 <vfprintf+0xca>
 2ec:	8a e0       	ldi	r24, 0x0A	; 10
 2ee:	38 9e       	mul	r3, r24
 2f0:	30 0d       	add	r19, r0
 2f2:	11 24       	eor	r1, r1
 2f4:	33 2e       	mov	r3, r19
 2f6:	20 62       	ori	r18, 0x20	; 32
 2f8:	0c c0       	rjmp	.+24     	; 0x312 <vfprintf+0xca>
 2fa:	8e 32       	cpi	r24, 0x2E	; 46
 2fc:	21 f4       	brne	.+8      	; 0x306 <vfprintf+0xbe>
 2fe:	26 fd       	sbrc	r18, 6
 300:	6b c1       	rjmp	.+726    	; 0x5d8 <__stack+0x179>
 302:	20 64       	ori	r18, 0x40	; 64
 304:	06 c0       	rjmp	.+12     	; 0x312 <vfprintf+0xca>
 306:	8c 36       	cpi	r24, 0x6C	; 108
 308:	11 f4       	brne	.+4      	; 0x30e <vfprintf+0xc6>
 30a:	20 68       	ori	r18, 0x80	; 128
 30c:	02 c0       	rjmp	.+4      	; 0x312 <vfprintf+0xca>
 30e:	88 36       	cpi	r24, 0x68	; 104
 310:	41 f4       	brne	.+16     	; 0x322 <vfprintf+0xda>
 312:	f6 01       	movw	r30, r12
 314:	93 fd       	sbrc	r25, 3
 316:	85 91       	lpm	r24, Z+
 318:	93 ff       	sbrs	r25, 3
 31a:	81 91       	ld	r24, Z+
 31c:	6f 01       	movw	r12, r30
 31e:	81 11       	cpse	r24, r1
 320:	c1 cf       	rjmp	.-126    	; 0x2a4 <vfprintf+0x5c>
 322:	98 2f       	mov	r25, r24
 324:	9f 7d       	andi	r25, 0xDF	; 223
 326:	95 54       	subi	r25, 0x45	; 69
 328:	93 30       	cpi	r25, 0x03	; 3
 32a:	28 f4       	brcc	.+10     	; 0x336 <vfprintf+0xee>
 32c:	0c 5f       	subi	r16, 0xFC	; 252
 32e:	1f 4f       	sbci	r17, 0xFF	; 255
 330:	ff e3       	ldi	r31, 0x3F	; 63
 332:	f9 83       	std	Y+1, r31	; 0x01
 334:	0d c0       	rjmp	.+26     	; 0x350 <vfprintf+0x108>
 336:	83 36       	cpi	r24, 0x63	; 99
 338:	31 f0       	breq	.+12     	; 0x346 <vfprintf+0xfe>
 33a:	83 37       	cpi	r24, 0x73	; 115
 33c:	71 f0       	breq	.+28     	; 0x35a <vfprintf+0x112>
 33e:	83 35       	cpi	r24, 0x53	; 83
 340:	09 f0       	breq	.+2      	; 0x344 <vfprintf+0xfc>
 342:	5b c0       	rjmp	.+182    	; 0x3fa <vfprintf+0x1b2>
 344:	22 c0       	rjmp	.+68     	; 0x38a <vfprintf+0x142>
 346:	f8 01       	movw	r30, r16
 348:	80 81       	ld	r24, Z
 34a:	89 83       	std	Y+1, r24	; 0x01
 34c:	0e 5f       	subi	r16, 0xFE	; 254
 34e:	1f 4f       	sbci	r17, 0xFF	; 255
 350:	44 24       	eor	r4, r4
 352:	43 94       	inc	r4
 354:	51 2c       	mov	r5, r1
 356:	54 01       	movw	r10, r8
 358:	15 c0       	rjmp	.+42     	; 0x384 <vfprintf+0x13c>
 35a:	38 01       	movw	r6, r16
 35c:	f2 e0       	ldi	r31, 0x02	; 2
 35e:	6f 0e       	add	r6, r31
 360:	71 1c       	adc	r7, r1
 362:	f8 01       	movw	r30, r16
 364:	a0 80       	ld	r10, Z
 366:	b1 80       	ldd	r11, Z+1	; 0x01
 368:	26 ff       	sbrs	r18, 6
 36a:	03 c0       	rjmp	.+6      	; 0x372 <vfprintf+0x12a>
 36c:	65 2d       	mov	r22, r5
 36e:	70 e0       	ldi	r23, 0x00	; 0
 370:	02 c0       	rjmp	.+4      	; 0x376 <vfprintf+0x12e>
 372:	6f ef       	ldi	r22, 0xFF	; 255
 374:	7f ef       	ldi	r23, 0xFF	; 255
 376:	c5 01       	movw	r24, r10
 378:	2c 87       	std	Y+12, r18	; 0x0c
 37a:	0e 94 01 03 	call	0x602	; 0x602 <strnlen>
 37e:	2c 01       	movw	r4, r24
 380:	83 01       	movw	r16, r6
 382:	2c 85       	ldd	r18, Y+12	; 0x0c
 384:	2f 77       	andi	r18, 0x7F	; 127
 386:	22 2e       	mov	r2, r18
 388:	17 c0       	rjmp	.+46     	; 0x3b8 <vfprintf+0x170>
 38a:	38 01       	movw	r6, r16
 38c:	f2 e0       	ldi	r31, 0x02	; 2
 38e:	6f 0e       	add	r6, r31
 390:	71 1c       	adc	r7, r1
 392:	f8 01       	movw	r30, r16
 394:	a0 80       	ld	r10, Z
 396:	b1 80       	ldd	r11, Z+1	; 0x01
 398:	26 ff       	sbrs	r18, 6
 39a:	03 c0       	rjmp	.+6      	; 0x3a2 <vfprintf+0x15a>
 39c:	65 2d       	mov	r22, r5
 39e:	70 e0       	ldi	r23, 0x00	; 0
 3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <vfprintf+0x15e>
 3a2:	6f ef       	ldi	r22, 0xFF	; 255
 3a4:	7f ef       	ldi	r23, 0xFF	; 255
 3a6:	c5 01       	movw	r24, r10
 3a8:	2c 87       	std	Y+12, r18	; 0x0c
 3aa:	0e 94 f6 02 	call	0x5ec	; 0x5ec <strnlen_P>
 3ae:	2c 01       	movw	r4, r24
 3b0:	2c 85       	ldd	r18, Y+12	; 0x0c
 3b2:	20 68       	ori	r18, 0x80	; 128
 3b4:	22 2e       	mov	r2, r18
 3b6:	83 01       	movw	r16, r6
 3b8:	23 fc       	sbrc	r2, 3
 3ba:	1b c0       	rjmp	.+54     	; 0x3f2 <vfprintf+0x1aa>
 3bc:	83 2d       	mov	r24, r3
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	48 16       	cp	r4, r24
 3c2:	59 06       	cpc	r5, r25
 3c4:	b0 f4       	brcc	.+44     	; 0x3f2 <vfprintf+0x1aa>
 3c6:	b7 01       	movw	r22, r14
 3c8:	80 e2       	ldi	r24, 0x20	; 32
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	0e 94 0c 03 	call	0x618	; 0x618 <fputc>
 3d0:	3a 94       	dec	r3
 3d2:	f4 cf       	rjmp	.-24     	; 0x3bc <vfprintf+0x174>
 3d4:	f5 01       	movw	r30, r10
 3d6:	27 fc       	sbrc	r2, 7
 3d8:	85 91       	lpm	r24, Z+
 3da:	27 fe       	sbrs	r2, 7
 3dc:	81 91       	ld	r24, Z+
 3de:	5f 01       	movw	r10, r30
 3e0:	b7 01       	movw	r22, r14
 3e2:	90 e0       	ldi	r25, 0x00	; 0
 3e4:	0e 94 0c 03 	call	0x618	; 0x618 <fputc>
 3e8:	31 10       	cpse	r3, r1
 3ea:	3a 94       	dec	r3
 3ec:	f1 e0       	ldi	r31, 0x01	; 1
 3ee:	4f 1a       	sub	r4, r31
 3f0:	51 08       	sbc	r5, r1
 3f2:	41 14       	cp	r4, r1
 3f4:	51 04       	cpc	r5, r1
 3f6:	71 f7       	brne	.-36     	; 0x3d4 <vfprintf+0x18c>
 3f8:	e5 c0       	rjmp	.+458    	; 0x5c4 <__stack+0x165>
 3fa:	84 36       	cpi	r24, 0x64	; 100
 3fc:	11 f0       	breq	.+4      	; 0x402 <vfprintf+0x1ba>
 3fe:	89 36       	cpi	r24, 0x69	; 105
 400:	39 f5       	brne	.+78     	; 0x450 <vfprintf+0x208>
 402:	f8 01       	movw	r30, r16
 404:	27 ff       	sbrs	r18, 7
 406:	07 c0       	rjmp	.+14     	; 0x416 <vfprintf+0x1ce>
 408:	60 81       	ld	r22, Z
 40a:	71 81       	ldd	r23, Z+1	; 0x01
 40c:	82 81       	ldd	r24, Z+2	; 0x02
 40e:	93 81       	ldd	r25, Z+3	; 0x03
 410:	0c 5f       	subi	r16, 0xFC	; 252
 412:	1f 4f       	sbci	r17, 0xFF	; 255
 414:	08 c0       	rjmp	.+16     	; 0x426 <vfprintf+0x1de>
 416:	60 81       	ld	r22, Z
 418:	71 81       	ldd	r23, Z+1	; 0x01
 41a:	88 27       	eor	r24, r24
 41c:	77 fd       	sbrc	r23, 7
 41e:	80 95       	com	r24
 420:	98 2f       	mov	r25, r24
 422:	0e 5f       	subi	r16, 0xFE	; 254
 424:	1f 4f       	sbci	r17, 0xFF	; 255
 426:	2f 76       	andi	r18, 0x6F	; 111
 428:	b2 2e       	mov	r11, r18
 42a:	97 ff       	sbrs	r25, 7
 42c:	09 c0       	rjmp	.+18     	; 0x440 <vfprintf+0x1f8>
 42e:	90 95       	com	r25
 430:	80 95       	com	r24
 432:	70 95       	com	r23
 434:	61 95       	neg	r22
 436:	7f 4f       	sbci	r23, 0xFF	; 255
 438:	8f 4f       	sbci	r24, 0xFF	; 255
 43a:	9f 4f       	sbci	r25, 0xFF	; 255
 43c:	20 68       	ori	r18, 0x80	; 128
 43e:	b2 2e       	mov	r11, r18
 440:	2a e0       	ldi	r18, 0x0A	; 10
 442:	30 e0       	ldi	r19, 0x00	; 0
 444:	a4 01       	movw	r20, r8
 446:	0e 94 3e 03 	call	0x67c	; 0x67c <__ultoa_invert>
 44a:	a8 2e       	mov	r10, r24
 44c:	a8 18       	sub	r10, r8
 44e:	44 c0       	rjmp	.+136    	; 0x4d8 <__stack+0x79>
 450:	85 37       	cpi	r24, 0x75	; 117
 452:	29 f4       	brne	.+10     	; 0x45e <vfprintf+0x216>
 454:	2f 7e       	andi	r18, 0xEF	; 239
 456:	b2 2e       	mov	r11, r18
 458:	2a e0       	ldi	r18, 0x0A	; 10
 45a:	30 e0       	ldi	r19, 0x00	; 0
 45c:	25 c0       	rjmp	.+74     	; 0x4a8 <__stack+0x49>
 45e:	f2 2f       	mov	r31, r18
 460:	f9 7f       	andi	r31, 0xF9	; 249
 462:	bf 2e       	mov	r11, r31
 464:	8f 36       	cpi	r24, 0x6F	; 111
 466:	c1 f0       	breq	.+48     	; 0x498 <__stack+0x39>
 468:	18 f4       	brcc	.+6      	; 0x470 <__stack+0x11>
 46a:	88 35       	cpi	r24, 0x58	; 88
 46c:	79 f0       	breq	.+30     	; 0x48c <__stack+0x2d>
 46e:	b4 c0       	rjmp	.+360    	; 0x5d8 <__stack+0x179>
 470:	80 37       	cpi	r24, 0x70	; 112
 472:	19 f0       	breq	.+6      	; 0x47a <__stack+0x1b>
 474:	88 37       	cpi	r24, 0x78	; 120
 476:	21 f0       	breq	.+8      	; 0x480 <__stack+0x21>
 478:	af c0       	rjmp	.+350    	; 0x5d8 <__stack+0x179>
 47a:	2f 2f       	mov	r18, r31
 47c:	20 61       	ori	r18, 0x10	; 16
 47e:	b2 2e       	mov	r11, r18
 480:	b4 fe       	sbrs	r11, 4
 482:	0d c0       	rjmp	.+26     	; 0x49e <__stack+0x3f>
 484:	8b 2d       	mov	r24, r11
 486:	84 60       	ori	r24, 0x04	; 4
 488:	b8 2e       	mov	r11, r24
 48a:	09 c0       	rjmp	.+18     	; 0x49e <__stack+0x3f>
 48c:	24 ff       	sbrs	r18, 4
 48e:	0a c0       	rjmp	.+20     	; 0x4a4 <__stack+0x45>
 490:	9f 2f       	mov	r25, r31
 492:	96 60       	ori	r25, 0x06	; 6
 494:	b9 2e       	mov	r11, r25
 496:	06 c0       	rjmp	.+12     	; 0x4a4 <__stack+0x45>
 498:	28 e0       	ldi	r18, 0x08	; 8
 49a:	30 e0       	ldi	r19, 0x00	; 0
 49c:	05 c0       	rjmp	.+10     	; 0x4a8 <__stack+0x49>
 49e:	20 e1       	ldi	r18, 0x10	; 16
 4a0:	30 e0       	ldi	r19, 0x00	; 0
 4a2:	02 c0       	rjmp	.+4      	; 0x4a8 <__stack+0x49>
 4a4:	20 e1       	ldi	r18, 0x10	; 16
 4a6:	32 e0       	ldi	r19, 0x02	; 2
 4a8:	f8 01       	movw	r30, r16
 4aa:	b7 fe       	sbrs	r11, 7
 4ac:	07 c0       	rjmp	.+14     	; 0x4bc <__stack+0x5d>
 4ae:	60 81       	ld	r22, Z
 4b0:	71 81       	ldd	r23, Z+1	; 0x01
 4b2:	82 81       	ldd	r24, Z+2	; 0x02
 4b4:	93 81       	ldd	r25, Z+3	; 0x03
 4b6:	0c 5f       	subi	r16, 0xFC	; 252
 4b8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ba:	06 c0       	rjmp	.+12     	; 0x4c8 <__stack+0x69>
 4bc:	60 81       	ld	r22, Z
 4be:	71 81       	ldd	r23, Z+1	; 0x01
 4c0:	80 e0       	ldi	r24, 0x00	; 0
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	0e 5f       	subi	r16, 0xFE	; 254
 4c6:	1f 4f       	sbci	r17, 0xFF	; 255
 4c8:	a4 01       	movw	r20, r8
 4ca:	0e 94 3e 03 	call	0x67c	; 0x67c <__ultoa_invert>
 4ce:	a8 2e       	mov	r10, r24
 4d0:	a8 18       	sub	r10, r8
 4d2:	fb 2d       	mov	r31, r11
 4d4:	ff 77       	andi	r31, 0x7F	; 127
 4d6:	bf 2e       	mov	r11, r31
 4d8:	b6 fe       	sbrs	r11, 6
 4da:	0b c0       	rjmp	.+22     	; 0x4f2 <__stack+0x93>
 4dc:	2b 2d       	mov	r18, r11
 4de:	2e 7f       	andi	r18, 0xFE	; 254
 4e0:	a5 14       	cp	r10, r5
 4e2:	50 f4       	brcc	.+20     	; 0x4f8 <__stack+0x99>
 4e4:	b4 fe       	sbrs	r11, 4
 4e6:	0a c0       	rjmp	.+20     	; 0x4fc <__stack+0x9d>
 4e8:	b2 fc       	sbrc	r11, 2
 4ea:	08 c0       	rjmp	.+16     	; 0x4fc <__stack+0x9d>
 4ec:	2b 2d       	mov	r18, r11
 4ee:	2e 7e       	andi	r18, 0xEE	; 238
 4f0:	05 c0       	rjmp	.+10     	; 0x4fc <__stack+0x9d>
 4f2:	7a 2c       	mov	r7, r10
 4f4:	2b 2d       	mov	r18, r11
 4f6:	03 c0       	rjmp	.+6      	; 0x4fe <__stack+0x9f>
 4f8:	7a 2c       	mov	r7, r10
 4fa:	01 c0       	rjmp	.+2      	; 0x4fe <__stack+0x9f>
 4fc:	75 2c       	mov	r7, r5
 4fe:	24 ff       	sbrs	r18, 4
 500:	0d c0       	rjmp	.+26     	; 0x51c <__stack+0xbd>
 502:	fe 01       	movw	r30, r28
 504:	ea 0d       	add	r30, r10
 506:	f1 1d       	adc	r31, r1
 508:	80 81       	ld	r24, Z
 50a:	80 33       	cpi	r24, 0x30	; 48
 50c:	11 f4       	brne	.+4      	; 0x512 <__stack+0xb3>
 50e:	29 7e       	andi	r18, 0xE9	; 233
 510:	09 c0       	rjmp	.+18     	; 0x524 <__stack+0xc5>
 512:	22 ff       	sbrs	r18, 2
 514:	06 c0       	rjmp	.+12     	; 0x522 <__stack+0xc3>
 516:	73 94       	inc	r7
 518:	73 94       	inc	r7
 51a:	04 c0       	rjmp	.+8      	; 0x524 <__stack+0xc5>
 51c:	82 2f       	mov	r24, r18
 51e:	86 78       	andi	r24, 0x86	; 134
 520:	09 f0       	breq	.+2      	; 0x524 <__stack+0xc5>
 522:	73 94       	inc	r7
 524:	23 fd       	sbrc	r18, 3
 526:	13 c0       	rjmp	.+38     	; 0x54e <__stack+0xef>
 528:	20 ff       	sbrs	r18, 0
 52a:	06 c0       	rjmp	.+12     	; 0x538 <__stack+0xd9>
 52c:	5a 2c       	mov	r5, r10
 52e:	73 14       	cp	r7, r3
 530:	18 f4       	brcc	.+6      	; 0x538 <__stack+0xd9>
 532:	53 0c       	add	r5, r3
 534:	57 18       	sub	r5, r7
 536:	73 2c       	mov	r7, r3
 538:	73 14       	cp	r7, r3
 53a:	68 f4       	brcc	.+26     	; 0x556 <__stack+0xf7>
 53c:	b7 01       	movw	r22, r14
 53e:	80 e2       	ldi	r24, 0x20	; 32
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	2c 87       	std	Y+12, r18	; 0x0c
 544:	0e 94 0c 03 	call	0x618	; 0x618 <fputc>
 548:	73 94       	inc	r7
 54a:	2c 85       	ldd	r18, Y+12	; 0x0c
 54c:	f5 cf       	rjmp	.-22     	; 0x538 <__stack+0xd9>
 54e:	73 14       	cp	r7, r3
 550:	10 f4       	brcc	.+4      	; 0x556 <__stack+0xf7>
 552:	37 18       	sub	r3, r7
 554:	01 c0       	rjmp	.+2      	; 0x558 <__stack+0xf9>
 556:	31 2c       	mov	r3, r1
 558:	24 ff       	sbrs	r18, 4
 55a:	12 c0       	rjmp	.+36     	; 0x580 <__stack+0x121>
 55c:	b7 01       	movw	r22, r14
 55e:	80 e3       	ldi	r24, 0x30	; 48
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	2c 87       	std	Y+12, r18	; 0x0c
 564:	0e 94 0c 03 	call	0x618	; 0x618 <fputc>
 568:	2c 85       	ldd	r18, Y+12	; 0x0c
 56a:	22 ff       	sbrs	r18, 2
 56c:	17 c0       	rjmp	.+46     	; 0x59c <__stack+0x13d>
 56e:	21 ff       	sbrs	r18, 1
 570:	03 c0       	rjmp	.+6      	; 0x578 <__stack+0x119>
 572:	88 e5       	ldi	r24, 0x58	; 88
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	02 c0       	rjmp	.+4      	; 0x57c <__stack+0x11d>
 578:	88 e7       	ldi	r24, 0x78	; 120
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	b7 01       	movw	r22, r14
 57e:	0c c0       	rjmp	.+24     	; 0x598 <__stack+0x139>
 580:	82 2f       	mov	r24, r18
 582:	86 78       	andi	r24, 0x86	; 134
 584:	59 f0       	breq	.+22     	; 0x59c <__stack+0x13d>
 586:	21 fd       	sbrc	r18, 1
 588:	02 c0       	rjmp	.+4      	; 0x58e <__stack+0x12f>
 58a:	80 e2       	ldi	r24, 0x20	; 32
 58c:	01 c0       	rjmp	.+2      	; 0x590 <__stack+0x131>
 58e:	8b e2       	ldi	r24, 0x2B	; 43
 590:	27 fd       	sbrc	r18, 7
 592:	8d e2       	ldi	r24, 0x2D	; 45
 594:	b7 01       	movw	r22, r14
 596:	90 e0       	ldi	r25, 0x00	; 0
 598:	0e 94 0c 03 	call	0x618	; 0x618 <fputc>
 59c:	a5 14       	cp	r10, r5
 59e:	38 f4       	brcc	.+14     	; 0x5ae <__stack+0x14f>
 5a0:	b7 01       	movw	r22, r14
 5a2:	80 e3       	ldi	r24, 0x30	; 48
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	0e 94 0c 03 	call	0x618	; 0x618 <fputc>
 5aa:	5a 94       	dec	r5
 5ac:	f7 cf       	rjmp	.-18     	; 0x59c <__stack+0x13d>
 5ae:	aa 94       	dec	r10
 5b0:	f4 01       	movw	r30, r8
 5b2:	ea 0d       	add	r30, r10
 5b4:	f1 1d       	adc	r31, r1
 5b6:	80 81       	ld	r24, Z
 5b8:	b7 01       	movw	r22, r14
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	0e 94 0c 03 	call	0x618	; 0x618 <fputc>
 5c0:	a1 10       	cpse	r10, r1
 5c2:	f5 cf       	rjmp	.-22     	; 0x5ae <__stack+0x14f>
 5c4:	33 20       	and	r3, r3
 5c6:	09 f4       	brne	.+2      	; 0x5ca <__stack+0x16b>
 5c8:	51 ce       	rjmp	.-862    	; 0x26c <vfprintf+0x24>
 5ca:	b7 01       	movw	r22, r14
 5cc:	80 e2       	ldi	r24, 0x20	; 32
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	0e 94 0c 03 	call	0x618	; 0x618 <fputc>
 5d4:	3a 94       	dec	r3
 5d6:	f6 cf       	rjmp	.-20     	; 0x5c4 <__stack+0x165>
 5d8:	f7 01       	movw	r30, r14
 5da:	86 81       	ldd	r24, Z+6	; 0x06
 5dc:	97 81       	ldd	r25, Z+7	; 0x07
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <__stack+0x185>
 5e0:	8f ef       	ldi	r24, 0xFF	; 255
 5e2:	9f ef       	ldi	r25, 0xFF	; 255
 5e4:	2c 96       	adiw	r28, 0x0c	; 12
 5e6:	e2 e1       	ldi	r30, 0x12	; 18
 5e8:	0c 94 b8 03 	jmp	0x770	; 0x770 <__epilogue_restores__>

000005ec <strnlen_P>:
 5ec:	fc 01       	movw	r30, r24
 5ee:	05 90       	lpm	r0, Z+
 5f0:	61 50       	subi	r22, 0x01	; 1
 5f2:	70 40       	sbci	r23, 0x00	; 0
 5f4:	01 10       	cpse	r0, r1
 5f6:	d8 f7       	brcc	.-10     	; 0x5ee <strnlen_P+0x2>
 5f8:	80 95       	com	r24
 5fa:	90 95       	com	r25
 5fc:	8e 0f       	add	r24, r30
 5fe:	9f 1f       	adc	r25, r31
 600:	08 95       	ret

00000602 <strnlen>:
 602:	fc 01       	movw	r30, r24
 604:	61 50       	subi	r22, 0x01	; 1
 606:	70 40       	sbci	r23, 0x00	; 0
 608:	01 90       	ld	r0, Z+
 60a:	01 10       	cpse	r0, r1
 60c:	d8 f7       	brcc	.-10     	; 0x604 <strnlen+0x2>
 60e:	80 95       	com	r24
 610:	90 95       	com	r25
 612:	8e 0f       	add	r24, r30
 614:	9f 1f       	adc	r25, r31
 616:	08 95       	ret

00000618 <fputc>:
 618:	0f 93       	push	r16
 61a:	1f 93       	push	r17
 61c:	cf 93       	push	r28
 61e:	df 93       	push	r29
 620:	18 2f       	mov	r17, r24
 622:	09 2f       	mov	r16, r25
 624:	eb 01       	movw	r28, r22
 626:	8b 81       	ldd	r24, Y+3	; 0x03
 628:	81 fd       	sbrc	r24, 1
 62a:	03 c0       	rjmp	.+6      	; 0x632 <fputc+0x1a>
 62c:	8f ef       	ldi	r24, 0xFF	; 255
 62e:	9f ef       	ldi	r25, 0xFF	; 255
 630:	20 c0       	rjmp	.+64     	; 0x672 <fputc+0x5a>
 632:	82 ff       	sbrs	r24, 2
 634:	10 c0       	rjmp	.+32     	; 0x656 <fputc+0x3e>
 636:	4e 81       	ldd	r20, Y+6	; 0x06
 638:	5f 81       	ldd	r21, Y+7	; 0x07
 63a:	2c 81       	ldd	r18, Y+4	; 0x04
 63c:	3d 81       	ldd	r19, Y+5	; 0x05
 63e:	42 17       	cp	r20, r18
 640:	53 07       	cpc	r21, r19
 642:	7c f4       	brge	.+30     	; 0x662 <fputc+0x4a>
 644:	e8 81       	ld	r30, Y
 646:	f9 81       	ldd	r31, Y+1	; 0x01
 648:	9f 01       	movw	r18, r30
 64a:	2f 5f       	subi	r18, 0xFF	; 255
 64c:	3f 4f       	sbci	r19, 0xFF	; 255
 64e:	39 83       	std	Y+1, r19	; 0x01
 650:	28 83       	st	Y, r18
 652:	10 83       	st	Z, r17
 654:	06 c0       	rjmp	.+12     	; 0x662 <fputc+0x4a>
 656:	e8 85       	ldd	r30, Y+8	; 0x08
 658:	f9 85       	ldd	r31, Y+9	; 0x09
 65a:	81 2f       	mov	r24, r17
 65c:	09 95       	icall
 65e:	89 2b       	or	r24, r25
 660:	29 f7       	brne	.-54     	; 0x62c <fputc+0x14>
 662:	2e 81       	ldd	r18, Y+6	; 0x06
 664:	3f 81       	ldd	r19, Y+7	; 0x07
 666:	2f 5f       	subi	r18, 0xFF	; 255
 668:	3f 4f       	sbci	r19, 0xFF	; 255
 66a:	3f 83       	std	Y+7, r19	; 0x07
 66c:	2e 83       	std	Y+6, r18	; 0x06
 66e:	81 2f       	mov	r24, r17
 670:	90 2f       	mov	r25, r16
 672:	df 91       	pop	r29
 674:	cf 91       	pop	r28
 676:	1f 91       	pop	r17
 678:	0f 91       	pop	r16
 67a:	08 95       	ret

0000067c <__ultoa_invert>:
 67c:	fa 01       	movw	r30, r20
 67e:	aa 27       	eor	r26, r26
 680:	28 30       	cpi	r18, 0x08	; 8
 682:	51 f1       	breq	.+84     	; 0x6d8 <__ultoa_invert+0x5c>
 684:	20 31       	cpi	r18, 0x10	; 16
 686:	81 f1       	breq	.+96     	; 0x6e8 <__ultoa_invert+0x6c>
 688:	e8 94       	clt
 68a:	6f 93       	push	r22
 68c:	6e 7f       	andi	r22, 0xFE	; 254
 68e:	6e 5f       	subi	r22, 0xFE	; 254
 690:	7f 4f       	sbci	r23, 0xFF	; 255
 692:	8f 4f       	sbci	r24, 0xFF	; 255
 694:	9f 4f       	sbci	r25, 0xFF	; 255
 696:	af 4f       	sbci	r26, 0xFF	; 255
 698:	b1 e0       	ldi	r27, 0x01	; 1
 69a:	3e d0       	rcall	.+124    	; 0x718 <__ultoa_invert+0x9c>
 69c:	b4 e0       	ldi	r27, 0x04	; 4
 69e:	3c d0       	rcall	.+120    	; 0x718 <__ultoa_invert+0x9c>
 6a0:	67 0f       	add	r22, r23
 6a2:	78 1f       	adc	r23, r24
 6a4:	89 1f       	adc	r24, r25
 6a6:	9a 1f       	adc	r25, r26
 6a8:	a1 1d       	adc	r26, r1
 6aa:	68 0f       	add	r22, r24
 6ac:	79 1f       	adc	r23, r25
 6ae:	8a 1f       	adc	r24, r26
 6b0:	91 1d       	adc	r25, r1
 6b2:	a1 1d       	adc	r26, r1
 6b4:	6a 0f       	add	r22, r26
 6b6:	71 1d       	adc	r23, r1
 6b8:	81 1d       	adc	r24, r1
 6ba:	91 1d       	adc	r25, r1
 6bc:	a1 1d       	adc	r26, r1
 6be:	20 d0       	rcall	.+64     	; 0x700 <__ultoa_invert+0x84>
 6c0:	09 f4       	brne	.+2      	; 0x6c4 <__ultoa_invert+0x48>
 6c2:	68 94       	set
 6c4:	3f 91       	pop	r19
 6c6:	2a e0       	ldi	r18, 0x0A	; 10
 6c8:	26 9f       	mul	r18, r22
 6ca:	11 24       	eor	r1, r1
 6cc:	30 19       	sub	r19, r0
 6ce:	30 5d       	subi	r19, 0xD0	; 208
 6d0:	31 93       	st	Z+, r19
 6d2:	de f6       	brtc	.-74     	; 0x68a <__ultoa_invert+0xe>
 6d4:	cf 01       	movw	r24, r30
 6d6:	08 95       	ret
 6d8:	46 2f       	mov	r20, r22
 6da:	47 70       	andi	r20, 0x07	; 7
 6dc:	40 5d       	subi	r20, 0xD0	; 208
 6de:	41 93       	st	Z+, r20
 6e0:	b3 e0       	ldi	r27, 0x03	; 3
 6e2:	0f d0       	rcall	.+30     	; 0x702 <__ultoa_invert+0x86>
 6e4:	c9 f7       	brne	.-14     	; 0x6d8 <__ultoa_invert+0x5c>
 6e6:	f6 cf       	rjmp	.-20     	; 0x6d4 <__ultoa_invert+0x58>
 6e8:	46 2f       	mov	r20, r22
 6ea:	4f 70       	andi	r20, 0x0F	; 15
 6ec:	40 5d       	subi	r20, 0xD0	; 208
 6ee:	4a 33       	cpi	r20, 0x3A	; 58
 6f0:	18 f0       	brcs	.+6      	; 0x6f8 <__ultoa_invert+0x7c>
 6f2:	49 5d       	subi	r20, 0xD9	; 217
 6f4:	31 fd       	sbrc	r19, 1
 6f6:	40 52       	subi	r20, 0x20	; 32
 6f8:	41 93       	st	Z+, r20
 6fa:	02 d0       	rcall	.+4      	; 0x700 <__ultoa_invert+0x84>
 6fc:	a9 f7       	brne	.-22     	; 0x6e8 <__ultoa_invert+0x6c>
 6fe:	ea cf       	rjmp	.-44     	; 0x6d4 <__ultoa_invert+0x58>
 700:	b4 e0       	ldi	r27, 0x04	; 4
 702:	a6 95       	lsr	r26
 704:	97 95       	ror	r25
 706:	87 95       	ror	r24
 708:	77 95       	ror	r23
 70a:	67 95       	ror	r22
 70c:	ba 95       	dec	r27
 70e:	c9 f7       	brne	.-14     	; 0x702 <__ultoa_invert+0x86>
 710:	00 97       	sbiw	r24, 0x00	; 0
 712:	61 05       	cpc	r22, r1
 714:	71 05       	cpc	r23, r1
 716:	08 95       	ret
 718:	9b 01       	movw	r18, r22
 71a:	ac 01       	movw	r20, r24
 71c:	0a 2e       	mov	r0, r26
 71e:	06 94       	lsr	r0
 720:	57 95       	ror	r21
 722:	47 95       	ror	r20
 724:	37 95       	ror	r19
 726:	27 95       	ror	r18
 728:	ba 95       	dec	r27
 72a:	c9 f7       	brne	.-14     	; 0x71e <__ultoa_invert+0xa2>
 72c:	62 0f       	add	r22, r18
 72e:	73 1f       	adc	r23, r19
 730:	84 1f       	adc	r24, r20
 732:	95 1f       	adc	r25, r21
 734:	a0 1d       	adc	r26, r0
 736:	08 95       	ret

00000738 <__prologue_saves__>:
 738:	2f 92       	push	r2
 73a:	3f 92       	push	r3
 73c:	4f 92       	push	r4
 73e:	5f 92       	push	r5
 740:	6f 92       	push	r6
 742:	7f 92       	push	r7
 744:	8f 92       	push	r8
 746:	9f 92       	push	r9
 748:	af 92       	push	r10
 74a:	bf 92       	push	r11
 74c:	cf 92       	push	r12
 74e:	df 92       	push	r13
 750:	ef 92       	push	r14
 752:	ff 92       	push	r15
 754:	0f 93       	push	r16
 756:	1f 93       	push	r17
 758:	cf 93       	push	r28
 75a:	df 93       	push	r29
 75c:	cd b7       	in	r28, 0x3d	; 61
 75e:	de b7       	in	r29, 0x3e	; 62
 760:	ca 1b       	sub	r28, r26
 762:	db 0b       	sbc	r29, r27
 764:	0f b6       	in	r0, 0x3f	; 63
 766:	f8 94       	cli
 768:	de bf       	out	0x3e, r29	; 62
 76a:	0f be       	out	0x3f, r0	; 63
 76c:	cd bf       	out	0x3d, r28	; 61
 76e:	09 94       	ijmp

00000770 <__epilogue_restores__>:
 770:	2a 88       	ldd	r2, Y+18	; 0x12
 772:	39 88       	ldd	r3, Y+17	; 0x11
 774:	48 88       	ldd	r4, Y+16	; 0x10
 776:	5f 84       	ldd	r5, Y+15	; 0x0f
 778:	6e 84       	ldd	r6, Y+14	; 0x0e
 77a:	7d 84       	ldd	r7, Y+13	; 0x0d
 77c:	8c 84       	ldd	r8, Y+12	; 0x0c
 77e:	9b 84       	ldd	r9, Y+11	; 0x0b
 780:	aa 84       	ldd	r10, Y+10	; 0x0a
 782:	b9 84       	ldd	r11, Y+9	; 0x09
 784:	c8 84       	ldd	r12, Y+8	; 0x08
 786:	df 80       	ldd	r13, Y+7	; 0x07
 788:	ee 80       	ldd	r14, Y+6	; 0x06
 78a:	fd 80       	ldd	r15, Y+5	; 0x05
 78c:	0c 81       	ldd	r16, Y+4	; 0x04
 78e:	1b 81       	ldd	r17, Y+3	; 0x03
 790:	aa 81       	ldd	r26, Y+2	; 0x02
 792:	b9 81       	ldd	r27, Y+1	; 0x01
 794:	ce 0f       	add	r28, r30
 796:	d1 1d       	adc	r29, r1
 798:	0f b6       	in	r0, 0x3f	; 63
 79a:	f8 94       	cli
 79c:	de bf       	out	0x3e, r29	; 62
 79e:	0f be       	out	0x3f, r0	; 63
 7a0:	cd bf       	out	0x3d, r28	; 61
 7a2:	ed 01       	movw	r28, r26
 7a4:	08 95       	ret

000007a6 <_exit>:
 7a6:	f8 94       	cli

000007a8 <__stop_program>:
 7a8:	ff cf       	rjmp	.-2      	; 0x7a8 <__stop_program>
