
IR_DECODE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000894  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  00000894  00000928  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000d  0080006a  0080006a  00000932  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000932  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  0000098e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000048a  00000000  00000000  00000a0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000228  00000000  00000000  00000e98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001f7  00000000  00000000  000010c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001ac  00000000  00000000  000012b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001f2  00000000  00000000  00001464  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000509  00000000  00000000  00001656  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00001b5f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 d8 00 	jmp	0x1b0	; 0x1b0 <__vector_2>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e9       	ldi	r30, 0x94	; 148
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a7 37       	cpi	r26, 0x77	; 119
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 c6 00 	call	0x18c	; 0x18c <main>
  8a:	0c 94 48 04 	jmp	0x890	; 0x890 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <putchar_UART>:
int data, dem;

void putchar_UART(int kitu)
{
	while (inbit(UCSRA,UDRE)==0); //cho den khi bit UDRE=1 Neu = 1 thi viet code vao
  92:	5d 9b       	sbis	0x0b, 5	; 11
  94:	fe cf       	rjmp	.-4      	; 0x92 <putchar_UART>
	UDR=kitu;
  96:	8c b9       	out	0x0c, r24	; 12
  98:	08 95       	ret

0000009a <print_UART>:
}
void print_UART(char* str)//******__HIEN THI CHUOI KI TU__*********************
{
  9a:	cf 93       	push	r28
  9c:	df 93       	push	r29
  9e:	ec 01       	movw	r28, r24
	int i;
	for (i=0; str[i]!=0; i++) 
  a0:	88 81       	ld	r24, Y
  a2:	88 23       	and	r24, r24
  a4:	39 f0       	breq	.+14     	; 0xb4 <print_UART+0x1a>
  a6:	21 96       	adiw	r28, 0x01	; 1
	putchar_UART(str[i]);
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	0e 94 49 00 	call	0x92	; 0x92 <putchar_UART>
	UDR=kitu;
}
void print_UART(char* str)//******__HIEN THI CHUOI KI TU__*********************
{
	int i;
	for (i=0; str[i]!=0; i++) 
  ae:	89 91       	ld	r24, Y+
  b0:	81 11       	cpse	r24, r1
  b2:	fa cf       	rjmp	.-12     	; 0xa8 <print_UART+0xe>
	putchar_UART(str[i]);
}
  b4:	df 91       	pop	r29
  b6:	cf 91       	pop	r28
  b8:	08 95       	ret

000000ba <vietso_dec_UART>:
void vietso_dec_UART(long num)
{
  ba:	0f 93       	push	r16
  bc:	1f 93       	push	r17
  be:	cf 93       	push	r28
  c0:	df 93       	push	r29
  c2:	cd b7       	in	r28, 0x3d	; 61
  c4:	de b7       	in	r29, 0x3e	; 62
  c6:	2a 97       	sbiw	r28, 0x0a	; 10
  c8:	0f b6       	in	r0, 0x3f	; 63
  ca:	f8 94       	cli
  cc:	de bf       	out	0x3e, r29	; 62
  ce:	0f be       	out	0x3f, r0	; 63
  d0:	cd bf       	out	0x3d, r28	; 61
	char dis[10];
	sprintf(dis, "%li", num);
  d2:	9f 93       	push	r25
  d4:	8f 93       	push	r24
  d6:	7f 93       	push	r23
  d8:	6f 93       	push	r22
  da:	80 e6       	ldi	r24, 0x60	; 96
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	9f 93       	push	r25
  e0:	8f 93       	push	r24
  e2:	8e 01       	movw	r16, r28
  e4:	0f 5f       	subi	r16, 0xFF	; 255
  e6:	1f 4f       	sbci	r17, 0xFF	; 255
  e8:	1f 93       	push	r17
  ea:	0f 93       	push	r16
  ec:	0e 94 77 01 	call	0x2ee	; 0x2ee <sprintf>
	print_UART(dis);
  f0:	c8 01       	movw	r24, r16
  f2:	0e 94 4d 00 	call	0x9a	; 0x9a <print_UART>
  f6:	0f b6       	in	r0, 0x3f	; 63
  f8:	f8 94       	cli
  fa:	de bf       	out	0x3e, r29	; 62
  fc:	0f be       	out	0x3f, r0	; 63
  fe:	cd bf       	out	0x3d, r28	; 61
}
 100:	2a 96       	adiw	r28, 0x0a	; 10
 102:	0f b6       	in	r0, 0x3f	; 63
 104:	f8 94       	cli
 106:	de bf       	out	0x3e, r29	; 62
 108:	0f be       	out	0x3f, r0	; 63
 10a:	cd bf       	out	0x3d, r28	; 61
 10c:	df 91       	pop	r29
 10e:	cf 91       	pop	r28
 110:	1f 91       	pop	r17
 112:	0f 91       	pop	r16
 114:	08 95       	ret

00000116 <vietso_hex_UART>:
		vietso_dec_UART(0);
		mask>>=1;
	}
}
void vietso_hex_UART(long num)
{
 116:	0f 93       	push	r16
 118:	1f 93       	push	r17
 11a:	cf 93       	push	r28
 11c:	df 93       	push	r29
 11e:	cd b7       	in	r28, 0x3d	; 61
 120:	de b7       	in	r29, 0x3e	; 62
 122:	2a 97       	sbiw	r28, 0x0a	; 10
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	f8 94       	cli
 128:	de bf       	out	0x3e, r29	; 62
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	cd bf       	out	0x3d, r28	; 61
	char dis[10];
	sprintf(dis, "0x%lx", num);
 12e:	9f 93       	push	r25
 130:	8f 93       	push	r24
 132:	7f 93       	push	r23
 134:	6f 93       	push	r22
 136:	84 e6       	ldi	r24, 0x64	; 100
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	9f 93       	push	r25
 13c:	8f 93       	push	r24
 13e:	8e 01       	movw	r16, r28
 140:	0f 5f       	subi	r16, 0xFF	; 255
 142:	1f 4f       	sbci	r17, 0xFF	; 255
 144:	1f 93       	push	r17
 146:	0f 93       	push	r16
 148:	0e 94 77 01 	call	0x2ee	; 0x2ee <sprintf>
	print_UART(dis);
 14c:	c8 01       	movw	r24, r16
 14e:	0e 94 4d 00 	call	0x9a	; 0x9a <print_UART>
 152:	0f b6       	in	r0, 0x3f	; 63
 154:	f8 94       	cli
 156:	de bf       	out	0x3e, r29	; 62
 158:	0f be       	out	0x3f, r0	; 63
 15a:	cd bf       	out	0x3d, r28	; 61
	
}
 15c:	2a 96       	adiw	r28, 0x0a	; 10
 15e:	0f b6       	in	r0, 0x3f	; 63
 160:	f8 94       	cli
 162:	de bf       	out	0x3e, r29	; 62
 164:	0f be       	out	0x3f, r0	; 63
 166:	cd bf       	out	0x3d, r28	; 61
 168:	df 91       	pop	r29
 16a:	cf 91       	pop	r28
 16c:	1f 91       	pop	r17
 16e:	0f 91       	pop	r16
 170:	08 95       	ret

00000172 <init_UART>:
	return ( UDR ); // return the byte
}
void init_UART()
{
	//UART
	UBRRH=0;		//set toc do truyen baud
 172:	10 bc       	out	0x20, r1	; 32
	UBRRL=51;
 174:	83 e3       	ldi	r24, 0x33	; 51
 176:	89 b9       	out	0x09, r24	; 9
	UCSRC=(1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0);
 178:	86 e8       	ldi	r24, 0x86	; 134
 17a:	80 bd       	out	0x20, r24	; 32
	UCSRB=(1<<TXEN)|(1<<RXEN)|(1<<RXCIE);
 17c:	88 e9       	ldi	r24, 0x98	; 152
 17e:	8a b9       	out	0x0a, r24	; 10
 180:	08 95       	ret

00000182 <newline_UART>:
	for (;num>0;num--)
		putchar_UART(32);
}
void newline_UART()
{
	putchar_UART(13);
 182:	8d e0       	ldi	r24, 0x0D	; 13
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	0e 94 49 00 	call	0x92	; 0x92 <putchar_UART>
 18a:	08 95       	ret

0000018c <main>:
void Init_Timer_1(int div)
{
	TCNT1=0;
 18c:	1d bc       	out	0x2d, r1	; 45
 18e:	1c bc       	out	0x2c, r1	; 44
	if (div==1024)
		TCCR1B=(1<<CS10)|(1<<CS12);
	else if (div==256)
		TCCR1B=(1<<CS12);
	else if (div==64)
		TCCR1B=(1<<CS10)|(1<<CS11);
 190:	83 e0       	ldi	r24, 0x03	; 3
 192:	8e bd       	out	0x2e, r24	; 46

int main(void)
{
	
	Init_Timer_1(64);
	init_UART();
 194:	0e 94 b9 00 	call	0x172	; 0x172 <init_UART>
	vietso_dec_UART(123);
 198:	6b e7       	ldi	r22, 0x7B	; 123
 19a:	70 e0       	ldi	r23, 0x00	; 0
 19c:	80 e0       	ldi	r24, 0x00	; 0
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	0e 94 5d 00 	call	0xba	; 0xba <vietso_dec_UART>
	MCUCR=(1<<ISC01)|(1<<ISC11);
 1a4:	8a e0       	ldi	r24, 0x0A	; 10
 1a6:	85 bf       	out	0x35, r24	; 53
	GICR=(1<<INT0)|(1<<INT1);
 1a8:	80 ec       	ldi	r24, 0xC0	; 192
 1aa:	8b bf       	out	0x3b, r24	; 59
	sei();
 1ac:	78 94       	sei
 1ae:	ff cf       	rjmp	.-2      	; 0x1ae <main+0x22>

000001b0 <__vector_2>:
	{
		
	}
}
ISR(INT1_vect)
{
 1b0:	1f 92       	push	r1
 1b2:	0f 92       	push	r0
 1b4:	0f b6       	in	r0, 0x3f	; 63
 1b6:	0f 92       	push	r0
 1b8:	11 24       	eor	r1, r1
 1ba:	2f 93       	push	r18
 1bc:	3f 93       	push	r19
 1be:	4f 93       	push	r20
 1c0:	5f 93       	push	r21
 1c2:	6f 93       	push	r22
 1c4:	7f 93       	push	r23
 1c6:	8f 93       	push	r24
 1c8:	9f 93       	push	r25
 1ca:	af 93       	push	r26
 1cc:	bf 93       	push	r27
 1ce:	ef 93       	push	r30
 1d0:	ff 93       	push	r31
	count++;
 1d2:	80 91 74 00 	lds	r24, 0x0074
 1d6:	8f 5f       	subi	r24, 0xFF	; 255
 1d8:	80 93 74 00 	sts	0x0074, r24
	time=TCNT1;
 1dc:	8c b5       	in	r24, 0x2c	; 44
 1de:	9d b5       	in	r25, 0x2d	; 45
 1e0:	a0 e0       	ldi	r26, 0x00	; 0
 1e2:	b0 e0       	ldi	r27, 0x00	; 0
 1e4:	80 93 70 00 	sts	0x0070, r24
 1e8:	90 93 71 00 	sts	0x0071, r25
 1ec:	a0 93 72 00 	sts	0x0072, r26
 1f0:	b0 93 73 00 	sts	0x0073, r27
	TCNT1=0;
 1f4:	1d bc       	out	0x2d, r1	; 45
 1f6:	1c bc       	out	0x2c, r1	; 44
	if(count>18)
 1f8:	80 91 74 00 	lds	r24, 0x0074
 1fc:	83 31       	cpi	r24, 0x13	; 19
 1fe:	08 f4       	brcc	.+2      	; 0x202 <__vector_2+0x52>
 200:	65 c0       	rjmp	.+202    	; 0x2cc <__vector_2+0x11c>
	{
		if ((time > 300)&&(time < 1300))
 202:	80 91 70 00 	lds	r24, 0x0070
 206:	90 91 71 00 	lds	r25, 0x0071
 20a:	a0 91 72 00 	lds	r26, 0x0072
 20e:	b0 91 73 00 	lds	r27, 0x0073
 212:	ac 01       	movw	r20, r24
 214:	bd 01       	movw	r22, r26
 216:	4d 52       	subi	r20, 0x2D	; 45
 218:	51 40       	sbci	r21, 0x01	; 1
 21a:	61 09       	sbc	r22, r1
 21c:	71 09       	sbc	r23, r1
 21e:	47 3e       	cpi	r20, 0xE7	; 231
 220:	53 40       	sbci	r21, 0x03	; 3
 222:	61 05       	cpc	r22, r1
 224:	71 05       	cpc	r23, r1
 226:	c0 f4       	brcc	.+48     	; 0x258 <__vector_2+0xa8>
			IR_ma = (IR_ma<<1) + 1;
 228:	80 91 6a 00 	lds	r24, 0x006A
 22c:	90 91 6b 00 	lds	r25, 0x006B
 230:	a0 91 6c 00 	lds	r26, 0x006C
 234:	b0 91 6d 00 	lds	r27, 0x006D
 238:	88 0f       	add	r24, r24
 23a:	99 1f       	adc	r25, r25
 23c:	aa 1f       	adc	r26, r26
 23e:	bb 1f       	adc	r27, r27
 240:	01 96       	adiw	r24, 0x01	; 1
 242:	a1 1d       	adc	r26, r1
 244:	b1 1d       	adc	r27, r1
 246:	80 93 6a 00 	sts	0x006A, r24
 24a:	90 93 6b 00 	sts	0x006B, r25
 24e:	a0 93 6c 00 	sts	0x006C, r26
 252:	b0 93 6d 00 	sts	0x006D, r27
 256:	3a c0       	rjmp	.+116    	; 0x2cc <__vector_2+0x11c>
		else if(time < 300)
 258:	8c 32       	cpi	r24, 0x2C	; 44
 25a:	21 e0       	ldi	r18, 0x01	; 1
 25c:	92 07       	cpc	r25, r18
 25e:	a1 05       	cpc	r26, r1
 260:	b1 05       	cpc	r27, r1
 262:	ac f4       	brge	.+42     	; 0x28e <__vector_2+0xde>
			IR_ma = IR_ma<<1;
 264:	80 91 6a 00 	lds	r24, 0x006A
 268:	90 91 6b 00 	lds	r25, 0x006B
 26c:	a0 91 6c 00 	lds	r26, 0x006C
 270:	b0 91 6d 00 	lds	r27, 0x006D
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	aa 1f       	adc	r26, r26
 27a:	bb 1f       	adc	r27, r27
 27c:	80 93 6a 00 	sts	0x006A, r24
 280:	90 93 6b 00 	sts	0x006B, r25
 284:	a0 93 6c 00 	sts	0x006C, r26
 288:	b0 93 6d 00 	sts	0x006D, r27
 28c:	1f c0       	rjmp	.+62     	; 0x2cc <__vector_2+0x11c>
		else if((time > 2000)&&(time < 6000))
 28e:	81 5d       	subi	r24, 0xD1	; 209
 290:	97 40       	sbci	r25, 0x07	; 7
 292:	a1 09       	sbc	r26, r1
 294:	b1 09       	sbc	r27, r1
 296:	8f 39       	cpi	r24, 0x9F	; 159
 298:	9f 40       	sbci	r25, 0x0F	; 15
 29a:	a1 05       	cpc	r26, r1
 29c:	b1 05       	cpc	r27, r1
 29e:	b0 f4       	brcc	.+44     	; 0x2cc <__vector_2+0x11c>
		{
			vietso_hex_UART(IR_ma);
 2a0:	60 91 6a 00 	lds	r22, 0x006A
 2a4:	70 91 6b 00 	lds	r23, 0x006B
 2a8:	80 91 6c 00 	lds	r24, 0x006C
 2ac:	90 91 6d 00 	lds	r25, 0x006D
 2b0:	0e 94 8b 00 	call	0x116	; 0x116 <vietso_hex_UART>
			IR_ma = 0;
 2b4:	10 92 6a 00 	sts	0x006A, r1
 2b8:	10 92 6b 00 	sts	0x006B, r1
 2bc:	10 92 6c 00 	sts	0x006C, r1
 2c0:	10 92 6d 00 	sts	0x006D, r1
			count = 0;
 2c4:	10 92 74 00 	sts	0x0074, r1
			newline_UART();
 2c8:	0e 94 c1 00 	call	0x182	; 0x182 <newline_UART>
		}
	}
 2cc:	ff 91       	pop	r31
 2ce:	ef 91       	pop	r30
 2d0:	bf 91       	pop	r27
 2d2:	af 91       	pop	r26
 2d4:	9f 91       	pop	r25
 2d6:	8f 91       	pop	r24
 2d8:	7f 91       	pop	r23
 2da:	6f 91       	pop	r22
 2dc:	5f 91       	pop	r21
 2de:	4f 91       	pop	r20
 2e0:	3f 91       	pop	r19
 2e2:	2f 91       	pop	r18
 2e4:	0f 90       	pop	r0
 2e6:	0f be       	out	0x3f, r0	; 63
 2e8:	0f 90       	pop	r0
 2ea:	1f 90       	pop	r1
 2ec:	18 95       	reti

000002ee <sprintf>:
 2ee:	ae e0       	ldi	r26, 0x0E	; 14
 2f0:	b0 e0       	ldi	r27, 0x00	; 0
 2f2:	ed e7       	ldi	r30, 0x7D	; 125
 2f4:	f1 e0       	ldi	r31, 0x01	; 1
 2f6:	0c 94 1f 04 	jmp	0x83e	; 0x83e <__prologue_saves__+0x1c>
 2fa:	0d 89       	ldd	r16, Y+21	; 0x15
 2fc:	1e 89       	ldd	r17, Y+22	; 0x16
 2fe:	86 e0       	ldi	r24, 0x06	; 6
 300:	8c 83       	std	Y+4, r24	; 0x04
 302:	1a 83       	std	Y+2, r17	; 0x02
 304:	09 83       	std	Y+1, r16	; 0x01
 306:	8f ef       	ldi	r24, 0xFF	; 255
 308:	9f e7       	ldi	r25, 0x7F	; 127
 30a:	9e 83       	std	Y+6, r25	; 0x06
 30c:	8d 83       	std	Y+5, r24	; 0x05
 30e:	ae 01       	movw	r20, r28
 310:	47 5e       	subi	r20, 0xE7	; 231
 312:	5f 4f       	sbci	r21, 0xFF	; 255
 314:	6f 89       	ldd	r22, Y+23	; 0x17
 316:	78 8d       	ldd	r23, Y+24	; 0x18
 318:	ce 01       	movw	r24, r28
 31a:	01 96       	adiw	r24, 0x01	; 1
 31c:	0e 94 99 01 	call	0x332	; 0x332 <vfprintf>
 320:	ef 81       	ldd	r30, Y+7	; 0x07
 322:	f8 85       	ldd	r31, Y+8	; 0x08
 324:	e0 0f       	add	r30, r16
 326:	f1 1f       	adc	r31, r17
 328:	10 82       	st	Z, r1
 32a:	2e 96       	adiw	r28, 0x0e	; 14
 32c:	e4 e0       	ldi	r30, 0x04	; 4
 32e:	0c 94 3b 04 	jmp	0x876	; 0x876 <__epilogue_restores__+0x1c>

00000332 <vfprintf>:
 332:	ac e0       	ldi	r26, 0x0C	; 12
 334:	b0 e0       	ldi	r27, 0x00	; 0
 336:	ef e9       	ldi	r30, 0x9F	; 159
 338:	f1 e0       	ldi	r31, 0x01	; 1
 33a:	0c 94 11 04 	jmp	0x822	; 0x822 <__prologue_saves__>
 33e:	7c 01       	movw	r14, r24
 340:	6b 01       	movw	r12, r22
 342:	8a 01       	movw	r16, r20
 344:	fc 01       	movw	r30, r24
 346:	17 82       	std	Z+7, r1	; 0x07
 348:	16 82       	std	Z+6, r1	; 0x06
 34a:	83 81       	ldd	r24, Z+3	; 0x03
 34c:	81 ff       	sbrs	r24, 1
 34e:	bd c1       	rjmp	.+890    	; 0x6ca <__stack+0x26b>
 350:	ce 01       	movw	r24, r28
 352:	01 96       	adiw	r24, 0x01	; 1
 354:	4c 01       	movw	r8, r24
 356:	f7 01       	movw	r30, r14
 358:	93 81       	ldd	r25, Z+3	; 0x03
 35a:	f6 01       	movw	r30, r12
 35c:	93 fd       	sbrc	r25, 3
 35e:	85 91       	lpm	r24, Z+
 360:	93 ff       	sbrs	r25, 3
 362:	81 91       	ld	r24, Z+
 364:	6f 01       	movw	r12, r30
 366:	88 23       	and	r24, r24
 368:	09 f4       	brne	.+2      	; 0x36c <vfprintf+0x3a>
 36a:	ab c1       	rjmp	.+854    	; 0x6c2 <__stack+0x263>
 36c:	85 32       	cpi	r24, 0x25	; 37
 36e:	39 f4       	brne	.+14     	; 0x37e <vfprintf+0x4c>
 370:	93 fd       	sbrc	r25, 3
 372:	85 91       	lpm	r24, Z+
 374:	93 ff       	sbrs	r25, 3
 376:	81 91       	ld	r24, Z+
 378:	6f 01       	movw	r12, r30
 37a:	85 32       	cpi	r24, 0x25	; 37
 37c:	29 f4       	brne	.+10     	; 0x388 <vfprintf+0x56>
 37e:	b7 01       	movw	r22, r14
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 386:	e7 cf       	rjmp	.-50     	; 0x356 <vfprintf+0x24>
 388:	51 2c       	mov	r5, r1
 38a:	31 2c       	mov	r3, r1
 38c:	20 e0       	ldi	r18, 0x00	; 0
 38e:	20 32       	cpi	r18, 0x20	; 32
 390:	a0 f4       	brcc	.+40     	; 0x3ba <vfprintf+0x88>
 392:	8b 32       	cpi	r24, 0x2B	; 43
 394:	69 f0       	breq	.+26     	; 0x3b0 <vfprintf+0x7e>
 396:	30 f4       	brcc	.+12     	; 0x3a4 <vfprintf+0x72>
 398:	80 32       	cpi	r24, 0x20	; 32
 39a:	59 f0       	breq	.+22     	; 0x3b2 <vfprintf+0x80>
 39c:	83 32       	cpi	r24, 0x23	; 35
 39e:	69 f4       	brne	.+26     	; 0x3ba <vfprintf+0x88>
 3a0:	20 61       	ori	r18, 0x10	; 16
 3a2:	2c c0       	rjmp	.+88     	; 0x3fc <vfprintf+0xca>
 3a4:	8d 32       	cpi	r24, 0x2D	; 45
 3a6:	39 f0       	breq	.+14     	; 0x3b6 <vfprintf+0x84>
 3a8:	80 33       	cpi	r24, 0x30	; 48
 3aa:	39 f4       	brne	.+14     	; 0x3ba <vfprintf+0x88>
 3ac:	21 60       	ori	r18, 0x01	; 1
 3ae:	26 c0       	rjmp	.+76     	; 0x3fc <vfprintf+0xca>
 3b0:	22 60       	ori	r18, 0x02	; 2
 3b2:	24 60       	ori	r18, 0x04	; 4
 3b4:	23 c0       	rjmp	.+70     	; 0x3fc <vfprintf+0xca>
 3b6:	28 60       	ori	r18, 0x08	; 8
 3b8:	21 c0       	rjmp	.+66     	; 0x3fc <vfprintf+0xca>
 3ba:	27 fd       	sbrc	r18, 7
 3bc:	27 c0       	rjmp	.+78     	; 0x40c <vfprintf+0xda>
 3be:	30 ed       	ldi	r19, 0xD0	; 208
 3c0:	38 0f       	add	r19, r24
 3c2:	3a 30       	cpi	r19, 0x0A	; 10
 3c4:	78 f4       	brcc	.+30     	; 0x3e4 <vfprintf+0xb2>
 3c6:	26 ff       	sbrs	r18, 6
 3c8:	06 c0       	rjmp	.+12     	; 0x3d6 <vfprintf+0xa4>
 3ca:	fa e0       	ldi	r31, 0x0A	; 10
 3cc:	5f 9e       	mul	r5, r31
 3ce:	30 0d       	add	r19, r0
 3d0:	11 24       	eor	r1, r1
 3d2:	53 2e       	mov	r5, r19
 3d4:	13 c0       	rjmp	.+38     	; 0x3fc <vfprintf+0xca>
 3d6:	8a e0       	ldi	r24, 0x0A	; 10
 3d8:	38 9e       	mul	r3, r24
 3da:	30 0d       	add	r19, r0
 3dc:	11 24       	eor	r1, r1
 3de:	33 2e       	mov	r3, r19
 3e0:	20 62       	ori	r18, 0x20	; 32
 3e2:	0c c0       	rjmp	.+24     	; 0x3fc <vfprintf+0xca>
 3e4:	8e 32       	cpi	r24, 0x2E	; 46
 3e6:	21 f4       	brne	.+8      	; 0x3f0 <vfprintf+0xbe>
 3e8:	26 fd       	sbrc	r18, 6
 3ea:	6b c1       	rjmp	.+726    	; 0x6c2 <__stack+0x263>
 3ec:	20 64       	ori	r18, 0x40	; 64
 3ee:	06 c0       	rjmp	.+12     	; 0x3fc <vfprintf+0xca>
 3f0:	8c 36       	cpi	r24, 0x6C	; 108
 3f2:	11 f4       	brne	.+4      	; 0x3f8 <vfprintf+0xc6>
 3f4:	20 68       	ori	r18, 0x80	; 128
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <vfprintf+0xca>
 3f8:	88 36       	cpi	r24, 0x68	; 104
 3fa:	41 f4       	brne	.+16     	; 0x40c <vfprintf+0xda>
 3fc:	f6 01       	movw	r30, r12
 3fe:	93 fd       	sbrc	r25, 3
 400:	85 91       	lpm	r24, Z+
 402:	93 ff       	sbrs	r25, 3
 404:	81 91       	ld	r24, Z+
 406:	6f 01       	movw	r12, r30
 408:	81 11       	cpse	r24, r1
 40a:	c1 cf       	rjmp	.-126    	; 0x38e <vfprintf+0x5c>
 40c:	98 2f       	mov	r25, r24
 40e:	9f 7d       	andi	r25, 0xDF	; 223
 410:	95 54       	subi	r25, 0x45	; 69
 412:	93 30       	cpi	r25, 0x03	; 3
 414:	28 f4       	brcc	.+10     	; 0x420 <vfprintf+0xee>
 416:	0c 5f       	subi	r16, 0xFC	; 252
 418:	1f 4f       	sbci	r17, 0xFF	; 255
 41a:	ff e3       	ldi	r31, 0x3F	; 63
 41c:	f9 83       	std	Y+1, r31	; 0x01
 41e:	0d c0       	rjmp	.+26     	; 0x43a <vfprintf+0x108>
 420:	83 36       	cpi	r24, 0x63	; 99
 422:	31 f0       	breq	.+12     	; 0x430 <vfprintf+0xfe>
 424:	83 37       	cpi	r24, 0x73	; 115
 426:	71 f0       	breq	.+28     	; 0x444 <vfprintf+0x112>
 428:	83 35       	cpi	r24, 0x53	; 83
 42a:	09 f0       	breq	.+2      	; 0x42e <vfprintf+0xfc>
 42c:	5b c0       	rjmp	.+182    	; 0x4e4 <__stack+0x85>
 42e:	22 c0       	rjmp	.+68     	; 0x474 <__stack+0x15>
 430:	f8 01       	movw	r30, r16
 432:	80 81       	ld	r24, Z
 434:	89 83       	std	Y+1, r24	; 0x01
 436:	0e 5f       	subi	r16, 0xFE	; 254
 438:	1f 4f       	sbci	r17, 0xFF	; 255
 43a:	44 24       	eor	r4, r4
 43c:	43 94       	inc	r4
 43e:	51 2c       	mov	r5, r1
 440:	54 01       	movw	r10, r8
 442:	15 c0       	rjmp	.+42     	; 0x46e <__stack+0xf>
 444:	38 01       	movw	r6, r16
 446:	f2 e0       	ldi	r31, 0x02	; 2
 448:	6f 0e       	add	r6, r31
 44a:	71 1c       	adc	r7, r1
 44c:	f8 01       	movw	r30, r16
 44e:	a0 80       	ld	r10, Z
 450:	b1 80       	ldd	r11, Z+1	; 0x01
 452:	26 ff       	sbrs	r18, 6
 454:	03 c0       	rjmp	.+6      	; 0x45c <vfprintf+0x12a>
 456:	65 2d       	mov	r22, r5
 458:	70 e0       	ldi	r23, 0x00	; 0
 45a:	02 c0       	rjmp	.+4      	; 0x460 <__stack+0x1>
 45c:	6f ef       	ldi	r22, 0xFF	; 255
 45e:	7f ef       	ldi	r23, 0xFF	; 255
 460:	c5 01       	movw	r24, r10
 462:	2c 87       	std	Y+12, r18	; 0x0c
 464:	0e 94 76 03 	call	0x6ec	; 0x6ec <strnlen>
 468:	2c 01       	movw	r4, r24
 46a:	83 01       	movw	r16, r6
 46c:	2c 85       	ldd	r18, Y+12	; 0x0c
 46e:	2f 77       	andi	r18, 0x7F	; 127
 470:	22 2e       	mov	r2, r18
 472:	17 c0       	rjmp	.+46     	; 0x4a2 <__stack+0x43>
 474:	38 01       	movw	r6, r16
 476:	f2 e0       	ldi	r31, 0x02	; 2
 478:	6f 0e       	add	r6, r31
 47a:	71 1c       	adc	r7, r1
 47c:	f8 01       	movw	r30, r16
 47e:	a0 80       	ld	r10, Z
 480:	b1 80       	ldd	r11, Z+1	; 0x01
 482:	26 ff       	sbrs	r18, 6
 484:	03 c0       	rjmp	.+6      	; 0x48c <__stack+0x2d>
 486:	65 2d       	mov	r22, r5
 488:	70 e0       	ldi	r23, 0x00	; 0
 48a:	02 c0       	rjmp	.+4      	; 0x490 <__stack+0x31>
 48c:	6f ef       	ldi	r22, 0xFF	; 255
 48e:	7f ef       	ldi	r23, 0xFF	; 255
 490:	c5 01       	movw	r24, r10
 492:	2c 87       	std	Y+12, r18	; 0x0c
 494:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <strnlen_P>
 498:	2c 01       	movw	r4, r24
 49a:	2c 85       	ldd	r18, Y+12	; 0x0c
 49c:	20 68       	ori	r18, 0x80	; 128
 49e:	22 2e       	mov	r2, r18
 4a0:	83 01       	movw	r16, r6
 4a2:	23 fc       	sbrc	r2, 3
 4a4:	1b c0       	rjmp	.+54     	; 0x4dc <__stack+0x7d>
 4a6:	83 2d       	mov	r24, r3
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	48 16       	cp	r4, r24
 4ac:	59 06       	cpc	r5, r25
 4ae:	b0 f4       	brcc	.+44     	; 0x4dc <__stack+0x7d>
 4b0:	b7 01       	movw	r22, r14
 4b2:	80 e2       	ldi	r24, 0x20	; 32
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 4ba:	3a 94       	dec	r3
 4bc:	f4 cf       	rjmp	.-24     	; 0x4a6 <__stack+0x47>
 4be:	f5 01       	movw	r30, r10
 4c0:	27 fc       	sbrc	r2, 7
 4c2:	85 91       	lpm	r24, Z+
 4c4:	27 fe       	sbrs	r2, 7
 4c6:	81 91       	ld	r24, Z+
 4c8:	5f 01       	movw	r10, r30
 4ca:	b7 01       	movw	r22, r14
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 4d2:	31 10       	cpse	r3, r1
 4d4:	3a 94       	dec	r3
 4d6:	f1 e0       	ldi	r31, 0x01	; 1
 4d8:	4f 1a       	sub	r4, r31
 4da:	51 08       	sbc	r5, r1
 4dc:	41 14       	cp	r4, r1
 4de:	51 04       	cpc	r5, r1
 4e0:	71 f7       	brne	.-36     	; 0x4be <__stack+0x5f>
 4e2:	e5 c0       	rjmp	.+458    	; 0x6ae <__stack+0x24f>
 4e4:	84 36       	cpi	r24, 0x64	; 100
 4e6:	11 f0       	breq	.+4      	; 0x4ec <__stack+0x8d>
 4e8:	89 36       	cpi	r24, 0x69	; 105
 4ea:	39 f5       	brne	.+78     	; 0x53a <__stack+0xdb>
 4ec:	f8 01       	movw	r30, r16
 4ee:	27 ff       	sbrs	r18, 7
 4f0:	07 c0       	rjmp	.+14     	; 0x500 <__stack+0xa1>
 4f2:	60 81       	ld	r22, Z
 4f4:	71 81       	ldd	r23, Z+1	; 0x01
 4f6:	82 81       	ldd	r24, Z+2	; 0x02
 4f8:	93 81       	ldd	r25, Z+3	; 0x03
 4fa:	0c 5f       	subi	r16, 0xFC	; 252
 4fc:	1f 4f       	sbci	r17, 0xFF	; 255
 4fe:	08 c0       	rjmp	.+16     	; 0x510 <__stack+0xb1>
 500:	60 81       	ld	r22, Z
 502:	71 81       	ldd	r23, Z+1	; 0x01
 504:	88 27       	eor	r24, r24
 506:	77 fd       	sbrc	r23, 7
 508:	80 95       	com	r24
 50a:	98 2f       	mov	r25, r24
 50c:	0e 5f       	subi	r16, 0xFE	; 254
 50e:	1f 4f       	sbci	r17, 0xFF	; 255
 510:	2f 76       	andi	r18, 0x6F	; 111
 512:	b2 2e       	mov	r11, r18
 514:	97 ff       	sbrs	r25, 7
 516:	09 c0       	rjmp	.+18     	; 0x52a <__stack+0xcb>
 518:	90 95       	com	r25
 51a:	80 95       	com	r24
 51c:	70 95       	com	r23
 51e:	61 95       	neg	r22
 520:	7f 4f       	sbci	r23, 0xFF	; 255
 522:	8f 4f       	sbci	r24, 0xFF	; 255
 524:	9f 4f       	sbci	r25, 0xFF	; 255
 526:	20 68       	ori	r18, 0x80	; 128
 528:	b2 2e       	mov	r11, r18
 52a:	2a e0       	ldi	r18, 0x0A	; 10
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	a4 01       	movw	r20, r8
 530:	0e 94 b3 03 	call	0x766	; 0x766 <__ultoa_invert>
 534:	a8 2e       	mov	r10, r24
 536:	a8 18       	sub	r10, r8
 538:	44 c0       	rjmp	.+136    	; 0x5c2 <__stack+0x163>
 53a:	85 37       	cpi	r24, 0x75	; 117
 53c:	29 f4       	brne	.+10     	; 0x548 <__stack+0xe9>
 53e:	2f 7e       	andi	r18, 0xEF	; 239
 540:	b2 2e       	mov	r11, r18
 542:	2a e0       	ldi	r18, 0x0A	; 10
 544:	30 e0       	ldi	r19, 0x00	; 0
 546:	25 c0       	rjmp	.+74     	; 0x592 <__stack+0x133>
 548:	f2 2f       	mov	r31, r18
 54a:	f9 7f       	andi	r31, 0xF9	; 249
 54c:	bf 2e       	mov	r11, r31
 54e:	8f 36       	cpi	r24, 0x6F	; 111
 550:	c1 f0       	breq	.+48     	; 0x582 <__stack+0x123>
 552:	18 f4       	brcc	.+6      	; 0x55a <__stack+0xfb>
 554:	88 35       	cpi	r24, 0x58	; 88
 556:	79 f0       	breq	.+30     	; 0x576 <__stack+0x117>
 558:	b4 c0       	rjmp	.+360    	; 0x6c2 <__stack+0x263>
 55a:	80 37       	cpi	r24, 0x70	; 112
 55c:	19 f0       	breq	.+6      	; 0x564 <__stack+0x105>
 55e:	88 37       	cpi	r24, 0x78	; 120
 560:	21 f0       	breq	.+8      	; 0x56a <__stack+0x10b>
 562:	af c0       	rjmp	.+350    	; 0x6c2 <__stack+0x263>
 564:	2f 2f       	mov	r18, r31
 566:	20 61       	ori	r18, 0x10	; 16
 568:	b2 2e       	mov	r11, r18
 56a:	b4 fe       	sbrs	r11, 4
 56c:	0d c0       	rjmp	.+26     	; 0x588 <__stack+0x129>
 56e:	8b 2d       	mov	r24, r11
 570:	84 60       	ori	r24, 0x04	; 4
 572:	b8 2e       	mov	r11, r24
 574:	09 c0       	rjmp	.+18     	; 0x588 <__stack+0x129>
 576:	24 ff       	sbrs	r18, 4
 578:	0a c0       	rjmp	.+20     	; 0x58e <__stack+0x12f>
 57a:	9f 2f       	mov	r25, r31
 57c:	96 60       	ori	r25, 0x06	; 6
 57e:	b9 2e       	mov	r11, r25
 580:	06 c0       	rjmp	.+12     	; 0x58e <__stack+0x12f>
 582:	28 e0       	ldi	r18, 0x08	; 8
 584:	30 e0       	ldi	r19, 0x00	; 0
 586:	05 c0       	rjmp	.+10     	; 0x592 <__stack+0x133>
 588:	20 e1       	ldi	r18, 0x10	; 16
 58a:	30 e0       	ldi	r19, 0x00	; 0
 58c:	02 c0       	rjmp	.+4      	; 0x592 <__stack+0x133>
 58e:	20 e1       	ldi	r18, 0x10	; 16
 590:	32 e0       	ldi	r19, 0x02	; 2
 592:	f8 01       	movw	r30, r16
 594:	b7 fe       	sbrs	r11, 7
 596:	07 c0       	rjmp	.+14     	; 0x5a6 <__stack+0x147>
 598:	60 81       	ld	r22, Z
 59a:	71 81       	ldd	r23, Z+1	; 0x01
 59c:	82 81       	ldd	r24, Z+2	; 0x02
 59e:	93 81       	ldd	r25, Z+3	; 0x03
 5a0:	0c 5f       	subi	r16, 0xFC	; 252
 5a2:	1f 4f       	sbci	r17, 0xFF	; 255
 5a4:	06 c0       	rjmp	.+12     	; 0x5b2 <__stack+0x153>
 5a6:	60 81       	ld	r22, Z
 5a8:	71 81       	ldd	r23, Z+1	; 0x01
 5aa:	80 e0       	ldi	r24, 0x00	; 0
 5ac:	90 e0       	ldi	r25, 0x00	; 0
 5ae:	0e 5f       	subi	r16, 0xFE	; 254
 5b0:	1f 4f       	sbci	r17, 0xFF	; 255
 5b2:	a4 01       	movw	r20, r8
 5b4:	0e 94 b3 03 	call	0x766	; 0x766 <__ultoa_invert>
 5b8:	a8 2e       	mov	r10, r24
 5ba:	a8 18       	sub	r10, r8
 5bc:	fb 2d       	mov	r31, r11
 5be:	ff 77       	andi	r31, 0x7F	; 127
 5c0:	bf 2e       	mov	r11, r31
 5c2:	b6 fe       	sbrs	r11, 6
 5c4:	0b c0       	rjmp	.+22     	; 0x5dc <__stack+0x17d>
 5c6:	2b 2d       	mov	r18, r11
 5c8:	2e 7f       	andi	r18, 0xFE	; 254
 5ca:	a5 14       	cp	r10, r5
 5cc:	50 f4       	brcc	.+20     	; 0x5e2 <__stack+0x183>
 5ce:	b4 fe       	sbrs	r11, 4
 5d0:	0a c0       	rjmp	.+20     	; 0x5e6 <__stack+0x187>
 5d2:	b2 fc       	sbrc	r11, 2
 5d4:	08 c0       	rjmp	.+16     	; 0x5e6 <__stack+0x187>
 5d6:	2b 2d       	mov	r18, r11
 5d8:	2e 7e       	andi	r18, 0xEE	; 238
 5da:	05 c0       	rjmp	.+10     	; 0x5e6 <__stack+0x187>
 5dc:	7a 2c       	mov	r7, r10
 5de:	2b 2d       	mov	r18, r11
 5e0:	03 c0       	rjmp	.+6      	; 0x5e8 <__stack+0x189>
 5e2:	7a 2c       	mov	r7, r10
 5e4:	01 c0       	rjmp	.+2      	; 0x5e8 <__stack+0x189>
 5e6:	75 2c       	mov	r7, r5
 5e8:	24 ff       	sbrs	r18, 4
 5ea:	0d c0       	rjmp	.+26     	; 0x606 <__stack+0x1a7>
 5ec:	fe 01       	movw	r30, r28
 5ee:	ea 0d       	add	r30, r10
 5f0:	f1 1d       	adc	r31, r1
 5f2:	80 81       	ld	r24, Z
 5f4:	80 33       	cpi	r24, 0x30	; 48
 5f6:	11 f4       	brne	.+4      	; 0x5fc <__stack+0x19d>
 5f8:	29 7e       	andi	r18, 0xE9	; 233
 5fa:	09 c0       	rjmp	.+18     	; 0x60e <__stack+0x1af>
 5fc:	22 ff       	sbrs	r18, 2
 5fe:	06 c0       	rjmp	.+12     	; 0x60c <__stack+0x1ad>
 600:	73 94       	inc	r7
 602:	73 94       	inc	r7
 604:	04 c0       	rjmp	.+8      	; 0x60e <__stack+0x1af>
 606:	82 2f       	mov	r24, r18
 608:	86 78       	andi	r24, 0x86	; 134
 60a:	09 f0       	breq	.+2      	; 0x60e <__stack+0x1af>
 60c:	73 94       	inc	r7
 60e:	23 fd       	sbrc	r18, 3
 610:	13 c0       	rjmp	.+38     	; 0x638 <__stack+0x1d9>
 612:	20 ff       	sbrs	r18, 0
 614:	06 c0       	rjmp	.+12     	; 0x622 <__stack+0x1c3>
 616:	5a 2c       	mov	r5, r10
 618:	73 14       	cp	r7, r3
 61a:	18 f4       	brcc	.+6      	; 0x622 <__stack+0x1c3>
 61c:	53 0c       	add	r5, r3
 61e:	57 18       	sub	r5, r7
 620:	73 2c       	mov	r7, r3
 622:	73 14       	cp	r7, r3
 624:	68 f4       	brcc	.+26     	; 0x640 <__stack+0x1e1>
 626:	b7 01       	movw	r22, r14
 628:	80 e2       	ldi	r24, 0x20	; 32
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	2c 87       	std	Y+12, r18	; 0x0c
 62e:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 632:	73 94       	inc	r7
 634:	2c 85       	ldd	r18, Y+12	; 0x0c
 636:	f5 cf       	rjmp	.-22     	; 0x622 <__stack+0x1c3>
 638:	73 14       	cp	r7, r3
 63a:	10 f4       	brcc	.+4      	; 0x640 <__stack+0x1e1>
 63c:	37 18       	sub	r3, r7
 63e:	01 c0       	rjmp	.+2      	; 0x642 <__stack+0x1e3>
 640:	31 2c       	mov	r3, r1
 642:	24 ff       	sbrs	r18, 4
 644:	12 c0       	rjmp	.+36     	; 0x66a <__stack+0x20b>
 646:	b7 01       	movw	r22, r14
 648:	80 e3       	ldi	r24, 0x30	; 48
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	2c 87       	std	Y+12, r18	; 0x0c
 64e:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 652:	2c 85       	ldd	r18, Y+12	; 0x0c
 654:	22 ff       	sbrs	r18, 2
 656:	17 c0       	rjmp	.+46     	; 0x686 <__stack+0x227>
 658:	21 ff       	sbrs	r18, 1
 65a:	03 c0       	rjmp	.+6      	; 0x662 <__stack+0x203>
 65c:	88 e5       	ldi	r24, 0x58	; 88
 65e:	90 e0       	ldi	r25, 0x00	; 0
 660:	02 c0       	rjmp	.+4      	; 0x666 <__stack+0x207>
 662:	88 e7       	ldi	r24, 0x78	; 120
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	b7 01       	movw	r22, r14
 668:	0c c0       	rjmp	.+24     	; 0x682 <__stack+0x223>
 66a:	82 2f       	mov	r24, r18
 66c:	86 78       	andi	r24, 0x86	; 134
 66e:	59 f0       	breq	.+22     	; 0x686 <__stack+0x227>
 670:	21 fd       	sbrc	r18, 1
 672:	02 c0       	rjmp	.+4      	; 0x678 <__stack+0x219>
 674:	80 e2       	ldi	r24, 0x20	; 32
 676:	01 c0       	rjmp	.+2      	; 0x67a <__stack+0x21b>
 678:	8b e2       	ldi	r24, 0x2B	; 43
 67a:	27 fd       	sbrc	r18, 7
 67c:	8d e2       	ldi	r24, 0x2D	; 45
 67e:	b7 01       	movw	r22, r14
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 686:	a5 14       	cp	r10, r5
 688:	38 f4       	brcc	.+14     	; 0x698 <__stack+0x239>
 68a:	b7 01       	movw	r22, r14
 68c:	80 e3       	ldi	r24, 0x30	; 48
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 694:	5a 94       	dec	r5
 696:	f7 cf       	rjmp	.-18     	; 0x686 <__stack+0x227>
 698:	aa 94       	dec	r10
 69a:	f4 01       	movw	r30, r8
 69c:	ea 0d       	add	r30, r10
 69e:	f1 1d       	adc	r31, r1
 6a0:	80 81       	ld	r24, Z
 6a2:	b7 01       	movw	r22, r14
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 6aa:	a1 10       	cpse	r10, r1
 6ac:	f5 cf       	rjmp	.-22     	; 0x698 <__stack+0x239>
 6ae:	33 20       	and	r3, r3
 6b0:	09 f4       	brne	.+2      	; 0x6b4 <__stack+0x255>
 6b2:	51 ce       	rjmp	.-862    	; 0x356 <vfprintf+0x24>
 6b4:	b7 01       	movw	r22, r14
 6b6:	80 e2       	ldi	r24, 0x20	; 32
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	0e 94 81 03 	call	0x702	; 0x702 <fputc>
 6be:	3a 94       	dec	r3
 6c0:	f6 cf       	rjmp	.-20     	; 0x6ae <__stack+0x24f>
 6c2:	f7 01       	movw	r30, r14
 6c4:	86 81       	ldd	r24, Z+6	; 0x06
 6c6:	97 81       	ldd	r25, Z+7	; 0x07
 6c8:	02 c0       	rjmp	.+4      	; 0x6ce <__stack+0x26f>
 6ca:	8f ef       	ldi	r24, 0xFF	; 255
 6cc:	9f ef       	ldi	r25, 0xFF	; 255
 6ce:	2c 96       	adiw	r28, 0x0c	; 12
 6d0:	e2 e1       	ldi	r30, 0x12	; 18
 6d2:	0c 94 2d 04 	jmp	0x85a	; 0x85a <__epilogue_restores__>

000006d6 <strnlen_P>:
 6d6:	fc 01       	movw	r30, r24
 6d8:	05 90       	lpm	r0, Z+
 6da:	61 50       	subi	r22, 0x01	; 1
 6dc:	70 40       	sbci	r23, 0x00	; 0
 6de:	01 10       	cpse	r0, r1
 6e0:	d8 f7       	brcc	.-10     	; 0x6d8 <strnlen_P+0x2>
 6e2:	80 95       	com	r24
 6e4:	90 95       	com	r25
 6e6:	8e 0f       	add	r24, r30
 6e8:	9f 1f       	adc	r25, r31
 6ea:	08 95       	ret

000006ec <strnlen>:
 6ec:	fc 01       	movw	r30, r24
 6ee:	61 50       	subi	r22, 0x01	; 1
 6f0:	70 40       	sbci	r23, 0x00	; 0
 6f2:	01 90       	ld	r0, Z+
 6f4:	01 10       	cpse	r0, r1
 6f6:	d8 f7       	brcc	.-10     	; 0x6ee <strnlen+0x2>
 6f8:	80 95       	com	r24
 6fa:	90 95       	com	r25
 6fc:	8e 0f       	add	r24, r30
 6fe:	9f 1f       	adc	r25, r31
 700:	08 95       	ret

00000702 <fputc>:
 702:	0f 93       	push	r16
 704:	1f 93       	push	r17
 706:	cf 93       	push	r28
 708:	df 93       	push	r29
 70a:	18 2f       	mov	r17, r24
 70c:	09 2f       	mov	r16, r25
 70e:	eb 01       	movw	r28, r22
 710:	8b 81       	ldd	r24, Y+3	; 0x03
 712:	81 fd       	sbrc	r24, 1
 714:	03 c0       	rjmp	.+6      	; 0x71c <fputc+0x1a>
 716:	8f ef       	ldi	r24, 0xFF	; 255
 718:	9f ef       	ldi	r25, 0xFF	; 255
 71a:	20 c0       	rjmp	.+64     	; 0x75c <fputc+0x5a>
 71c:	82 ff       	sbrs	r24, 2
 71e:	10 c0       	rjmp	.+32     	; 0x740 <fputc+0x3e>
 720:	4e 81       	ldd	r20, Y+6	; 0x06
 722:	5f 81       	ldd	r21, Y+7	; 0x07
 724:	2c 81       	ldd	r18, Y+4	; 0x04
 726:	3d 81       	ldd	r19, Y+5	; 0x05
 728:	42 17       	cp	r20, r18
 72a:	53 07       	cpc	r21, r19
 72c:	7c f4       	brge	.+30     	; 0x74c <fputc+0x4a>
 72e:	e8 81       	ld	r30, Y
 730:	f9 81       	ldd	r31, Y+1	; 0x01
 732:	9f 01       	movw	r18, r30
 734:	2f 5f       	subi	r18, 0xFF	; 255
 736:	3f 4f       	sbci	r19, 0xFF	; 255
 738:	39 83       	std	Y+1, r19	; 0x01
 73a:	28 83       	st	Y, r18
 73c:	10 83       	st	Z, r17
 73e:	06 c0       	rjmp	.+12     	; 0x74c <fputc+0x4a>
 740:	e8 85       	ldd	r30, Y+8	; 0x08
 742:	f9 85       	ldd	r31, Y+9	; 0x09
 744:	81 2f       	mov	r24, r17
 746:	09 95       	icall
 748:	89 2b       	or	r24, r25
 74a:	29 f7       	brne	.-54     	; 0x716 <fputc+0x14>
 74c:	2e 81       	ldd	r18, Y+6	; 0x06
 74e:	3f 81       	ldd	r19, Y+7	; 0x07
 750:	2f 5f       	subi	r18, 0xFF	; 255
 752:	3f 4f       	sbci	r19, 0xFF	; 255
 754:	3f 83       	std	Y+7, r19	; 0x07
 756:	2e 83       	std	Y+6, r18	; 0x06
 758:	81 2f       	mov	r24, r17
 75a:	90 2f       	mov	r25, r16
 75c:	df 91       	pop	r29
 75e:	cf 91       	pop	r28
 760:	1f 91       	pop	r17
 762:	0f 91       	pop	r16
 764:	08 95       	ret

00000766 <__ultoa_invert>:
 766:	fa 01       	movw	r30, r20
 768:	aa 27       	eor	r26, r26
 76a:	28 30       	cpi	r18, 0x08	; 8
 76c:	51 f1       	breq	.+84     	; 0x7c2 <__ultoa_invert+0x5c>
 76e:	20 31       	cpi	r18, 0x10	; 16
 770:	81 f1       	breq	.+96     	; 0x7d2 <__ultoa_invert+0x6c>
 772:	e8 94       	clt
 774:	6f 93       	push	r22
 776:	6e 7f       	andi	r22, 0xFE	; 254
 778:	6e 5f       	subi	r22, 0xFE	; 254
 77a:	7f 4f       	sbci	r23, 0xFF	; 255
 77c:	8f 4f       	sbci	r24, 0xFF	; 255
 77e:	9f 4f       	sbci	r25, 0xFF	; 255
 780:	af 4f       	sbci	r26, 0xFF	; 255
 782:	b1 e0       	ldi	r27, 0x01	; 1
 784:	3e d0       	rcall	.+124    	; 0x802 <__ultoa_invert+0x9c>
 786:	b4 e0       	ldi	r27, 0x04	; 4
 788:	3c d0       	rcall	.+120    	; 0x802 <__ultoa_invert+0x9c>
 78a:	67 0f       	add	r22, r23
 78c:	78 1f       	adc	r23, r24
 78e:	89 1f       	adc	r24, r25
 790:	9a 1f       	adc	r25, r26
 792:	a1 1d       	adc	r26, r1
 794:	68 0f       	add	r22, r24
 796:	79 1f       	adc	r23, r25
 798:	8a 1f       	adc	r24, r26
 79a:	91 1d       	adc	r25, r1
 79c:	a1 1d       	adc	r26, r1
 79e:	6a 0f       	add	r22, r26
 7a0:	71 1d       	adc	r23, r1
 7a2:	81 1d       	adc	r24, r1
 7a4:	91 1d       	adc	r25, r1
 7a6:	a1 1d       	adc	r26, r1
 7a8:	20 d0       	rcall	.+64     	; 0x7ea <__ultoa_invert+0x84>
 7aa:	09 f4       	brne	.+2      	; 0x7ae <__ultoa_invert+0x48>
 7ac:	68 94       	set
 7ae:	3f 91       	pop	r19
 7b0:	2a e0       	ldi	r18, 0x0A	; 10
 7b2:	26 9f       	mul	r18, r22
 7b4:	11 24       	eor	r1, r1
 7b6:	30 19       	sub	r19, r0
 7b8:	30 5d       	subi	r19, 0xD0	; 208
 7ba:	31 93       	st	Z+, r19
 7bc:	de f6       	brtc	.-74     	; 0x774 <__ultoa_invert+0xe>
 7be:	cf 01       	movw	r24, r30
 7c0:	08 95       	ret
 7c2:	46 2f       	mov	r20, r22
 7c4:	47 70       	andi	r20, 0x07	; 7
 7c6:	40 5d       	subi	r20, 0xD0	; 208
 7c8:	41 93       	st	Z+, r20
 7ca:	b3 e0       	ldi	r27, 0x03	; 3
 7cc:	0f d0       	rcall	.+30     	; 0x7ec <__ultoa_invert+0x86>
 7ce:	c9 f7       	brne	.-14     	; 0x7c2 <__ultoa_invert+0x5c>
 7d0:	f6 cf       	rjmp	.-20     	; 0x7be <__ultoa_invert+0x58>
 7d2:	46 2f       	mov	r20, r22
 7d4:	4f 70       	andi	r20, 0x0F	; 15
 7d6:	40 5d       	subi	r20, 0xD0	; 208
 7d8:	4a 33       	cpi	r20, 0x3A	; 58
 7da:	18 f0       	brcs	.+6      	; 0x7e2 <__ultoa_invert+0x7c>
 7dc:	49 5d       	subi	r20, 0xD9	; 217
 7de:	31 fd       	sbrc	r19, 1
 7e0:	40 52       	subi	r20, 0x20	; 32
 7e2:	41 93       	st	Z+, r20
 7e4:	02 d0       	rcall	.+4      	; 0x7ea <__ultoa_invert+0x84>
 7e6:	a9 f7       	brne	.-22     	; 0x7d2 <__ultoa_invert+0x6c>
 7e8:	ea cf       	rjmp	.-44     	; 0x7be <__ultoa_invert+0x58>
 7ea:	b4 e0       	ldi	r27, 0x04	; 4
 7ec:	a6 95       	lsr	r26
 7ee:	97 95       	ror	r25
 7f0:	87 95       	ror	r24
 7f2:	77 95       	ror	r23
 7f4:	67 95       	ror	r22
 7f6:	ba 95       	dec	r27
 7f8:	c9 f7       	brne	.-14     	; 0x7ec <__ultoa_invert+0x86>
 7fa:	00 97       	sbiw	r24, 0x00	; 0
 7fc:	61 05       	cpc	r22, r1
 7fe:	71 05       	cpc	r23, r1
 800:	08 95       	ret
 802:	9b 01       	movw	r18, r22
 804:	ac 01       	movw	r20, r24
 806:	0a 2e       	mov	r0, r26
 808:	06 94       	lsr	r0
 80a:	57 95       	ror	r21
 80c:	47 95       	ror	r20
 80e:	37 95       	ror	r19
 810:	27 95       	ror	r18
 812:	ba 95       	dec	r27
 814:	c9 f7       	brne	.-14     	; 0x808 <__ultoa_invert+0xa2>
 816:	62 0f       	add	r22, r18
 818:	73 1f       	adc	r23, r19
 81a:	84 1f       	adc	r24, r20
 81c:	95 1f       	adc	r25, r21
 81e:	a0 1d       	adc	r26, r0
 820:	08 95       	ret

00000822 <__prologue_saves__>:
 822:	2f 92       	push	r2
 824:	3f 92       	push	r3
 826:	4f 92       	push	r4
 828:	5f 92       	push	r5
 82a:	6f 92       	push	r6
 82c:	7f 92       	push	r7
 82e:	8f 92       	push	r8
 830:	9f 92       	push	r9
 832:	af 92       	push	r10
 834:	bf 92       	push	r11
 836:	cf 92       	push	r12
 838:	df 92       	push	r13
 83a:	ef 92       	push	r14
 83c:	ff 92       	push	r15
 83e:	0f 93       	push	r16
 840:	1f 93       	push	r17
 842:	cf 93       	push	r28
 844:	df 93       	push	r29
 846:	cd b7       	in	r28, 0x3d	; 61
 848:	de b7       	in	r29, 0x3e	; 62
 84a:	ca 1b       	sub	r28, r26
 84c:	db 0b       	sbc	r29, r27
 84e:	0f b6       	in	r0, 0x3f	; 63
 850:	f8 94       	cli
 852:	de bf       	out	0x3e, r29	; 62
 854:	0f be       	out	0x3f, r0	; 63
 856:	cd bf       	out	0x3d, r28	; 61
 858:	09 94       	ijmp

0000085a <__epilogue_restores__>:
 85a:	2a 88       	ldd	r2, Y+18	; 0x12
 85c:	39 88       	ldd	r3, Y+17	; 0x11
 85e:	48 88       	ldd	r4, Y+16	; 0x10
 860:	5f 84       	ldd	r5, Y+15	; 0x0f
 862:	6e 84       	ldd	r6, Y+14	; 0x0e
 864:	7d 84       	ldd	r7, Y+13	; 0x0d
 866:	8c 84       	ldd	r8, Y+12	; 0x0c
 868:	9b 84       	ldd	r9, Y+11	; 0x0b
 86a:	aa 84       	ldd	r10, Y+10	; 0x0a
 86c:	b9 84       	ldd	r11, Y+9	; 0x09
 86e:	c8 84       	ldd	r12, Y+8	; 0x08
 870:	df 80       	ldd	r13, Y+7	; 0x07
 872:	ee 80       	ldd	r14, Y+6	; 0x06
 874:	fd 80       	ldd	r15, Y+5	; 0x05
 876:	0c 81       	ldd	r16, Y+4	; 0x04
 878:	1b 81       	ldd	r17, Y+3	; 0x03
 87a:	aa 81       	ldd	r26, Y+2	; 0x02
 87c:	b9 81       	ldd	r27, Y+1	; 0x01
 87e:	ce 0f       	add	r28, r30
 880:	d1 1d       	adc	r29, r1
 882:	0f b6       	in	r0, 0x3f	; 63
 884:	f8 94       	cli
 886:	de bf       	out	0x3e, r29	; 62
 888:	0f be       	out	0x3f, r0	; 63
 88a:	cd bf       	out	0x3d, r28	; 61
 88c:	ed 01       	movw	r28, r26
 88e:	08 95       	ret

00000890 <_exit>:
 890:	f8 94       	cli

00000892 <__stop_program>:
 892:	ff cf       	rjmp	.-2      	; 0x892 <__stop_program>
