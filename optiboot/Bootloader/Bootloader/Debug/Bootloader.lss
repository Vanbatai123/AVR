
Bootloader.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000344  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002f0  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000344  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000374  2**2
                  CONTENTS, READONLY
  4 .version      00000002  00000000  00000000  000003b0  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  000003b2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b0a  00000000  00000000  000003fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000077f  00000000  00000000  00000f04  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004d8  00000000  00000000  00001683  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000074  00000000  00000000  00001b5c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c0  00000000  00000000  00001bd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000370  00000000  00000000  00001f90  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  00002300  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
   8:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
   c:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  10:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  14:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  18:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  1c:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  20:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  24:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  28:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  2c:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  30:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  34:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  38:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  3c:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  40:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  44:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  48:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  4c:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  50:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  54:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  58:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  5c:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  60:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>
  64:	0c 94 48 01 	jmp	0x290	; 0x290 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 3e 00 	call	0x7c	; 0x7c <main>
  78:	0c 94 76 01 	jmp	0x2ec	; 0x2ec <_exit>

0000007c <main>:
  );
}

void watchdogConfig(uint8_t x) {
  WDTCSR = _BV(WDCE) | _BV(WDE);
  WDTCSR = x;
  7c:	11 24       	eor	r1, r1
  7e:	84 b7       	in	r24, 0x34	; 52
  80:	14 be       	out	0x34, r1	; 52
  82:	81 ff       	sbrs	r24, 1
  84:	0e 94 6e 01 	call	0x2dc	; 0x2dc <appStart>
  88:	82 e0       	ldi	r24, 0x02	; 2
  8a:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  8e:	88 e1       	ldi	r24, 0x18	; 24
  90:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  94:	96 e0       	ldi	r25, 0x06	; 6
  96:	90 93 c2 00 	sts	0x00C2, r25	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  9a:	92 e8       	ldi	r25, 0x82	; 130
  9c:	90 93 c4 00 	sts	0x00C4, r25	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  a0:	e0 e6       	ldi	r30, 0x60	; 96
  a2:	f0 e0       	ldi	r31, 0x00	; 0
  a4:	80 83       	st	Z, r24
  a6:	8e e0       	ldi	r24, 0x0E	; 14
  a8:	80 83       	st	Z, r24
  aa:	25 9a       	sbi	0x04, 5	; 4
  ac:	c0 e0       	ldi	r28, 0x00	; 0
  ae:	d0 e0       	ldi	r29, 0x00	; 0
  b0:	0f 2e       	mov	r0, r31
  b2:	f0 e6       	ldi	r31, 0x60	; 96
  b4:	af 2e       	mov	r10, r31
  b6:	b1 2c       	mov	r11, r1
  b8:	f0 2d       	mov	r31, r0
  ba:	0f 2e       	mov	r0, r31
  bc:	f8 e1       	ldi	r31, 0x18	; 24
  be:	8f 2e       	mov	r8, r31
  c0:	f0 2d       	mov	r31, r0
  c2:	68 94       	set
  c4:	99 24       	eor	r9, r9
  c6:	93 f8       	bld	r9, 3
  c8:	0f 2e       	mov	r0, r31
  ca:	f3 e0       	ldi	r31, 0x03	; 3
  cc:	5f 2e       	mov	r5, r31
  ce:	f0 2d       	mov	r31, r0
  d0:	11 e0       	ldi	r17, 0x01	; 1
  d2:	0f 2e       	mov	r0, r31
  d4:	f5 e0       	ldi	r31, 0x05	; 5
  d6:	6f 2e       	mov	r6, r31
  d8:	f0 2d       	mov	r31, r0
  da:	0f 2e       	mov	r0, r31
  dc:	f1 e1       	ldi	r31, 0x11	; 17
  de:	7f 2e       	mov	r7, r31
  e0:	f0 2d       	mov	r31, r0
  e2:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
  e6:	81 34       	cpi	r24, 0x41	; 65
  e8:	a9 f4       	brne	.+42     	; 0x114 <main+0x98>
  ea:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
  ee:	08 2f       	mov	r16, r24
  f0:	0e 94 5f 01 	call	0x2be	; 0x2be <verifySpace>
  f4:	02 38       	cpi	r16, 0x82	; 130
  f6:	21 f4       	brne	.+8      	; 0x100 <main+0x84>
  f8:	84 e0       	ldi	r24, 0x04	; 4
  fa:	0e 94 4a 01 	call	0x294	; 0x294 <putch>
  fe:	c4 c0       	rjmp	.+392    	; 0x288 <main+0x20c>
 100:	01 38       	cpi	r16, 0x81	; 129
 102:	21 f4       	brne	.+8      	; 0x10c <main+0x90>
 104:	84 e0       	ldi	r24, 0x04	; 4
 106:	0e 94 4a 01 	call	0x294	; 0x294 <putch>
 10a:	be c0       	rjmp	.+380    	; 0x288 <main+0x20c>
 10c:	85 2d       	mov	r24, r5
 10e:	0e 94 4a 01 	call	0x294	; 0x294 <putch>
 112:	ba c0       	rjmp	.+372    	; 0x288 <main+0x20c>
 114:	82 34       	cpi	r24, 0x42	; 66
 116:	41 f4       	brne	.+16     	; 0x128 <main+0xac>
 118:	04 e1       	ldi	r16, 0x14	; 20
 11a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 11e:	01 50       	subi	r16, 0x01	; 1
 120:	e1 f7       	brne	.-8      	; 0x11a <main+0x9e>
 122:	0e 94 5f 01 	call	0x2be	; 0x2be <verifySpace>
 126:	b0 c0       	rjmp	.+352    	; 0x288 <main+0x20c>
 128:	85 34       	cpi	r24, 0x45	; 69
 12a:	69 f4       	brne	.+26     	; 0x146 <main+0xca>
 12c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 130:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 134:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 138:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 13c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 140:	0e 94 5f 01 	call	0x2be	; 0x2be <verifySpace>
 144:	a1 c0       	rjmp	.+322    	; 0x288 <main+0x20c>
 146:	85 35       	cpi	r24, 0x55	; 85
 148:	61 f4       	brne	.+24     	; 0x162 <main+0xe6>
 14a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 14e:	c8 2f       	mov	r28, r24
 150:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 154:	d0 e0       	ldi	r29, 0x00	; 0
 156:	d8 2b       	or	r29, r24
 158:	cc 0f       	add	r28, r28
 15a:	dd 1f       	adc	r29, r29
 15c:	0e 94 5f 01 	call	0x2be	; 0x2be <verifySpace>
 160:	93 c0       	rjmp	.+294    	; 0x288 <main+0x20c>
 162:	86 35       	cpi	r24, 0x56	; 86
 164:	71 f4       	brne	.+28     	; 0x182 <main+0x106>
 166:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 16a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 16e:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 172:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 176:	0e 94 5f 01 	call	0x2be	; 0x2be <verifySpace>
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	0e 94 4a 01 	call	0x294	; 0x294 <putch>
 180:	83 c0       	rjmp	.+262    	; 0x288 <main+0x20c>
 182:	84 36       	cpi	r24, 0x64	; 100
 184:	09 f0       	breq	.+2      	; 0x188 <main+0x10c>
 186:	48 c0       	rjmp	.+144    	; 0x218 <main+0x19c>
 188:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 18c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 190:	c8 2e       	mov	r12, r24
 192:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 196:	c1 15       	cp	r28, r1
 198:	80 e7       	ldi	r24, 0x70	; 112
 19a:	d8 07       	cpc	r29, r24
 19c:	48 f0       	brcs	.+18     	; 0x1b0 <main+0x134>
 19e:	ca 94       	dec	r12
 1a0:	d1 2c       	mov	r13, r1
 1a2:	e1 e0       	ldi	r30, 0x01	; 1
 1a4:	ce 0e       	add	r12, r30
 1a6:	de 1e       	adc	r13, r30
 1a8:	e1 2c       	mov	r14, r1
 1aa:	ff 24       	eor	r15, r15
 1ac:	f3 94       	inc	r15
 1ae:	04 c0       	rjmp	.+8      	; 0x1b8 <main+0x13c>
 1b0:	fe 01       	movw	r30, r28
 1b2:	57 be       	out	0x37, r5	; 55
 1b4:	e8 95       	spm
 1b6:	f3 cf       	rjmp	.-26     	; 0x19e <main+0x122>
 1b8:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 1bc:	f7 01       	movw	r30, r14
 1be:	81 93       	st	Z+, r24
 1c0:	7f 01       	movw	r14, r30
 1c2:	ec 15       	cp	r30, r12
 1c4:	fd 05       	cpc	r31, r13
 1c6:	c1 f7       	brne	.-16     	; 0x1b8 <main+0x13c>
 1c8:	c1 15       	cp	r28, r1
 1ca:	f0 e7       	ldi	r31, 0x70	; 112
 1cc:	df 07       	cpc	r29, r31
 1ce:	18 f0       	brcs	.+6      	; 0x1d6 <main+0x15a>
 1d0:	fe 01       	movw	r30, r28
 1d2:	57 be       	out	0x37, r5	; 55
 1d4:	e8 95       	spm
 1d6:	0e 94 5f 01 	call	0x2be	; 0x2be <verifySpace>
 1da:	07 b6       	in	r0, 0x37	; 55
 1dc:	00 fc       	sbrc	r0, 0
 1de:	fd cf       	rjmp	.-6      	; 0x1da <main+0x15e>
 1e0:	fe 01       	movw	r30, r28
 1e2:	a0 e0       	ldi	r26, 0x00	; 0
 1e4:	b1 e0       	ldi	r27, 0x01	; 1
 1e6:	8c 91       	ld	r24, X
 1e8:	11 96       	adiw	r26, 0x01	; 1
 1ea:	2c 91       	ld	r18, X
 1ec:	11 97       	sbiw	r26, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	92 2b       	or	r25, r18
 1f2:	0c 01       	movw	r0, r24
 1f4:	17 bf       	out	0x37, r17	; 55
 1f6:	e8 95       	spm
 1f8:	11 24       	eor	r1, r1
 1fa:	32 96       	adiw	r30, 0x02	; 2
 1fc:	12 96       	adiw	r26, 0x02	; 2
 1fe:	a0 38       	cpi	r26, 0x80	; 128
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	b8 07       	cpc	r27, r24
 204:	81 f7       	brne	.-32     	; 0x1e6 <main+0x16a>
 206:	fe 01       	movw	r30, r28
 208:	67 be       	out	0x37, r6	; 55
 20a:	e8 95       	spm
 20c:	07 b6       	in	r0, 0x37	; 55
 20e:	00 fc       	sbrc	r0, 0
 210:	fd cf       	rjmp	.-6      	; 0x20c <main+0x190>
 212:	77 be       	out	0x37, r7	; 55
 214:	e8 95       	spm
 216:	38 c0       	rjmp	.+112    	; 0x288 <main+0x20c>
 218:	84 37       	cpi	r24, 0x74	; 116
 21a:	f1 f4       	brne	.+60     	; 0x258 <main+0x1dc>
 21c:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 220:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 224:	f8 2e       	mov	r15, r24
 226:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 22a:	0e 94 5f 01 	call	0x2be	; 0x2be <verifySpace>
 22e:	fa 94       	dec	r15
 230:	6e 01       	movw	r12, r28
 232:	ff ef       	ldi	r31, 0xFF	; 255
 234:	cf 1a       	sub	r12, r31
 236:	df 0a       	sbc	r13, r31
 238:	cf 0c       	add	r12, r15
 23a:	d1 1c       	adc	r13, r1
 23c:	7e 01       	movw	r14, r28
 23e:	8f ef       	ldi	r24, 0xFF	; 255
 240:	e8 1a       	sub	r14, r24
 242:	f8 0a       	sbc	r15, r24
 244:	fe 01       	movw	r30, r28
 246:	84 91       	lpm	r24, Z
 248:	0e 94 4a 01 	call	0x294	; 0x294 <putch>
 24c:	e7 01       	movw	r28, r14
 24e:	ce 14       	cp	r12, r14
 250:	df 04       	cpc	r13, r15
 252:	a1 f7       	brne	.-24     	; 0x23c <main+0x1c0>
 254:	e6 01       	movw	r28, r12
 256:	18 c0       	rjmp	.+48     	; 0x288 <main+0x20c>
 258:	85 37       	cpi	r24, 0x75	; 117
 25a:	61 f4       	brne	.+24     	; 0x274 <main+0x1f8>
 25c:	0e 94 5f 01 	call	0x2be	; 0x2be <verifySpace>
 260:	8e e1       	ldi	r24, 0x1E	; 30
 262:	0e 94 4a 01 	call	0x294	; 0x294 <putch>
 266:	85 e9       	ldi	r24, 0x95	; 149
 268:	0e 94 4a 01 	call	0x294	; 0x294 <putch>
 26c:	84 e1       	ldi	r24, 0x14	; 20
 26e:	0e 94 4a 01 	call	0x294	; 0x294 <putch>
 272:	0a c0       	rjmp	.+20     	; 0x288 <main+0x20c>
 274:	81 35       	cpi	r24, 0x51	; 81
 276:	31 f4       	brne	.+12     	; 0x284 <main+0x208>
 278:	f5 01       	movw	r30, r10
 27a:	80 82       	st	Z, r8
 27c:	90 82       	st	Z, r9
 27e:	0e 94 5f 01 	call	0x2be	; 0x2be <verifySpace>
 282:	02 c0       	rjmp	.+4      	; 0x288 <main+0x20c>
 284:	0e 94 5f 01 	call	0x2be	; 0x2be <verifySpace>
 288:	80 e1       	ldi	r24, 0x10	; 16
 28a:	0e 94 4a 01 	call	0x294	; 0x294 <putch>
 28e:	29 cf       	rjmp	.-430    	; 0xe2 <main+0x66>

00000290 <__bad_interrupt>:
 290:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000294 <putch>:
 294:	e0 ec       	ldi	r30, 0xC0	; 192
 296:	f0 e0       	ldi	r31, 0x00	; 0
 298:	90 81       	ld	r25, Z
 29a:	95 ff       	sbrs	r25, 5
 29c:	fd cf       	rjmp	.-6      	; 0x298 <putch+0x4>
 29e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 2a2:	08 95       	ret

000002a4 <getch>:
 2a4:	e0 ec       	ldi	r30, 0xC0	; 192
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	88 23       	and	r24, r24
 2ac:	ec f7       	brge	.-6      	; 0x2a8 <getch+0x4>
 2ae:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
 2b2:	84 fd       	sbrc	r24, 4
 2b4:	01 c0       	rjmp	.+2      	; 0x2b8 <getch+0x14>
 2b6:	a8 95       	wdr
 2b8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 2bc:	08 95       	ret

000002be <verifySpace>:
 2be:	0e 94 52 01 	call	0x2a4	; 0x2a4 <getch>
 2c2:	80 32       	cpi	r24, 0x20	; 32
 2c4:	39 f0       	breq	.+14     	; 0x2d4 <verifySpace+0x16>
 2c6:	e0 e6       	ldi	r30, 0x60	; 96
 2c8:	f0 e0       	ldi	r31, 0x00	; 0
 2ca:	88 e1       	ldi	r24, 0x18	; 24
 2cc:	80 83       	st	Z, r24
 2ce:	88 e0       	ldi	r24, 0x08	; 8
 2d0:	80 83       	st	Z, r24
 2d2:	ff cf       	rjmp	.-2      	; 0x2d2 <verifySpace+0x14>
 2d4:	84 e1       	ldi	r24, 0x14	; 20
 2d6:	0e 94 4a 01 	call	0x294	; 0x294 <putch>
 2da:	08 95       	ret

000002dc <appStart>:
    "wdr\n"
  );
}

void watchdogConfig(uint8_t x) {
  WDTCSR = _BV(WDCE) | _BV(WDE);
 2dc:	e0 e6       	ldi	r30, 0x60	; 96
 2de:	f0 e0       	ldi	r31, 0x00	; 0
 2e0:	88 e1       	ldi	r24, 0x18	; 24
 2e2:	80 83       	st	Z, r24
  WDTCSR = x;
 2e4:	10 82       	st	Z, r1
}

void appStart() {
  watchdogConfig(WATCHDOG_OFF);
  __asm__ __volatile__ (
 2e6:	ee 27       	eor	r30, r30
 2e8:	ff 27       	eor	r31, r31
 2ea:	09 94       	ijmp

000002ec <_exit>:
 2ec:	f8 94       	cli

000002ee <__stop_program>:
 2ee:	ff cf       	rjmp	.-2      	; 0x2ee <__stop_program>
